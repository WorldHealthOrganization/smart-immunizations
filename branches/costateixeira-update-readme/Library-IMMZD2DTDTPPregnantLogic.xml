<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZD2DTDTPPregnantLogic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTDTPPregnantLogic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTDTPPregnantLogic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-IMMZD2DTDTPPregnantLogic.html">IMMZD2DTDTPPregnantLogic</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Experimental: </b></th>
            <td style="padding-left: 4px;">true</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-07-02 07:24:46+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines decision support logic for the IMMZ.D2.DT.DTP.Pregnancy decision table in the Immunization CPG</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><a href="Library-WHOCommon.html">WHOCommon</a></li>
                  
                    <li><a href="Library-IMMZCommon.html">IMMZCommon</a></li>
                  
                    <li><a href="Library-WHOConcepts.html">WHOConcepts</a></li>
                  
                    <li><a href="Library-WHOElements.html">WHOElements</a></li>
                  
                    <li><a href="Library-IMMZD2DTDTPEncounterElements.html">IMMZD2DTDTPEncounterElements</a></li>
                  
                    <li><a href="Library-IMMZEncounterElements.html">IMMZEncounterElements</a></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>EncounterId</th><th>string</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'delayed or interrupted series' decision logic</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'delayed or interrupted series' decision logic Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'pregnancy starting with 3 doses' decision logic</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'pregnancy starting with 3 doses' decision logic Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'pregnancy starting with 4 doses' decision logic</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client should follow 'pregnancy starting with 4 doses' decision logic Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Tetanus and diphtheria immunization schedule is complete Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Tetanus and diphtheria immunization schedule is complete Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Tetanus and diphtheria immunization schedule is complete</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Tetanus and diphtheria immunization schedule is complete Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">
/*
 * Library: IMMZD2DTDTPPregnantLogic (IMMZ.D2.DT.DTP.Pregnancy)
 * Rule: Determine if the client is due for a diphtheria–tetanus–pertussis (DTP) vaccination according to the national immunization schedule
 * Decision Table: Determine whether DTP-containing vaccines are needed for pregnant women
 * Trigger: IMMZ.D2 Determine required vaccination(s) if any
 */
library IMMZD2DTDTPPregnantLogic

using FHIR version '4.0.1'
include FHIRHelpers version '4.0.1'

include WHOCommon called WC
include IMMZCommon called IC
include WHOConcepts called Concepts
include WHOElements called WE
include IMMZD2DTDTPEncounterElements called Encounter
include IMMZEncounterElements called IE

parameter Today Date default Today()
parameter EncounterId String

context Patient

/*
@dynamicValue: Guidance
*/
define &quot;Guidance&quot;:
  case
    when &quot;Client should follow 'delayed or interrupted series' decision logic&quot; then &quot;Client should follow 'delayed or interrupted series' decision logic Guidance&quot;
    when &quot;Client should follow 'pregnancy starting with 3 doses' decision logic&quot; then &quot;Client should follow 'pregnancy starting with 3 doses' decision logic Guidance&quot;
    when &quot;Client should follow 'pregnancy starting with 4 doses' decision logic&quot; then &quot;Client should follow 'pregnancy starting with 4 doses' decision logic Guidance&quot;
    when &quot;Tetanus and diphtheria immunization schedule is complete&quot; then &quot;Tetanus and diphtheria immunization schedule is complete Guidance&quot;
    else ''
  end

define &quot;Has Guidance&quot;:
  &quot;Guidance&quot; is not null and &quot;Guidance&quot; != ''

/*
@output: Client should follow 'delayed or interrupted series' decision logic
@pseudocode: 
*/
define &quot;Client should follow 'delayed or interrupted series' decision logic&quot;:
  Encounter.&quot;No DTP primary series doses were administered&quot;
    and Encounter.&quot;Client is currently pregnant&quot;

/*
@output: Client should follow 'delayed or interrupted series' decision logic Guidance
@guidance: The client has a delayed start. Please follow the 'delayed or interrupted' schedule.
*/
define &quot;Client should follow 'delayed or interrupted series' decision logic Guidance&quot;:
  'The client has a delayed start. Please follow the \'delayed or interrupted\' schedule.'

/*
@output: Client should follow 'pregnancy starting with 3 doses' decision logic
@pseudocode: 
*/
define &quot;Client should follow 'pregnancy starting with 3 doses' decision logic&quot;:
  Encounter.&quot;Three DTP primary series doses were administered&quot;
    and Encounter.&quot;No tetanus and diphtheria booster dose was administered&quot;
    and Encounter.&quot;Client is currently pregnant&quot;

/*
@output: Client should follow 'pregnancy starting with 3 doses' decision logic Guidance
@guidance: The client has received 3 tetanus-containing vaccine doses during childhood. Please follow the 'pregnancy starting with 3 doses' schedule.
*/
define &quot;Client should follow 'pregnancy starting with 3 doses' decision logic Guidance&quot;:
  'The client has received 3 tetanus-containing vaccine doses during childhood. Please follow the \'pregnancy starting with 3 doses\' schedule.'

/*
@output: Client should follow 'pregnancy starting with 4 doses' decision logic
@pseudocode: 
*/
define &quot;Client should follow 'pregnancy starting with 4 doses' decision logic&quot;:
  Encounter.&quot;Three DTP primary series doses were administered&quot;
    and Encounter.&quot;One tetanus and diphtheria booster dose was administered&quot;
    and Encounter.&quot;Client is currently pregnant&quot;

/*
@output: Client should follow 'pregnancy starting with 4 doses' decision logic Guidance
@guidance: The client has received 4 tetanus-containing vaccines doses during childhood or pre-adulthood. Please follow the 'pregnancy starting with 4 doses' schedule.
*/
define &quot;Client should follow 'pregnancy starting with 4 doses' decision logic Guidance&quot;:
  'The client has received 4 tetanus-containing vaccines doses during childhood or pre-adulthood. Please follow the \'pregnancy starting with 4 doses\' schedule.'

/*
@output: Tetanus and diphtheria immunization schedule is complete Case 1
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot; (where &quot;Vaccine type&quot; = &quot;Tetanus and diphtheria-containing vaccines&quot;)
*/
define &quot;Tetanus and diphtheria immunization schedule is complete Case 1&quot;:
  Encounter.&quot;Three DTP primary series doses were administered&quot;
    and Encounter.&quot;Two tetanus and diphtheria booster doses were administered&quot;

/*
@output: Tetanus and diphtheria immunization schedule is complete Case 2
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot; (where &quot;Vaccine type&quot; = &quot;Tetanus and diphtheria-containing vaccines&quot;)
*/
define &quot;Tetanus and diphtheria immunization schedule is complete Case 2&quot;:
  Encounter.&quot;Three DTP primary series doses were administered&quot;
    and Encounter.&quot;Three tetanus and diphtheria booster doses were administered&quot;

/*
@output: Tetanus and diphtheria immunization schedule is complete
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot; (where &quot;Vaccine type&quot; = &quot;Tetanus and diphtheria-containing vaccines&quot;)
*/
define &quot;Tetanus and diphtheria immunization schedule is complete&quot;:
  &quot;Tetanus and diphtheria immunization schedule is complete Case 1&quot;
    or &quot;Tetanus and diphtheria immunization schedule is complete Case 2&quot;

/*
@output: Tetanus and diphtheria immunization schedule is complete Guidance
@guidance: Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and two tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.
@guidance: Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and three tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.
*/
define &quot;Tetanus and diphtheria immunization schedule is complete Guidance&quot;:
  case
    when &quot;Tetanus and diphtheria immunization schedule is complete Case 1&quot; then 'Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and two tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.'
    when &quot;Tetanus and diphtheria immunization schedule is complete Case 2&quot; then 'Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and three tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.'
    else ''
  end


/*
@test: Test expected results based on example patients
*/
define &quot;Test Validation&quot;:
  case
    when Patient.id = '54.DTP0PT' then &quot;Client should follow 'delayed or interrupted series' decision logic&quot; and &quot;Guidance&quot; = 'The client has a delayed start. Please follow the \'delayed or interrupted\' schedule.'
    when Patient.id = '55.DTP3Td0PT' then &quot;Client should follow 'pregnancy starting with 3 doses' decision logic&quot; and &quot;Guidance&quot; = 'The client has received 3 tetanus-containing vaccine doses during childhood. Please follow the \'pregnancy starting with 3 doses\' schedule.'
    when Patient.id = '56.DTP3Td1PT' then &quot;Client should follow 'pregnancy starting with 4 doses' decision logic&quot; and &quot;Guidance&quot; = 'The client has received 4 tetanus-containing vaccines doses during childhood or pre-adulthood. Please follow the \'pregnancy starting with 4 doses\' schedule.'
    when Patient.id = '57.DTP3Td2' then &quot;Tetanus and diphtheria immunization schedule is complete Case 1&quot; and &quot;Guidance&quot; = 'Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and two tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.'
    when Patient.id = '58.DTP3Td3' then &quot;Tetanus and diphtheria immunization schedule is complete Case 2&quot; and &quot;Guidance&quot; = 'Tetanus and diphtheria immunization schedule is complete.Three DTP primary series doses and three tetanus and diphtheria booster doses were administered. There is no need for any additional tetanus and diphtheria doses.
Check for any other vaccines due.'
    else 'No test case set'
  end
</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (75248 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/IMMZD2DTDTPPregnantLogic"/>
  <version value="0.2.0"/>
  <name value="IMMZD2DTDTPPregnantLogic"/>
  <title value="IMMZD2DTDTPPregnantLogic"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-07-02T07:24:46+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines decision support logic for the IMMZ.D2.DT.DTP.Pregnancy decision table in the Immunization CPG"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WC"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library IC"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Concepts"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOConcepts"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WE"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOElements"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Encounter"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZD2DTDTPEncounterElements"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library IE"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZEncounterElements"/>
  </relatedArtifact>
  <parameter>
    <name value="Today"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="EncounterId"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'delayed or interrupted series' decision logic"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'delayed or interrupted series' decision logic Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'pregnancy starting with 3 doses' decision logic"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'pregnancy starting with 3 doses' decision logic Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'pregnancy starting with 4 doses' decision logic"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client should follow 'pregnancy starting with 4 doses' decision logic Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Tetanus and diphtheria immunization schedule is complete Case 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Tetanus and diphtheria immunization schedule is complete Case 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Tetanus and diphtheria immunization schedule is complete"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Tetanus and diphtheria immunization schedule is complete Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Has Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Test Validation"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>