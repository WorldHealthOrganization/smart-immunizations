<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZIND35Logic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">IMMZIND35Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">IMMZIND35Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-IMMZIND35Logic.html">IMMZIND35Logic</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-07-23 20:56:04+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines population criteria logic for the IMMZ.IND.35 indicator in the Immunization CPG</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><a href="Library-WHOCommon.html">WHOCommon</a></li>
                  
                    <li><a href="Library-IMMZCommon.html">IMMZCommon</a></li>
                  
                    <li><a href="Library-IMMZConcepts.html">IMMZConcepts</a></li>
                  
                    <li><code>http://smart.who.int/immunizations/Library/IMMZIndicatorElements</code></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Measurement Period</th><th>Period</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Initial Population</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Denominator</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Numerator</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Stratification 1</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Stratification 2</th><th>Coding</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Stratification 3</th><th>Coding</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Stratification 4</th><th>Coding</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">/*
 * Library: IMMZ.IND.35 Logic
 * Drop-out rate of pentavalent vaccine 1st dose to pentavalent vaccine 3rd dose
 * The percentage in the target population who received a 1st dose of pentavalent vaccine but have not received the 3rd dose of pentavalent vaccine (i.e. are past due for the 3rd dose of pentavalent vaccine) during the reporting period
 * 
 * Numerator: Number of clients who received a 1st dose of pentavalent vaccine during the reporting period who should have received (via scheduling logic) the 3rd dose of pentavalent vaccine during the reporting period but did not receive it
 * Numerator Computation: (COUNT of clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;Pentavalent vaccines&quot; for the 1st dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period) - (COUNT of clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;Pentavalent vaccines&quot; for the 3rd dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period)
 * Denominator: Number of clients in the target population who received dose 1 of pentavalent vaccine during the reporting period
 * Denominator Computation: Count clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;pentavalent vaccines&quot; for the 1st dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period
 * 
 * Disaggregation
 *  - Administrative area
 *  - Sex
 *  - Age in years
 *  - Age group (depending on schedule)
 *
 * References: WHO Immunization facility analysis guide (5)
 * 
 * Annotations: â€“
 */
library IMMZIND35Logic

using FHIR version '4.0.1'

include FHIRHelpers version '4.0.1'

include WHOCommon called WC

include IMMZCommon called Common
include IMMZConcepts called Concepts
include IMMZIndicatorElements called Elements


parameter &quot;Measurement Period&quot; Interval&lt;Date&gt; default Interval[@2025-01-01, @2025-05-31]

context Patient

/*
 * As defined by Member State
 */
define &quot;Initial Population&quot;:
  true

/*
@denominator: Number of clients in the target population who received dose 1 of pentavalent vaccine during the reporting period
@pseudocode: Count clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;pentavalent vaccines&quot; for the 1st dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period
@note: Updated to match the definition to only include those who are due for the 3rd dose.
       If client ever received a 2nd dose the due date is 4 weeks after that.
       If client has only received the 1st dose, the due date is 8 weeks after that.
       Only include in the denominator those who are due during the measurement period.
*/
define &quot;Denominator&quot;:
  if exists (Elements.&quot;Pentavalent Doses Administered to Patient&quot;.getDose('2'))
  then exists( (Elements.&quot;Pentavalent Doses Administered to Patient&quot;.getDose('2')) I
        where (start of I.occurrence.toInterval() + 4 weeks) during &quot;Measurement Period&quot; )
  else exists( (Elements.&quot;Pentavalent Doses Administered to Patient&quot;.getDose('1')) I
        where (start of I.occurrence.toInterval() + 8 weeks) during &quot;Measurement Period&quot; )


/*
@numerator: Number of clients who received a 1st dose of pentavalent vaccine during the reporting period who should have received (via scheduling logic) the 3rd dose of pentavalent vaccine during the reporting period but did not receive it
@pseudocode: (COUNT of clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;Pentavalent vaccines&quot; for the 1st dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period) - (COUNT of clients with an immunization event WHERE &quot;Vaccine type&quot; = &quot;Pentavalent vaccines&quot; for the 3rd dose in the primary series AND &quot;Date and time of vaccination&quot; is during the reporting period)
@note: Only include those from the denominator that did not receive a 3rd dose during the measurement period.
        Those where the 3rd dose due date is during the period but have not received the 3rd dose.
*/
define &quot;Numerator&quot;:
  &quot;Denominator&quot;
  and not exists( Elements.&quot;Pentavalent Doses Administered to Patient During Measurement Period&quot;.getDose('3') )

/*
@disaggregation: Administrative area
                 Sex
                 Age in years
                 Age group (depending on schedule)
*/
define &quot;Stratification 1&quot;:
	Elements.&quot;By Geographic Region Stratifier&quot;

define &quot;Stratification 2&quot;:
	Elements.&quot;By Administrative Gender Stratifier&quot;

define &quot;Stratification 3&quot;:
	Elements.&quot;Age Stratifier&quot;

define &quot;Stratification 4&quot;:
	Elements.&quot;Infant By Age Stratifier&quot;
</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (46736 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/IMMZIND35Logic"/>
  <version value="0.2.0"/>
  <name value="IMMZIND35Logic"/>
  <title value="IMMZIND35Logic"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-07-23T20:56:04+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines population criteria logic for the IMMZ.IND.35 indicator in the Immunization CPG"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WC"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Common"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Concepts"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZConcepts"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Elements"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZIndicatorElements"/>
  </relatedArtifact>
  <parameter>
    <name value="Measurement Period"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Period"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Initial Population"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Denominator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Numerator"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Stratification 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Stratification 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Coding"/>
  </parameter>
  <parameter>
    <name value="Stratification 3"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Coding"/>
  </parameter>
  <parameter>
    <name value="Stratification 4"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Coding"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="LyoKICogTGlicmFyeTogSU1NWi5JTkQuMzUgTG9naWMKICogRHJvcC1vdXQgcmF0ZSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIDFzdCBkb3NlIHRvIHBlbnRhdmFsZW50IHZhY2NpbmUgM3JkIGRvc2UKICogVGhlIHBlcmNlbnRhZ2UgaW4gdGhlIHRhcmdldCBwb3B1bGF0aW9uIHdobyByZWNlaXZlZCBhIDFzdCBkb3NlIG9mIHBlbnRhdmFsZW50IHZhY2NpbmUgYnV0IGhhdmUgbm90IHJlY2VpdmVkIHRoZSAzcmQgZG9zZSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIChpLmUuIGFyZSBwYXN0IGR1ZSBmb3IgdGhlIDNyZCBkb3NlIG9mIHBlbnRhdmFsZW50IHZhY2NpbmUpIGR1cmluZyB0aGUgcmVwb3J0aW5nIHBlcmlvZAogKiAKICogTnVtZXJhdG9yOiBOdW1iZXIgb2YgY2xpZW50cyB3aG8gcmVjZWl2ZWQgYSAxc3QgZG9zZSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIGR1cmluZyB0aGUgcmVwb3J0aW5nIHBlcmlvZCB3aG8gc2hvdWxkIGhhdmUgcmVjZWl2ZWQgKHZpYSBzY2hlZHVsaW5nIGxvZ2ljKSB0aGUgM3JkIGRvc2Ugb2YgcGVudGF2YWxlbnQgdmFjY2luZSBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2QgYnV0IGRpZCBub3QgcmVjZWl2ZSBpdAogKiBOdW1lcmF0b3IgQ29tcHV0YXRpb246IChDT1VOVCBvZiBjbGllbnRzIHdpdGggYW4gaW1tdW5pemF0aW9uIGV2ZW50IFdIRVJFICJWYWNjaW5lIHR5cGUiID0gIlBlbnRhdmFsZW50IHZhY2NpbmVzIiBmb3IgdGhlIDFzdCBkb3NlIGluIHRoZSBwcmltYXJ5IHNlcmllcyBBTkQgIkRhdGUgYW5kIHRpbWUgb2YgdmFjY2luYXRpb24iIGlzIGR1cmluZyB0aGUgcmVwb3J0aW5nIHBlcmlvZCkgLSAoQ09VTlQgb2YgY2xpZW50cyB3aXRoIGFuIGltbXVuaXphdGlvbiBldmVudCBXSEVSRSAiVmFjY2luZSB0eXBlIiA9ICJQZW50YXZhbGVudCB2YWNjaW5lcyIgZm9yIHRoZSAzcmQgZG9zZSBpbiB0aGUgcHJpbWFyeSBzZXJpZXMgQU5EICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiBpcyBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2QpCiAqIERlbm9taW5hdG9yOiBOdW1iZXIgb2YgY2xpZW50cyBpbiB0aGUgdGFyZ2V0IHBvcHVsYXRpb24gd2hvIHJlY2VpdmVkIGRvc2UgMSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIGR1cmluZyB0aGUgcmVwb3J0aW5nIHBlcmlvZAogKiBEZW5vbWluYXRvciBDb21wdXRhdGlvbjogQ291bnQgY2xpZW50cyB3aXRoIGFuIGltbXVuaXphdGlvbiBldmVudCBXSEVSRSAiVmFjY2luZSB0eXBlIiA9ICJwZW50YXZhbGVudCB2YWNjaW5lcyIgZm9yIHRoZSAxc3QgZG9zZSBpbiB0aGUgcHJpbWFyeSBzZXJpZXMgQU5EICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiBpcyBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2QKICogCiAqIERpc2FnZ3JlZ2F0aW9uCiAqICAtIEFkbWluaXN0cmF0aXZlIGFyZWEKICogIC0gU2V4CiAqICAtIEFnZSBpbiB5ZWFycwogKiAgLSBBZ2UgZ3JvdXAgKGRlcGVuZGluZyBvbiBzY2hlZHVsZSkKICoKICogUmVmZXJlbmNlczogV0hPIEltbXVuaXphdGlvbiBmYWNpbGl0eSBhbmFseXNpcyBndWlkZSAoNSkKICogCiAqIEFubm90YXRpb25zOiDigJMKICovCmxpYnJhcnkgSU1NWklORDM1TG9naWMKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwoKaW5jbHVkZSBXSE9Db21tb24gY2FsbGVkIFdDCgppbmNsdWRlIElNTVpDb21tb24gY2FsbGVkIENvbW1vbgppbmNsdWRlIElNTVpDb25jZXB0cyBjYWxsZWQgQ29uY2VwdHMKaW5jbHVkZSBJTU1aSW5kaWNhdG9yRWxlbWVudHMgY2FsbGVkIEVsZW1lbnRzCgoKcGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGU+IGRlZmF1bHQgSW50ZXJ2YWxbQDIwMjUtMDEtMDEsIEAyMDI1LTA1LTMxXQoKY29udGV4dCBQYXRpZW50CgovKgogKiBBcyBkZWZpbmVkIGJ5IE1lbWJlciBTdGF0ZQogKi8KZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24iOgogIHRydWUKCi8qCkBkZW5vbWluYXRvcjogTnVtYmVyIG9mIGNsaWVudHMgaW4gdGhlIHRhcmdldCBwb3B1bGF0aW9uIHdobyByZWNlaXZlZCBkb3NlIDEgb2YgcGVudGF2YWxlbnQgdmFjY2luZSBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2QKQHBzZXVkb2NvZGU6IENvdW50IGNsaWVudHMgd2l0aCBhbiBpbW11bml6YXRpb24gZXZlbnQgV0hFUkUgIlZhY2NpbmUgdHlwZSIgPSAicGVudGF2YWxlbnQgdmFjY2luZXMiIGZvciB0aGUgMXN0IGRvc2UgaW4gdGhlIHByaW1hcnkgc2VyaWVzIEFORCAiRGF0ZSBhbmQgdGltZSBvZiB2YWNjaW5hdGlvbiIgaXMgZHVyaW5nIHRoZSByZXBvcnRpbmcgcGVyaW9kCkBub3RlOiBVcGRhdGVkIHRvIG1hdGNoIHRoZSBkZWZpbml0aW9uIHRvIG9ubHkgaW5jbHVkZSB0aG9zZSB3aG8gYXJlIGR1ZSBmb3IgdGhlIDNyZCBkb3NlLgogICAgICAgSWYgY2xpZW50IGV2ZXIgcmVjZWl2ZWQgYSAybmQgZG9zZSB0aGUgZHVlIGRhdGUgaXMgNCB3ZWVrcyBhZnRlciB0aGF0LgogICAgICAgSWYgY2xpZW50IGhhcyBvbmx5IHJlY2VpdmVkIHRoZSAxc3QgZG9zZSwgdGhlIGR1ZSBkYXRlIGlzIDggd2Vla3MgYWZ0ZXIgdGhhdC4KICAgICAgIE9ubHkgaW5jbHVkZSBpbiB0aGUgZGVub21pbmF0b3IgdGhvc2Ugd2hvIGFyZSBkdWUgZHVyaW5nIHRoZSBtZWFzdXJlbWVudCBwZXJpb2QuCiovCmRlZmluZSAiRGVub21pbmF0b3IiOgogIGlmIGV4aXN0cyAoRWxlbWVudHMuIlBlbnRhdmFsZW50IERvc2VzIEFkbWluaXN0ZXJlZCB0byBQYXRpZW50Ii5nZXREb3NlKCcyJykpCiAgdGhlbiBleGlzdHMoIChFbGVtZW50cy4iUGVudGF2YWxlbnQgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQiLmdldERvc2UoJzInKSkgSQogICAgICAgIHdoZXJlIChzdGFydCBvZiBJLm9jY3VycmVuY2UudG9JbnRlcnZhbCgpICsgNCB3ZWVrcykgZHVyaW5nICJNZWFzdXJlbWVudCBQZXJpb2QiICkKICBlbHNlIGV4aXN0cyggKEVsZW1lbnRzLiJQZW50YXZhbGVudCBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIuZ2V0RG9zZSgnMScpKSBJCiAgICAgICAgd2hlcmUgKHN0YXJ0IG9mIEkub2NjdXJyZW5jZS50b0ludGVydmFsKCkgKyA4IHdlZWtzKSBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIgKQoKCi8qCkBudW1lcmF0b3I6IE51bWJlciBvZiBjbGllbnRzIHdobyByZWNlaXZlZCBhIDFzdCBkb3NlIG9mIHBlbnRhdmFsZW50IHZhY2NpbmUgZHVyaW5nIHRoZSByZXBvcnRpbmcgcGVyaW9kIHdobyBzaG91bGQgaGF2ZSByZWNlaXZlZCAodmlhIHNjaGVkdWxpbmcgbG9naWMpIHRoZSAzcmQgZG9zZSBvZiBwZW50YXZhbGVudCB2YWNjaW5lIGR1cmluZyB0aGUgcmVwb3J0aW5nIHBlcmlvZCBidXQgZGlkIG5vdCByZWNlaXZlIGl0CkBwc2V1ZG9jb2RlOiAoQ09VTlQgb2YgY2xpZW50cyB3aXRoIGFuIGltbXVuaXphdGlvbiBldmVudCBXSEVSRSAiVmFjY2luZSB0eXBlIiA9ICJQZW50YXZhbGVudCB2YWNjaW5lcyIgZm9yIHRoZSAxc3QgZG9zZSBpbiB0aGUgcHJpbWFyeSBzZXJpZXMgQU5EICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiBpcyBkdXJpbmcgdGhlIHJlcG9ydGluZyBwZXJpb2QpIC0gKENPVU5UIG9mIGNsaWVudHMgd2l0aCBhbiBpbW11bml6YXRpb24gZXZlbnQgV0hFUkUgIlZhY2NpbmUgdHlwZSIgPSAiUGVudGF2YWxlbnQgdmFjY2luZXMiIGZvciB0aGUgM3JkIGRvc2UgaW4gdGhlIHByaW1hcnkgc2VyaWVzIEFORCAiRGF0ZSBhbmQgdGltZSBvZiB2YWNjaW5hdGlvbiIgaXMgZHVyaW5nIHRoZSByZXBvcnRpbmcgcGVyaW9kKQpAbm90ZTogT25seSBpbmNsdWRlIHRob3NlIGZyb20gdGhlIGRlbm9taW5hdG9yIHRoYXQgZGlkIG5vdCByZWNlaXZlIGEgM3JkIGRvc2UgZHVyaW5nIHRoZSBtZWFzdXJlbWVudCBwZXJpb2QuCiAgICAgICAgVGhvc2Ugd2hlcmUgdGhlIDNyZCBkb3NlIGR1ZSBkYXRlIGlzIGR1cmluZyB0aGUgcGVyaW9kIGJ1dCBoYXZlIG5vdCByZWNlaXZlZCB0aGUgM3JkIGRvc2UuCiovCmRlZmluZSAiTnVtZXJhdG9yIjoKICAiRGVub21pbmF0b3IiCiAgYW5kIG5vdCBleGlzdHMoIEVsZW1lbnRzLiJQZW50YXZhbGVudCBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCBEdXJpbmcgTWVhc3VyZW1lbnQgUGVyaW9kIi5nZXREb3NlKCczJykgKQoKLyoKQGRpc2FnZ3JlZ2F0aW9uOiBBZG1pbmlzdHJhdGl2ZSBhcmVhCiAgICAgICAgICAgICAgICAgU2V4CiAgICAgICAgICAgICAgICAgQWdlIGluIHllYXJzCiAgICAgICAgICAgICAgICAgQWdlIGdyb3VwIChkZXBlbmRpbmcgb24gc2NoZWR1bGUpCiovCmRlZmluZSAiU3RyYXRpZmljYXRpb24gMSI6CglFbGVtZW50cy4iQnkgR2VvZ3JhcGhpYyBSZWdpb24gU3RyYXRpZmllciIKCmRlZmluZSAiU3RyYXRpZmljYXRpb24gMiI6CglFbGVtZW50cy4iQnkgQWRtaW5pc3RyYXRpdmUgR2VuZGVyIFN0cmF0aWZpZXIiCgpkZWZpbmUgIlN0cmF0aWZpY2F0aW9uIDMiOgoJRWxlbWVudHMuIkFnZSBTdHJhdGlmaWVyIgoKZGVmaW5lICJTdHJhdGlmaWNhdGlvbiA0IjoKCUVsZW1lbnRzLiJJbmZhbnQgQnkgQWdlIFN0cmF0aWZpZXIiCg=="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>