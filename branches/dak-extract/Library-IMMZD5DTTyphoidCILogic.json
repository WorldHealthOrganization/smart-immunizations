{
  "resourceType" : "Library",
  "id" : "IMMZD5DTTyphoidCILogic",
  "meta" : {
    "profile" : ["http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary",
    "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"]
  },
  "text" : {
    "status" : "extensions",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTTyphoidCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTTyphoidCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD5DTTyphoidCILogic.html\">IMMZD5DTTyphoidCILogic</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-07-23 20:56:04+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines decision support logic for the IMMZ.D5.DT.Typhoid contraindications decision table in the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-IMMZD5DTTyphoidEncounterElements.html\">IMMZD5DTTyphoidEncounterElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Draft Medication Request ID for Typhoid dose</th><th>id</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine.</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Typhoid vaccination is contraindicated for Ty21a vaccine. Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n * Library: IMMZD5DTTyphoidCILogic (IMMZ.D5.DT.Typhoid contraindications)\n * Rule: Check for contraindications before administering the vaccine(s) due\t\n * Decision Table: Potential contraindications\t\t\n * Trigger: IMMZ.D5 Determine vaccine(s) to be administered based on contraindications\n */\nlibrary IMMZD5DTTyphoidCILogic\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude IMMZD5DTTyphoidEncounterElements called Encounter\n\nparameter Today Date default Today()\n\ncontext Patient\n\n/*\n  @dynamicValue: Draft Medication Request ID for Typhoid dose\n  */\n  define &quot;Draft Medication Request ID for Typhoid dose&quot;:\n    First(Encounter.&quot;Draft Medication Request for Typhoid dose&quot;).id\n\n\n/*\n@dynamicValue: Guidance\n*/\ndefine &quot;Guidance&quot;:\n  case\n    when &quot;Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.&quot; then &quot;Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance&quot;\n    when &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note&quot; then &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note Guidance&quot;\n    when &quot;Typhoid vaccination is contraindicated for Ty21a vaccine.&quot; then &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Guidance&quot;\n    else ''\n  end\n\ndefine &quot;Has Guidance&quot;:\n  &quot;Guidance&quot; is not null and &quot;Guidance&quot; != ''\n\n/*\n@output: Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Further evaluation needed&quot;\n*/\ndefine &quot;Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.&quot;:\n  Encounter.&quot;The client has hypersensitivity to any component of the vaccine&quot;\n\n/*\n@output: Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance\n@guidance: Do not vaccinate client with typhoid if client has known hypersensitivity to any component of the vaccine.\n*/\ndefine &quot;Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance&quot;:\n  'Do not vaccinate client with typhoid if client has known hypersensitivity to any component of the vaccine.'\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note\n@pseudocode: &quot;Immunization recommendation status&quot; =  &quot;Contraindicated&quot; (where &quot;Type of typhoid dose&quot; = &quot;Ty21a&quot;) AND &quot;Immunization recommendation status&quot; = &quot;Further evaluation needed&quot; (where &quot;Type of typhoid dose&quot; = &quot;Typbar-TCV&quot; OR &quot;ViPS&quot;)\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note&quot;:\n  Encounter.&quot;The client is currently pregnant&quot;\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note Guidance\n@guidance: Do not vaccinate client with Ty21a vaccine as live attenuated Ty21a vaccine is contraindicated for pregnant clients. For Typbar-TCV or ViPS vaccine, check if an alternative typhoid vaccine is appropriate for the client, consider risks of vaccination and make a clinical judgement.\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note Guidance&quot;:\n  'Do not vaccinate client with Ty21a vaccine as live attenuated Ty21a vaccine is contraindicated for pregnant clients. For Typbar-TCV or ViPS vaccine, check if an alternative typhoid vaccine is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1\n@pseudocode: &quot;Immunization recommendation status&quot; =  &quot;Contraindicated&quot; (where &quot;Type of typhoid dose&quot; = &quot;Ty21a&quot;)\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1&quot;:\n  Encounter.&quot;The client is currently taking antibiotics&quot;\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2\n@pseudocode: &quot;Immunization recommendation status&quot; =  &quot;Contraindicated&quot; (where &quot;Type of typhoid dose&quot; = &quot;Ty21a&quot;)\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2&quot;:\n  Encounter.&quot;The client's HIV status is positive&quot;\n    and Encounter.&quot;The client is not immunologically stable&quot;\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine.\n@pseudocode: &quot;Immunization recommendation status&quot; =  &quot;Contraindicated&quot; (where &quot;Type of typhoid dose&quot; = &quot;Ty21a&quot;)\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine.&quot;:\n  &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1&quot;\n    or &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2&quot;\n\n/*\n@output: Typhoid vaccination is contraindicated for Ty21a vaccine. Guidance\n@guidance: Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for clients who are taking antibiotics. Evaluate if other types of typhoid vacccines can be administered.\n@guidance: Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for HIV-infected client who are not immunologically stable.\n*/\ndefine &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Guidance&quot;:\n  case\n    when &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1&quot; then 'Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for clients who are taking antibiotics. Evaluate if other types of typhoid vacccines can be administered.'\n    when &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2&quot; then 'Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for HIV-infected client who are not immunologically stable.'\n    else ''\n  end\n\n\n/*\n@test: Test expected results based on example patients\n*/\ndefine &quot;Test Validation&quot;:\n  case\n    when Patient.id = '41.1' then &quot;Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.&quot; and &quot;Guidance&quot; = 'Do not vaccinate client with typhoid if client has known hypersensitivity to any component of the vaccine.'\n    when Patient.id = '42.1' then &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note&quot; and &quot;Guidance&quot; = 'Do not vaccinate client with Ty21a vaccine as live attenuated Ty21a vaccine is contraindicated for pregnant clients. For Typbar-TCV or ViPS vaccine, check if an alternative typhoid vaccine is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n    when Patient.id = '43.1' then &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1&quot; and &quot;Guidance&quot; = 'Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for clients who are taking antibiotics. Evaluate if other types of typhoid vacccines can be administered.'\n    when Patient.id = '44.23' then &quot;Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2&quot; and &quot;Guidance&quot; = 'Do not vaccinate client with Ty21a vaccine as Ty21a vaccine is contraindicated for HIV-infected client who are not immunologically stable.'\n    else 'No test case set'\n  end\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (60588 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"
  },
  "extension" : [{
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability",
    "valueCode" : "computable"
  }],
  "url" : "http://smart.who.int/immunizations/Library/IMMZD5DTTyphoidCILogic",
  "version" : "0.2.0",
  "name" : "IMMZD5DTTyphoidCILogic",
  "title" : "IMMZD5DTTyphoidCILogic",
  "status" : "draft",
  "experimental" : false,
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2025-07-23T20:56:04+00:00",
  "publisher" : "WHO",
  "contact" : [{
    "name" : "WHO",
    "telecom" : [{
      "system" : "url",
      "value" : "http://who.int"
    }]
  }],
  "description" : "This library defines decision support logic for the IMMZ.D5.DT.Typhoid contraindications decision table in the Immunization CPG",
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "Library Encounter",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZD5DTTyphoidEncounterElements"
  }],
  "parameter" : [{
    "name" : "Today",
    "use" : "in",
    "min" : 0,
    "max" : "1",
    "type" : "date"
  },
  {
    "name" : "Patient",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Patient"
  },
  {
    "name" : "Draft Medication Request ID for Typhoid dose",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "id"
  },
  {
    "name" : "Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Typhoid vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "string"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine. Clinical judgement is required for Typbar-TCV or ViPS vaccine. Create a clinical note Guidance",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "string"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine. Case 1",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine. Case 2",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine.",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Typhoid vaccination is contraindicated for Ty21a vaccine. Guidance",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "string"
  },
  {
    "name" : "Guidance",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "string"
  },
  {
    "name" : "Has Guidance",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Test Validation",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Resource"
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : ""
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  }]
}