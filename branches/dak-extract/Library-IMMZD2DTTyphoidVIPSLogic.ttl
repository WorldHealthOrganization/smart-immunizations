@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/immunizations/Library/IMMZD2DTTyphoidVIPSLogic> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "IMMZD2DTTyphoidVIPSLogic"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "extensions" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTTyphoidVIPSLogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTTyphoidVIPSLogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD2DTTyphoidVIPSLogic.html\">IMMZD2DTTyphoidVIPSLogic</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-07-23 20:56:04+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines decision support logic for the IMMZ.D2.DT.Typhoid.ViPS decision table in the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-IMMZD2DTTyphoidEncounterElements.html\">IMMZD2DTTyphoidEncounterElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for Typhoid vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for Typhoid vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for Typhoid vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for Typhoid vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Primary series is complete. Client is not due for typhoid booster dose</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Primary series is complete. Client is not due for typhoid booster dose Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Primary series is complete. Client is due for typhoid booster dose</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Primary series is complete. Client is due for typhoid booster dose Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n * Library: IMMZD2DTTyphoidVIPSLogic (IMMZ.D2.DT.Typhoid.ViPS)\n * Rule: Determine if the client is due for a typhoid vaccination according to the national immunization schedule\n * Decision Table: Unconjugated Vi polysaccharide (ViPS) schedule\n * Trigger: IMMZ.D2 Determine required vaccination(s) if any  \n */\nlibrary IMMZD2DTTyphoidVIPSLogic\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude IMMZD2DTTyphoidEncounterElements called Encounter\n\nparameter Today Date default Today()\n\ncontext Patient\n\n\n/*\n@dynamicValue: Guidance\n*/\ndefine \"Guidance\":\n  case\n    when \"Client is not due for Typhoid vaccination\" then \"Client is not due for Typhoid vaccination Guidance\"\n    when \"Client is due for Typhoid vaccination\" then \"Client is due for Typhoid vaccination Guidance\"\n    when \"Primary series is complete. Client is not due for typhoid booster dose\" then \"Primary series is complete. Client is not due for typhoid booster dose Guidance\"\n    when \"Primary series is complete. Client is due for typhoid booster dose\" then \"Primary series is complete. Client is due for typhoid booster dose Guidance\"\n    else ''\n  end\n\ndefine \"Has Guidance\":\n  \"Guidance\" is not null and \"Guidance\" != ''\n\n/*\n@output: Client is not due for Typhoid vaccination\n@pseudocode: \"Immunization recommendation status\" = \"Not due\"\n*/\ndefine \"Client is not due for Typhoid vaccination\":\n  Encounter.\"Client's age is less than 2 years\"\n\n/*\n@output: Client is not due for Typhoid vaccination Guidance\n@guidance: Should not vaccinate client with typhoid dose as client's age is less than 2 years.\nCheck for any other vaccines due and inform the caregiver of when to come back for the first dose.\n*/\ndefine \"Client is not due for Typhoid vaccination Guidance\":\n  'Should not vaccinate client with typhoid dose as client\\'s age is less than 2 years.\nCheck for any other vaccines due and inform the caregiver of when to come back for the first dose.'\n\n/*\n@output: Client is due for Typhoid vaccination\n@pseudocode: \"Immunization recommendation status\" = \"Due\"\n*/\ndefine \"Client is due for Typhoid vaccination\":\n  Encounter.\"No typhoid primary series doses were administered\"\n    and Encounter.\"Client's age is more than or equal to 2 years\"\n\n/*\n@output: Client is due for Typhoid vaccination Guidance\n@guidance: Should vaccinate client with typhoid dose as no typhoid doses were administered and client is within appropriate age range.\nCheck for contraindications.\n*/\ndefine \"Client is due for Typhoid vaccination Guidance\":\n  'Should vaccinate client with typhoid dose as no typhoid doses were administered and client is within appropriate age range.\nCheck for contraindications.'\n\n/*\n@output: Primary series is complete. Client is not due for typhoid booster dose\n@pseudocode: \"Immunization recommendation status\" = \"Not due\"\n*/\ndefine \"Primary series is complete. Client is not due for typhoid booster dose\":\n  Encounter.\"One typhoid primary series dose was administered\"\n    and Encounter.\"The latest typhoid dose was administered less than 3 years ago\"\n\n/*\n@output: Primary series is complete. Client is not due for typhoid booster dose Guidance\n@guidance: Should not vaccinate client with typhoid booster dose as the latest typhoid dose was administered less than 3 years ago.\nCheck for any other vaccines due and inform the caregiver of when to come back for the next dose.\n*/\ndefine \"Primary series is complete. Client is not due for typhoid booster dose Guidance\":\n  'Should not vaccinate client with typhoid booster dose as the latest typhoid dose was administered less than 3 years ago.\nCheck for any other vaccines due and inform the caregiver of when to come back for the next dose.'\n\n/*\n@output: Primary series is complete. Client is due for typhoid booster dose\n@pseudocode: \"Immunization recommendation status\" = \"Due\"\n*/\ndefine \"Primary series is complete. Client is due for typhoid booster dose\":\n  Encounter.\"One typhoid primary series dose was administered\"\n    and Encounter.\"The latest typhoid dose was administered more than 3 years ago\"\n\n/*\n@output: Primary series is complete. Client is due for typhoid booster dose Guidance\n@guidance: Should vaccinate client with typhoid booster dose as the latest dose was administered more than 3 years ago.\nCheck for contraindications.\n*/\ndefine \"Primary series is complete. Client is due for typhoid booster dose Guidance\":\n  'Should vaccinate client with typhoid booster dose as the latest dose was administered more than 3 years ago.\nCheck for contraindications.'\n\n\n/*\n@test: Test expected results based on example patients\n*/\ndefine \"Test Validation\":\n  case\n    when Patient.id = '19.2' then \"Client is not due for Typhoid vaccination\" and \"Guidance\" = 'Should not vaccinate client with typhoid dose as client\\'s age is less than 2 years.\nCheck for any other vaccines due and inform the caregiver of when to come back for the first dose.'\n    when Patient.id = '20.12' then \"Client is due for Typhoid vaccination\" and \"Guidance\" = 'Should vaccinate client with typhoid dose as no typhoid doses were administered and client is within appropriate age range.\nCheck for contraindications.'\n    when Patient.id = '21.13' then \"Primary series is complete. Client is not due for typhoid booster dose\" and \"Guidance\" = 'Should not vaccinate client with typhoid booster dose as the latest typhoid dose was administered less than 3 years ago.\nCheck for any other vaccines due and inform the caregiver of when to come back for the next dose.'\n    when Patient.id = '22.13' then \"Primary series is complete. Client is due for typhoid booster dose\" and \"Guidance\" = 'Should vaccinate client with typhoid booster dose as the latest dose was administered more than 3 years ago.\nCheck for contraindications.'\n    else 'No test case set'\n  end\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (54116 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"^^rdf:XMLLiteral
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [
       a fhir:code ;
       fhir:v "computable"
     ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/immunizations/Library/IMMZD2DTTyphoidVIPSLogic"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.2.0"] ; # 
  fhir:name [ fhir:v "IMMZD2DTTyphoidVIPSLogic"] ; # 
  fhir:title [ fhir:v "IMMZD2DTTyphoidVIPSLogic"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v false] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2025-07-23T20:56:04+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "This library defines decision support logic for the IMMZ.D2.DT.Typhoid.ViPS decision table in the Immunization CPG"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Encounter" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZD2DTTyphoidEncounterElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZD2DTTyphoidEncounterElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Today" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Client is not due for Typhoid vaccination" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not due for Typhoid vaccination Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Client is due for Typhoid vaccination" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is due for Typhoid vaccination Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Primary series is complete. Client is not due for typhoid booster dose" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Primary series is complete. Client is not due for typhoid booster dose Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Primary series is complete. Client is due for typhoid booster dose" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Primary series is complete. Client is due for typhoid booster dose Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Has Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Test Validation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Resource" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v "Ci8qCiAqIExpYnJhcnk6IElNTVpEMkRUVHlwaG9pZFZJUFNMb2dpYyAoSU1NWi5EMi5EVC5UeXBob2lkLlZpUFMpCiAqIFJ1bGU6IERldGVybWluZSBpZiB0aGUgY2xpZW50IGlzIGR1ZSBmb3IgYSB0eXBob2lkIHZhY2NpbmF0aW9uIGFjY29yZGluZyB0byB0aGUgbmF0aW9uYWwgaW1tdW5pemF0aW9uIHNjaGVkdWxlCiAqIERlY2lzaW9uIFRhYmxlOiBVbmNvbmp1Z2F0ZWQgVmkgcG9seXNhY2NoYXJpZGUgKFZpUFMpIHNjaGVkdWxlCiAqIFRyaWdnZXI6IElNTVouRDIgRGV0ZXJtaW5lIHJlcXVpcmVkIHZhY2NpbmF0aW9uKHMpIGlmIGFueSAgCiAqLwpsaWJyYXJ5IElNTVpEMkRUVHlwaG9pZFZJUFNMb2dpYwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgSU1NWkQyRFRUeXBob2lkRW5jb3VudGVyRWxlbWVudHMgY2FsbGVkIEVuY291bnRlcgoKcGFyYW1ldGVyIFRvZGF5IERhdGUgZGVmYXVsdCBUb2RheSgpCgpjb250ZXh0IFBhdGllbnQKCgovKgpAZHluYW1pY1ZhbHVlOiBHdWlkYW5jZQoqLwpkZWZpbmUgIkd1aWRhbmNlIjoKICBjYXNlCiAgICB3aGVuICJDbGllbnQgaXMgbm90IGR1ZSBmb3IgVHlwaG9pZCB2YWNjaW5hdGlvbiIgdGhlbiAiQ2xpZW50IGlzIG5vdCBkdWUgZm9yIFR5cGhvaWQgdmFjY2luYXRpb24gR3VpZGFuY2UiCiAgICB3aGVuICJDbGllbnQgaXMgZHVlIGZvciBUeXBob2lkIHZhY2NpbmF0aW9uIiB0aGVuICJDbGllbnQgaXMgZHVlIGZvciBUeXBob2lkIHZhY2NpbmF0aW9uIEd1aWRhbmNlIgogICAgd2hlbiAiUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBub3QgZHVlIGZvciB0eXBob2lkIGJvb3N0ZXIgZG9zZSIgdGhlbiAiUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBub3QgZHVlIGZvciB0eXBob2lkIGJvb3N0ZXIgZG9zZSBHdWlkYW5jZSIKICAgIHdoZW4gIlByaW1hcnkgc2VyaWVzIGlzIGNvbXBsZXRlLiBDbGllbnQgaXMgZHVlIGZvciB0eXBob2lkIGJvb3N0ZXIgZG9zZSIgdGhlbiAiUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBkdWUgZm9yIHR5cGhvaWQgYm9vc3RlciBkb3NlIEd1aWRhbmNlIgogICAgZWxzZSAnJwogIGVuZAoKZGVmaW5lICJIYXMgR3VpZGFuY2UiOgogICJHdWlkYW5jZSIgaXMgbm90IG51bGwgYW5kICJHdWlkYW5jZSIgIT0gJycKCi8qCkBvdXRwdXQ6IENsaWVudCBpcyBub3QgZHVlIGZvciBUeXBob2lkIHZhY2NpbmF0aW9uCkBwc2V1ZG9jb2RlOiAiSW1tdW5pemF0aW9uIHJlY29tbWVuZGF0aW9uIHN0YXR1cyIgPSAiTm90IGR1ZSIKKi8KZGVmaW5lICJDbGllbnQgaXMgbm90IGR1ZSBmb3IgVHlwaG9pZCB2YWNjaW5hdGlvbiI6CiAgRW5jb3VudGVyLiJDbGllbnQncyBhZ2UgaXMgbGVzcyB0aGFuIDIgeWVhcnMiCgovKgpAb3V0cHV0OiBDbGllbnQgaXMgbm90IGR1ZSBmb3IgVHlwaG9pZCB2YWNjaW5hdGlvbiBHdWlkYW5jZQpAZ3VpZGFuY2U6IFNob3VsZCBub3QgdmFjY2luYXRlIGNsaWVudCB3aXRoIHR5cGhvaWQgZG9zZSBhcyBjbGllbnQncyBhZ2UgaXMgbGVzcyB0aGFuIDIgeWVhcnMuCkNoZWNrIGZvciBhbnkgb3RoZXIgdmFjY2luZXMgZHVlIGFuZCBpbmZvcm0gdGhlIGNhcmVnaXZlciBvZiB3aGVuIHRvIGNvbWUgYmFjayBmb3IgdGhlIGZpcnN0IGRvc2UuCiovCmRlZmluZSAiQ2xpZW50IGlzIG5vdCBkdWUgZm9yIFR5cGhvaWQgdmFjY2luYXRpb24gR3VpZGFuY2UiOgogICdTaG91bGQgbm90IHZhY2NpbmF0ZSBjbGllbnQgd2l0aCB0eXBob2lkIGRvc2UgYXMgY2xpZW50XCdzIGFnZSBpcyBsZXNzIHRoYW4gMiB5ZWFycy4KQ2hlY2sgZm9yIGFueSBvdGhlciB2YWNjaW5lcyBkdWUgYW5kIGluZm9ybSB0aGUgY2FyZWdpdmVyIG9mIHdoZW4gdG8gY29tZSBiYWNrIGZvciB0aGUgZmlyc3QgZG9zZS4nCgovKgpAb3V0cHV0OiBDbGllbnQgaXMgZHVlIGZvciBUeXBob2lkIHZhY2NpbmF0aW9uCkBwc2V1ZG9jb2RlOiAiSW1tdW5pemF0aW9uIHJlY29tbWVuZGF0aW9uIHN0YXR1cyIgPSAiRHVlIgoqLwpkZWZpbmUgIkNsaWVudCBpcyBkdWUgZm9yIFR5cGhvaWQgdmFjY2luYXRpb24iOgogIEVuY291bnRlci4iTm8gdHlwaG9pZCBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZCIKICAgIGFuZCBFbmNvdW50ZXIuIkNsaWVudCdzIGFnZSBpcyBtb3JlIHRoYW4gb3IgZXF1YWwgdG8gMiB5ZWFycyIKCi8qCkBvdXRwdXQ6IENsaWVudCBpcyBkdWUgZm9yIFR5cGhvaWQgdmFjY2luYXRpb24gR3VpZGFuY2UKQGd1aWRhbmNlOiBTaG91bGQgdmFjY2luYXRlIGNsaWVudCB3aXRoIHR5cGhvaWQgZG9zZSBhcyBubyB0eXBob2lkIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkIGFuZCBjbGllbnQgaXMgd2l0aGluIGFwcHJvcHJpYXRlIGFnZSByYW5nZS4KQ2hlY2sgZm9yIGNvbnRyYWluZGljYXRpb25zLgoqLwpkZWZpbmUgIkNsaWVudCBpcyBkdWUgZm9yIFR5cGhvaWQgdmFjY2luYXRpb24gR3VpZGFuY2UiOgogICdTaG91bGQgdmFjY2luYXRlIGNsaWVudCB3aXRoIHR5cGhvaWQgZG9zZSBhcyBubyB0eXBob2lkIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkIGFuZCBjbGllbnQgaXMgd2l0aGluIGFwcHJvcHJpYXRlIGFnZSByYW5nZS4KQ2hlY2sgZm9yIGNvbnRyYWluZGljYXRpb25zLicKCi8qCkBvdXRwdXQ6IFByaW1hcnkgc2VyaWVzIGlzIGNvbXBsZXRlLiBDbGllbnQgaXMgbm90IGR1ZSBmb3IgdHlwaG9pZCBib29zdGVyIGRvc2UKQHBzZXVkb2NvZGU6ICJJbW11bml6YXRpb24gcmVjb21tZW5kYXRpb24gc3RhdHVzIiA9ICJOb3QgZHVlIgoqLwpkZWZpbmUgIlByaW1hcnkgc2VyaWVzIGlzIGNvbXBsZXRlLiBDbGllbnQgaXMgbm90IGR1ZSBmb3IgdHlwaG9pZCBib29zdGVyIGRvc2UiOgogIEVuY291bnRlci4iT25lIHR5cGhvaWQgcHJpbWFyeSBzZXJpZXMgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIgogICAgYW5kIEVuY291bnRlci4iVGhlIGxhdGVzdCB0eXBob2lkIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gMyB5ZWFycyBhZ28iCgovKgpAb3V0cHV0OiBQcmltYXJ5IHNlcmllcyBpcyBjb21wbGV0ZS4gQ2xpZW50IGlzIG5vdCBkdWUgZm9yIHR5cGhvaWQgYm9vc3RlciBkb3NlIEd1aWRhbmNlCkBndWlkYW5jZTogU2hvdWxkIG5vdCB2YWNjaW5hdGUgY2xpZW50IHdpdGggdHlwaG9pZCBib29zdGVyIGRvc2UgYXMgdGhlIGxhdGVzdCB0eXBob2lkIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gMyB5ZWFycyBhZ28uCkNoZWNrIGZvciBhbnkgb3RoZXIgdmFjY2luZXMgZHVlIGFuZCBpbmZvcm0gdGhlIGNhcmVnaXZlciBvZiB3aGVuIHRvIGNvbWUgYmFjayBmb3IgdGhlIG5leHQgZG9zZS4KKi8KZGVmaW5lICJQcmltYXJ5IHNlcmllcyBpcyBjb21wbGV0ZS4gQ2xpZW50IGlzIG5vdCBkdWUgZm9yIHR5cGhvaWQgYm9vc3RlciBkb3NlIEd1aWRhbmNlIjoKICAnU2hvdWxkIG5vdCB2YWNjaW5hdGUgY2xpZW50IHdpdGggdHlwaG9pZCBib29zdGVyIGRvc2UgYXMgdGhlIGxhdGVzdCB0eXBob2lkIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gMyB5ZWFycyBhZ28uCkNoZWNrIGZvciBhbnkgb3RoZXIgdmFjY2luZXMgZHVlIGFuZCBpbmZvcm0gdGhlIGNhcmVnaXZlciBvZiB3aGVuIHRvIGNvbWUgYmFjayBmb3IgdGhlIG5leHQgZG9zZS4nCgovKgpAb3V0cHV0OiBQcmltYXJ5IHNlcmllcyBpcyBjb21wbGV0ZS4gQ2xpZW50IGlzIGR1ZSBmb3IgdHlwaG9pZCBib29zdGVyIGRvc2UKQHBzZXVkb2NvZGU6ICJJbW11bml6YXRpb24gcmVjb21tZW5kYXRpb24gc3RhdHVzIiA9ICJEdWUiCiovCmRlZmluZSAiUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBkdWUgZm9yIHR5cGhvaWQgYm9vc3RlciBkb3NlIjoKICBFbmNvdW50ZXIuIk9uZSB0eXBob2lkIHByaW1hcnkgc2VyaWVzIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCIKICAgIGFuZCBFbmNvdW50ZXIuIlRoZSBsYXRlc3QgdHlwaG9pZCBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbW9yZSB0aGFuIDMgeWVhcnMgYWdvIgoKLyoKQG91dHB1dDogUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBkdWUgZm9yIHR5cGhvaWQgYm9vc3RlciBkb3NlIEd1aWRhbmNlCkBndWlkYW5jZTogU2hvdWxkIHZhY2NpbmF0ZSBjbGllbnQgd2l0aCB0eXBob2lkIGJvb3N0ZXIgZG9zZSBhcyB0aGUgbGF0ZXN0IGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBtb3JlIHRoYW4gMyB5ZWFycyBhZ28uCkNoZWNrIGZvciBjb250cmFpbmRpY2F0aW9ucy4KKi8KZGVmaW5lICJQcmltYXJ5IHNlcmllcyBpcyBjb21wbGV0ZS4gQ2xpZW50IGlzIGR1ZSBmb3IgdHlwaG9pZCBib29zdGVyIGRvc2UgR3VpZGFuY2UiOgogICdTaG91bGQgdmFjY2luYXRlIGNsaWVudCB3aXRoIHR5cGhvaWQgYm9vc3RlciBkb3NlIGFzIHRoZSBsYXRlc3QgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIG1vcmUgdGhhbiAzIHllYXJzIGFnby4KQ2hlY2sgZm9yIGNvbnRyYWluZGljYXRpb25zLicKCgovKgpAdGVzdDogVGVzdCBleHBlY3RlZCByZXN1bHRzIGJhc2VkIG9uIGV4YW1wbGUgcGF0aWVudHMKKi8KZGVmaW5lICJUZXN0IFZhbGlkYXRpb24iOgogIGNhc2UKICAgIHdoZW4gUGF0aWVudC5pZCA9ICcxOS4yJyB0aGVuICJDbGllbnQgaXMgbm90IGR1ZSBmb3IgVHlwaG9pZCB2YWNjaW5hdGlvbiIgYW5kICJHdWlkYW5jZSIgPSAnU2hvdWxkIG5vdCB2YWNjaW5hdGUgY2xpZW50IHdpdGggdHlwaG9pZCBkb3NlIGFzIGNsaWVudFwncyBhZ2UgaXMgbGVzcyB0aGFuIDIgeWVhcnMuCkNoZWNrIGZvciBhbnkgb3RoZXIgdmFjY2luZXMgZHVlIGFuZCBpbmZvcm0gdGhlIGNhcmVnaXZlciBvZiB3aGVuIHRvIGNvbWUgYmFjayBmb3IgdGhlIGZpcnN0IGRvc2UuJwogICAgd2hlbiBQYXRpZW50LmlkID0gJzIwLjEyJyB0aGVuICJDbGllbnQgaXMgZHVlIGZvciBUeXBob2lkIHZhY2NpbmF0aW9uIiBhbmQgIkd1aWRhbmNlIiA9ICdTaG91bGQgdmFjY2luYXRlIGNsaWVudCB3aXRoIHR5cGhvaWQgZG9zZSBhcyBubyB0eXBob2lkIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkIGFuZCBjbGllbnQgaXMgd2l0aGluIGFwcHJvcHJpYXRlIGFnZSByYW5nZS4KQ2hlY2sgZm9yIGNvbnRyYWluZGljYXRpb25zLicKICAgIHdoZW4gUGF0aWVudC5pZCA9ICcyMS4xMycgdGhlbiAiUHJpbWFyeSBzZXJpZXMgaXMgY29tcGxldGUuIENsaWVudCBpcyBub3QgZHVlIGZvciB0eXBob2lkIGJvb3N0ZXIgZG9zZSIgYW5kICJHdWlkYW5jZSIgPSAnU2hvdWxkIG5vdCB2YWNjaW5hdGUgY2xpZW50IHdpdGggdHlwaG9pZCBib29zdGVyIGRvc2UgYXMgdGhlIGxhdGVzdCB0eXBob2lkIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gMyB5ZWFycyBhZ28uCkNoZWNrIGZvciBhbnkgb3RoZXIgdmFjY2luZXMgZHVlIGFuZCBpbmZvcm0gdGhlIGNhcmVnaXZlciBvZiB3aGVuIHRvIGNvbWUgYmFjayBmb3IgdGhlIG5leHQgZG9zZS4nCiAgICB3aGVuIFBhdGllbnQuaWQgPSAnMjIuMTMnIHRoZW4gIlByaW1hcnkgc2VyaWVzIGlzIGNvbXBsZXRlLiBDbGllbnQgaXMgZHVlIGZvciB0eXBob2lkIGJvb3N0ZXIgZG9zZSIgYW5kICJHdWlkYW5jZSIgPSAnU2hvdWxkIHZhY2NpbmF0ZSBjbGllbnQgd2l0aCB0eXBob2lkIGJvb3N0ZXIgZG9zZSBhcyB0aGUgbGF0ZXN0IGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBtb3JlIHRoYW4gMyB5ZWFycyBhZ28uCkNoZWNrIGZvciBjb250cmFpbmRpY2F0aW9ucy4nCiAgICBlbHNlICdObyB0ZXN0IGNhc2Ugc2V0JwogIGVuZAo="^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

