<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="DTElements-HepatitisB"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">DTElements-HepatitisB</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">DTElements-HepatitisB</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-DTElements-HepatitisB.html">DTElements-HepatitisB</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-07-12 20:42:29+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines context-independent elements for DTElements-HepatitisB</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        

        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">/*
@libname: DTElements-HepatitisB
@libid: DTElements-HepatitisB
@description: This library contains Decision Table elements from the decision table &lt;a href='DTIMMZ.D5.DT.HepatitisBcontraindications.html'&gt;IMMZ.D5.DT.HepatitisBcontraindications&lt;/a&gt;
*/
library DTElements-HepatitisB

context Patient

/*
Autogenerated documentation from DAK
@name: Birth dose administration
@title: Birth dose administration
@pseudocode: Birth dose administration
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Birth dose administration&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Birth dose administration

/*
Autogenerated documentation from DAK
@name: Number of hepatitis B birth doses administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE)
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE)
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Number of hepatitis B birth doses administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE)

/*
Autogenerated documentation from DAK
@name: Hepatitis B birth dose was not administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 0
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 0
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Hepatitis B birth dose was not administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 0

/*
Autogenerated documentation from DAK
@name: Client is due for hepatitis B monovalent vaccine
@title: &quot;Immunization recommendation status&quot; = &quot;Due&quot; (where &quot;Type of hepatitis B dose&quot; = &quot;Hepatitis B monovalent vaccine&quot;)
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot; (where &quot;Type of hepatitis B dose&quot; = &quot;Hepatitis B monovalent vaccine&quot;)
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Client is due for hepatitis B monovalent vaccine&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot; (where &quot;Type of hepatitis B dose&quot; = &quot;Hepatitis B monovalent vaccine&quot;)

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with hepatitis B birth dose, as a monovalent dose. Check for contraindications.
@title: Should vaccinate client with hepatitis B birth dose, as a monovalent dose. Check for contraindications.
@pseudocode: Should vaccinate client with hepatitis B birth dose, as a monovalent dose. Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Should vaccinate client with hepatitis B birth dose, as a monovalent dose. Check for contraindications.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Should vaccinate client with hepatitis B birth dose, as a monovalent dose. Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Client should follow delayed-start decision logic
@title: Client should follow delayed-start decision logic
@pseudocode: Client should follow delayed-start decision logic
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Client should follow delayed-start decision logic&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Client should follow delayed-start decision logic

/*
Autogenerated documentation from DAK
@name: The client has a delayed start. Please follow the delayed start schedule.
@title: The client has a delayed start. Please follow the delayed start schedule.
@pseudocode: The client has a delayed start. Please follow the delayed start schedule.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;The client has a delayed start. Please follow the delayed start schedule.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // The client has a delayed start. Please follow the delayed start schedule.

/*
Autogenerated documentation from DAK
@name: Hepatitis B birth dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 1
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Hepatitis B birth dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Birth dose&quot; = TRUE) = 1

/*
Autogenerated documentation from DAK
@name: Client is not due for the hepatitis B birth dose
@title: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Client is not due for the hepatitis B birth dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Not due&quot;

/*
Autogenerated documentation from DAK
@name: Hepatitis B birth dose was already administered. Check hepatitis B immunization schedule.
@title: Hepatitis B birth dose was already administered. Check hepatitis B immunization schedule.
@pseudocode: Hepatitis B birth dose was already administered. Check hepatitis B immunization schedule.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Birthdose']
 */
define &quot;Hepatitis B birth dose was already administered. Check hepatitis B immunization schedule.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Hepatitis B birth dose was already administered. Check hepatitis B immunization schedule.

/*
Autogenerated documentation from DAK
@name: 3-dose schedule (birth dose + 2 primary series doses), on-time start
@title: 3-dose schedule (birth dose + 2 primary series doses), on-time start
@pseudocode: 3-dose schedule (birth dose + 2 primary series doses), on-time start
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;3-dose schedule (birth dose + 2 primary series doses), on-time start&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 3-dose schedule (birth dose + 2 primary series doses), on-time start

/*
Autogenerated documentation from DAK
@name: Number of hepatitis B primary series doses administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;)
 */
define &quot;Number of hepatitis B primary series doses administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;)

/*
Autogenerated documentation from DAK
@name: No hepatitis B primary series doses were administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0
 */
define &quot;No hepatitis B primary series doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0

/*
Autogenerated documentation from DAK
@name: Client is not due for a hepatitis B vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
 */
define &quot;Client is not due for a hepatitis B vaccination&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Not due&quot;

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with first hepatitis B dose as clients age is not within appropriate age range.
@pseudocode: Check for any other vaccines due and inform the caregiver of when to come back for the first dose.
 */
define &quot;Should not vaccinate client with first hepatitis B dose as clients age is not within appropriate age range.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due and inform the caregiver of when to come back for the first dose.

/*
Autogenerated documentation from DAK
@name: Client is due for a hepatitis B vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
 */
define &quot;Client is due for a hepatitis B vaccination&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot;

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with first hepatitis B dose as clients age is within appropriate age range.
@pseudocode: Check for contraindications.
 */
define &quot;Should vaccinate client with first hepatitis B dose as clients age is within appropriate age range.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: One hepatitis B primary series dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;One hepatitis B primary series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago.
@pseudocode: Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.
 */
define &quot;Should not vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered more than 4 weeks ago.
@pseudocode: Check for contraindications.
 */
define &quot;Should vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered more than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Two hepatitis B primary series doses were administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
 */
define &quot;Two hepatitis B primary series doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2

/*
Autogenerated documentation from DAK
@name: Hepatitis B immunization schedule is complete
@pseudocode: '&quot;Immunization recommendation status&quot; = &quot;Complete&quot;
&quot;Completed the primary vaccination series&quot; = TRUE (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;)
 */
define &quot;Hepatitis B immunization schedule is complete&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // '&quot;Immunization recommendation status&quot; = &quot;Complete&quot;

   // &quot;Completed the primary vaccination series&quot; = TRUE (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;)

/*
Autogenerated documentation from DAK
@name: Hepatitis B immunization schedule is complete for client whose weight at birth was over 2000 g and who was not premature infant. Two hepatitis B primary series doses were administered.
@title: Hepatitis B immunization schedule is complete for client whose weight at birth was over 2000 g and who was not premature infant. Two hepatitis B primary series doses were administered.
@pseudocode: Hepatitis B immunization schedule is complete for client whose weight at birth was over 2000 g and who was not premature infant. Two hepatitis B primary series doses were administered.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;Hepatitis B immunization schedule is complete for client whose weight at birth was over 2000 g and who was not premature infant. Two hepatitis B primary series doses were administered.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Hepatitis B immunization schedule is complete for client whose weight at birth was over 2000 g and who was not premature infant. Two hepatitis B primary series doses were administered.

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B-containing vaccine was administered less than 4 weeks ago.
@title: Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.
@pseudocode: Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;Should not vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B-containing vaccine was administered less than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B-containing vaccine administered more than 4 weeks ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;Should vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B-containing vaccine administered more than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B dose was administered less than 4 weeks ago.
@title: Check for any other vaccines due and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any other vaccines due and inform the caregiver of when to come back for the next dose.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;Should not vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B dose was administered less than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B dose was administered more than 4 weeks ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;Should vaccinate client with third hepatitis B dose as the client was a low-birth-weight infant and the latest hepatitis B dose was administered more than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Three hepatitis B primary series doses were administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3
 */
define &quot;Three hepatitis B primary series doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3

/*
Autogenerated documentation from DAK
@name: The hepatitis B immunization schedule is complete for client whose weight at birth was below 2000 g and who was a premature infant. Four hepatitis B primary series doses were administered.
@title: Check for any other vaccines due.
@pseudocode: Check for any other vaccines due.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.3doses']
 */
define &quot;The hepatitis B immunization schedule is complete for client whose weight at birth was below 2000 g and who was a premature infant. Four hepatitis B primary series doses were administered.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due.

/*
Autogenerated documentation from DAK
@name: 4-dose schedule (birth dose + 3 primary series doses), on-time start
@title: 4-dose schedule (birth dose + 3 primary series doses), on-time start
@pseudocode: 4-dose schedule (birth dose + 3 primary series doses), on-time start
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.4doses']
 */
define &quot;4-dose schedule (birth dose + 3 primary series doses), on-time start&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 4-dose schedule (birth dose + 3 primary series doses), on-time start

/*
Autogenerated documentation from DAK
@name: One hepatitis B primary series doses were administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.4doses']
 */
define &quot;One hepatitis B primary series doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with third hepatitis B dose as the latest Hepatitis B dose was administered less than 4 weeks ago.
@title: Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.
@pseudocode: Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.4doses']
 */
define &quot;Should not vaccinate client with third hepatitis B dose as the latest Hepatitis B dose was administered less than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due, and inform the caregiver of when to come back for the third dose.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with third hepatitis B dose as the latest Hepatitis B dose was administered more than 4 weeks ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.4doses']
 */
define &quot;Should vaccinate client with third hepatitis B dose as the latest Hepatitis B dose was administered more than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: The hepatitis B immunization schedule is complete. Three hepatitis B primary series doses were administered.
@title: Check for any other vaccines due.
@pseudocode: Check for any other vaccines due.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.4doses']
 */
define &quot;The hepatitis B immunization schedule is complete. Three hepatitis B primary series doses were administered.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due.

/*
Autogenerated documentation from DAK
@name: 3-dose schedule (no birth dose + 3 doses), delayed start
@title: 3-dose schedule (no birth dose + 3 doses), delayed start
@pseudocode: 3-dose schedule (no birth dose + 3 doses), delayed start
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;3-dose schedule (no birth dose + 3 doses), delayed start&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 3-dose schedule (no birth dose + 3 doses), delayed start

/*
Autogenerated documentation from DAK
@name: Number of hepatitis B doses administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;)
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;)
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Number of hepatitis B doses administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;)

/*
Autogenerated documentation from DAK
@name: No hepatitis B doses were administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 0
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 0
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;No hepatitis B doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 0

/*
Autogenerated documentation from DAK
@name: Client is due for hepatitis B vaccination
@title: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Client is due for hepatitis B vaccination&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot;

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with first hepatitis B dose as hepatitis B birth dose was not administered. The first hepatitis B dose should be administered as soon as possible.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Should vaccinate client with first hepatitis B dose as hepatitis B birth dose was not administered. The first hepatitis B dose should be administered as soon as possible.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: One hepatitis B dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 1
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;One hepatitis B dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 1

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Should vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Two hepatitis B doses were administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 2
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 2
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Two hepatitis B doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 2

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago. Two hepatitis B doses have been administered to the client.
@title: Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Should not vaccinate client with second hepatitis B dose as the latest hepatitis B dose was administered less than 4 weeks ago. Two hepatitis B doses have been administered to the client.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with third hepatitis B dose as the first hepatitis B dose was administered less than 6 months ago.
@title: Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Should not vaccinate client with third hepatitis B dose as the first hepatitis B dose was administered less than 6 months ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due, and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with third hepatitis B dose as the first hepatitis B dose was administered more than 6 months ago and the latest hepatitis B dose was administered more than 4 weeks ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Should vaccinate client with third hepatitis B dose as the first hepatitis B dose was administered more than 6 months ago and the latest hepatitis B dose was administered more than 4 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Three hepatitis B doses were administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 3
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 3
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Three hepatitis B doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis B-containing vaccines&quot;) = 3

/*
Autogenerated documentation from DAK
@name: Hepatitis B immunization schedule is complete. Three hepatitis B primary series doses were administered.
@title: Check for any other vaccines due.
@pseudocode: Check for any other vaccines due.
@tab: ['HepatitisB']
@table: ['IMMZ.D2.DT.HepatitisB.Delayedstart']
 */
define &quot;Hepatitis B immunization schedule is complete. Three hepatitis B primary series doses were administered.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any other vaccines due.

/*
Autogenerated documentation from DAK
@name: The client has history of severe allergic reactions
@pseudocode: &quot;Potential contraindications&quot; = &quot;Severe allergic reactions&quot;
 */
define &quot;The client has history of severe allergic reactions&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Potential contraindications&quot; = &quot;Severe allergic reactions&quot;

/*
Autogenerated documentation from DAK
@name: Hepatitis B vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.
@title: '&quot;Immunization recommendation status&quot; = &quot;Further evaluation needed&quot;
@pseudocode: '&quot;Immunization recommendation status&quot; = &quot;Further evaluation needed&quot;
@tab: ['HepatitisB']
@table: ['IMMZ.D5.DT.HepatitisBcontraindications']
 */
define &quot;Hepatitis B vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // '&quot;Immunization recommendation status&quot; = &quot;Further evaluation needed&quot;

/*
Autogenerated documentation from DAK
@name: Do not vaccinate client with hepatitis B if the client had a history of serious allergic reactions to any of the vaccine components. Allergy to yeast is considered a contraindication to immunization with yeast-produced hepatitis B-containing vaccine.
@title: Do not vaccinate client with hepatitis B if the client had a history of serious allergic reactions to any of the vaccine components. Allergy to yeast is considered a contraindication to immunization with yeast-produced hepatitis B-containing vaccine.
@pseudocode: Do not vaccinate client with hepatitis B if the client had a history of serious allergic reactions to any of the vaccine components. Allergy to yeast is considered a contraindication to immunization with yeast-produced hepatitis B-containing vaccine.
@tab: ['HepatitisB']
@table: ['IMMZ.D5.DT.HepatitisBcontraindications']
 */
define &quot;Do not vaccinate client with hepatitis B if the client had a history of serious allergic reactions to any of the vaccine components. Allergy to yeast is considered a contraindication to immunization with yeast-produced hepatitis B-containing vaccine.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Do not vaccinate client with hepatitis B if the client had a history of serious allergic reactions to any of the vaccine components. Allergy to yeast is considered a contraindication to immunization with yeast-produced hepatitis B-containing vaccine.

</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code/></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/DTElements-HepatitisB"/>
  <version value="0.2.0"/>
  <name value="DTElements-HepatitisB"/>
  <title value="DTElements-HepatitisB"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-07-12T20:42:29+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines context-independent elements for DTElements-HepatitisB"/>
  <content>
    <contentType value="text/cql"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
  </content>
</Library>