{
  "resourceType" : "Library",
  "id" : "IMMZConcepts",
  "text" : {
    "status" : "generated",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2>Related Artifacts</h2><table class=\"grid\"><tr><td>depends-on</td><td>Code system ICD-10</td><td><a href=\"http://terminology.hl7.org/5.0.0/CodeSystem-icd10.html\">ICD-10</a></td></tr><tr><td>depends-on</td><td>Code system SNOMED-CT</td><td><a href=\"http://hl7.org/fhir/R4/codesystem-snomedct.html\">SNOMED CT (all versions)</a></td></tr><tr><td>depends-on</td><td>Code system LOINC</td><td><a href=\"http://terminology.hl7.org/5.0.0/CodeSystem-v3-loinc.html\">Logical Observation Identifiers, Names and Codes (LOINC)</a></td></tr><tr><td>depends-on</td><td>Code system RxNorm</td><td><a href=\"http://terminology.hl7.org/5.0.0/CodeSystem-v3-rxNorm.html\">RxNorm</a></td></tr><tr><td>depends-on</td><td>Code system CIEL</td><td><code>http://hl7.org/fhir/sid/ciel</code></td></tr><tr><td>depends-on</td><td>Code system ICD-11</td><td><code>http://hl7.org/fhir/sid/icd-11</code></td></tr><tr><td>depends-on</td><td>Code system ICHI</td><td><code>https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi</code></td></tr><tr><td>depends-on</td><td>Code system ICF</td><td><a href=\"http://terminology.hl7.org/5.0.0/CodeSystem-ICFDut.html\">International Classification of Functioning, Disability and Health, Dutch Translation</a></td></tr><tr><td>depends-on</td><td>Code system Extended Codes CodeSystem codes</td><td><code>http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes</code></td></tr><tr><td>depends-on</td><td>Value set WHO ATC</td><td><code>http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips</code></td></tr><tr><td>depends-on</td><td>Value set Negative Result</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/negativetestresult-values</code></td></tr><tr><td>depends-on</td><td>Value set Positive Result</td><td><a href=\"ValueSet-PositiveTestResult-values.html\">Positive Test Result valuest</a></td></tr><tr><td>depends-on</td><td>Value set CD4% Test Result</td><td><a href=\"ValueSet-CD4percentageTest-values.html\">CD4 Percentage Test</a></td></tr><tr><td>depends-on</td><td>Value set CD4 Count Test Result</td><td><a href=\"ValueSet-CD4CountTestResult-values.html\">CD4 Count Test Result</a></td></tr><tr><td>depends-on</td><td>Value set Immunocompromised</td><td><a href=\"ValueSet-Immunocompromised-values.html\">Immunocompromised valueset</a></td></tr><tr><td>depends-on</td><td>Value set Patient birth weight observation value</td><td><a href=\"ValueSet-Birthweight-values.html\">Birthweight valueset</a></td></tr><tr><td>depends-on</td><td>Value set Seronegative</td><td><a href=\"ValueSet-Seronegative-values.html\">Seronegative valuest</a></td></tr><tr><td>depends-on</td><td>Value set PretermBirth</td><td><a href=\"ValueSet-Preterm-values.html\">Preterm valueset</a></td></tr><tr><td>depends-on</td><td>Value set HIV status</td><td><code>http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de45</code></td></tr><tr><td>depends-on</td><td>Value set HIV status - HIV positive Choices</td><td><code>http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46</code></td></tr><tr><td>depends-on</td><td>Value set HIV status - HIV negative Choices</td><td><code>http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47</code></td></tr><tr><td>depends-on</td><td>Value set TST Test Result</td><td><a href=\"ValueSet-TSTTestResult-values.html\">TST Test Result values</a></td></tr><tr><td>depends-on</td><td>Value set IGRA Test Result</td><td><a href=\"ValueSet-IGRATestResult-values.html\">IGRA Test Result values</a></td></tr><tr><td>depends-on</td><td>Value set ARV Drugs</td><td><a href=\"ValueSet-ARVDrugs-values.html\">ARV Drugs values</a></td></tr><tr><td>depends-on</td><td>Value set VNA levels</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/VNAlevelsRAbies-values</code></td></tr><tr><td>depends-on</td><td>Value set Inactivated Vero cell-derived Japanese Encephalitis vaccines</td><td><a href=\"ValueSet-InactivatedJE-values.html\">Inactivated Vero cell-derived Japanese Encephalitis vaccines valueset</a></td></tr><tr><td>depends-on</td><td>Value set BCG Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE1</code></td></tr><tr><td>depends-on</td><td>Value set Cholera Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE2</code></td></tr><tr><td>depends-on</td><td>Value set Diphtheria Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE3</code></td></tr><tr><td>depends-on</td><td>Value set Hib Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE4</code></td></tr><tr><td>depends-on</td><td>Value set HepA Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE5</code></td></tr><tr><td>depends-on</td><td>Value set HepB Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE6</code></td></tr><tr><td>depends-on</td><td>Value set HPV Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE7</code></td></tr><tr><td>depends-on</td><td>Value set Japanese Encephalitis Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE8</code></td></tr><tr><td>depends-on</td><td>Value set MCV Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE9</code></td></tr><tr><td>depends-on</td><td>Value set Meningococcal Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE10</code></td></tr><tr><td>depends-on</td><td>Value set Mumps Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE11</code></td></tr><tr><td>depends-on</td><td>Value set Pertussis Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE12</code></td></tr><tr><td>depends-on</td><td>Value set Pneumococcal Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE13</code></td></tr><tr><td>depends-on</td><td>Value set Polio Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE14</code></td></tr><tr><td>depends-on</td><td>Value set Rabies Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE15</code></td></tr><tr><td>depends-on</td><td>Value set Rotavirus Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE16</code></td></tr><tr><td>depends-on</td><td>Value set Rubella Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE17</code></td></tr><tr><td>depends-on</td><td>Value set Seasonal Influenza Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE18</code></td></tr><tr><td>depends-on</td><td>Value set Tetanus Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE19</code></td></tr><tr><td>depends-on</td><td>Value set Typhoid Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE21</code></td></tr><tr><td>depends-on</td><td>Value set TBE Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE20</code></td></tr><tr><td>depends-on</td><td>Value set Varicella Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE22</code></td></tr><tr><td>depends-on</td><td>Value set Yellow Fever Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE23</code></td></tr><tr><td>depends-on</td><td>Value set DTP Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE24</code></td></tr><tr><td>depends-on</td><td>Value set Inactivated Polio Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE25</code></td></tr><tr><td>depends-on</td><td>Value set Oral Polio Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE26</code></td></tr><tr><td>depends-on</td><td>Value set Dengue Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE27</code></td></tr><tr><td>depends-on</td><td>Value set Inactivated HAV</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE28</code></td></tr><tr><td>depends-on</td><td>Value set WC Class Cholera Vaccine</td><td><a href=\"ValueSet-WCClassCholeraVaccine-values.html\">WC Class Cholera Vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set WC-rBS Class Cholera Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/WC-rBSClassCholeraVaccine-values</code></td></tr><tr><td>depends-on</td><td>Value set ViPS Class Typhoid Vaccine</td><td><a href=\"ValueSet-ViPSClassTyphoidVaccine-values.html\">ViPS Class Typhoid Vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set Ty21a Class Typhoid Vaccine</td><td><a href=\"ValueSet-Ty21aClassTyphoidVaccine-values.html\">Ty21a Class Typhoid Vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set MenA conjugate vaccine (5Âµg)</td><td><a href=\"ValueSet-MenAconjugatevaccine-values.html\">MenA conjugate vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set monovalent MenC conjugate</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/monovalentMenCconjugate-values</code></td></tr><tr><td>depends-on</td><td>Value set Quadrivalent conjugate</td><td><a href=\"ValueSet-Quadrivalentconjugate-values.html\">Quadrivalent conjugate values</a></td></tr><tr><td>depends-on</td><td>Value set FSME-Immun Class TBE Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/FSME-ImmunClassTBEVaccine-values</code></td></tr><tr><td>depends-on</td><td>Value set TBE-Moscow Class TBE Vaccine</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/TBE-MoscowClassTBEVaccine-values</code></td></tr><tr><td>depends-on</td><td>Value set EnceVir Class TBE Vaccine</td><td><a href=\"ValueSet-EnceVirClassTBEVaccine-values.html\">EnceVir Class TBE Vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set Encepur Class TBE Vaccine</td><td><a href=\"ValueSet-EncepurClassTBEVaccine-values.html\">Encepur Class TBE Vaccine values</a></td></tr><tr><td>depends-on</td><td>Value set Intussusception</td><td><code>http://fhir.org/guides/who/smart-immunization/ValueSet/intussusception-values</code></td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class=\"language-sql\">library IMMZConcepts\r\n\r\n// Code Systems\r\n//Probably can delete these once imported WHOConcepts\r\ncodesystem &quot;ICD-10&quot;: 'http://hl7.org/fhir/sid/icd-10'\r\ncodesystem &quot;SNOMED-CT&quot;: 'http://snomed.info/sct'\r\ncodesystem &quot;LOINC&quot;: 'http://loinc.org'\r\ncodesystem &quot;RxNorm&quot;: 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\ncodesystem &quot;CIEL&quot;: 'http://hl7.org/fhir/sid/ciel'\r\ncodesystem &quot;ICD-11&quot;: 'http://hl7.org/fhir/sid/icd-11'\r\ncodesystem &quot;ICHI&quot;: 'https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi'\r\ncodesystem &quot;ICF&quot;: 'http://hl7.org/fhir/sid/icf-nl'\r\ncodesystem &quot;Extended Codes CodeSystem codes&quot;: 'http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes'\r\n\r\n//WHO ATC IPS Valueset\r\nvalueset &quot;WHO ATC&quot;: 'http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips'\r\n\r\n// General use ValueSets \r\nvalueset &quot;Negative Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/negativetestresult-values'\r\nvalueset &quot;Positive Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/PositiveTestResult-values'\r\nvalueset &quot;CD4% Test Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/CD4percentageTest-values'\r\nvalueset &quot;CD4 Count Test Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/CD4CountTestResult-values'\r\nvalueset &quot;Immunocompromised&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Immunocompromised-values'\r\nvalueset &quot;Patient birth weight observation value&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Birthweight-values'\r\nvalueset &quot;Seronegative&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Seronegative-values'\r\nvalueset &quot;PretermBirth&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Preterm-values'\r\n\r\n// TODO : Adapt from ANC\r\nvalueset &quot;HIV status&quot;: 'http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de45'\r\nvalueset &quot;HIV status - HIV positive Choices&quot;: 'http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46'\r\nvalueset &quot;HIV status - HIV negative Choices&quot;: 'http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47'\r\n\r\n// Vaccine specific ValueSets\r\n//BCG specific ValuSets\r\nvalueset &quot;TST Test Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/TSTTestResult-values'\r\nvalueset &quot;IGRA Test Result&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IGRATestResult-values'\r\nvalueset &quot;ARV Drugs&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/ARVDrugs-values'\r\nvalueset &quot;VNA levels&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/VNAlevelsRAbies-values'\r\n\r\n// JE Classification \r\nvalueset &quot;Inactivated Vero cell-derived Japanese Encephalitis vaccines&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/InactivatedJE-values'\r\n\r\n//valueset &quot;Target Disease&quot;: 'http://hl7.org/fhir/ValueSet/immunization-target-disease'\r\n\r\n// Vaccine Value Sets\r\nvalueset &quot;BCG Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE1'\r\nvalueset &quot;Cholera Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE2'\r\nvalueset &quot;Diphtheria Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE3'\r\nvalueset &quot;Hib Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE4'\r\nvalueset &quot;HepA Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE5'\r\nvalueset &quot;HepB Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE6'\r\nvalueset &quot;HPV Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE7'\r\nvalueset &quot;Japanese Encephalitis Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE8'\r\nvalueset &quot;MCV Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE9'\r\nvalueset &quot;Meningococcal Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE10'\r\nvalueset &quot;Mumps Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE11'\r\nvalueset &quot;Pertussis Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE12'\r\nvalueset &quot;Pneumococcal Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE13'\r\nvalueset &quot;Polio Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE14'\r\nvalueset &quot;Rabies Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE15'\r\nvalueset &quot;Rotavirus Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE16'\r\nvalueset &quot;Rubella Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE17'\r\nvalueset &quot;Seasonal Influenza Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE18'\r\nvalueset &quot;Tetanus Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE19'\r\nvalueset &quot;Typhoid Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE21'\r\nvalueset &quot;TBE Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE20'\r\nvalueset &quot;Varicella Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE22'\r\nvalueset &quot;Yellow Fever Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE23'\r\nvalueset &quot;DTP Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE24'\r\nvalueset &quot;Inactivated Polio Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE25'\r\nvalueset &quot;Oral Polio Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE26'\r\nvalueset &quot;Dengue Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE27'\r\nvalueset &quot;Inactivated HAV&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE28'\r\n\r\n\r\ncode &quot;Adverse Event Severity&quot;: '246112005' from &quot;SNOMED-CT&quot; display 'Severity (attribute)'\r\ncode &quot;Adverse Event Manifestation&quot;: '246112005' from &quot;SNOMED-CT&quot; display 'Severity (attribute)'\r\ncode &quot;Sickle-cell Disease Condition&quot;: '127040003' from &quot;SNOMED-CT&quot; display 'Sickle cell-hemoglobin SS disease (disorder)'\r\n\r\n// Cholera vaccine classes\r\nvalueset &quot;WC Class Cholera Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/WCClassCholeraVaccine-values'\r\nvalueset &quot;WC-rBS Class Cholera Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/WC-rBSClassCholeraVaccine-values'\r\nvalueset &quot;ViPS Class Typhoid Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/ViPSClassTyphoidVaccine-values'\r\nvalueset &quot;Ty21a Class Typhoid Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Ty21aClassTyphoidVaccine-values'\r\n//  MenA vaccine classes\r\nvalueset &quot;MenA conjugate vaccine (5Âµg)&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/MenAconjugatevaccine-values'\r\nvalueset &quot;monovalent MenC conjugate&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/monovalentMenCconjugate-values'\r\nvalueset &quot;Quadrivalent conjugate&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/Quadrivalentconjugate-values'\r\n// TBE classifications of vaccines\r\n// Assumption: Classifications of TBE vaccine can be codified using some (yet to be discovered) code system - possibly using GTIN on the product?\r\nvalueset &quot;FSME-Immun Class TBE Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/FSME-ImmunClassTBEVaccine-values'\r\nvalueset &quot;TBE-Moscow Class TBE Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/TBE-MoscowClassTBEVaccine-values'\r\nvalueset &quot;EnceVir Class TBE Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/EnceVirClassTBEVaccine-values'\r\nvalueset &quot;Encepur Class TBE Vaccine&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/EncepurClassTBEVaccine-values'\r\n\r\nvalueset &quot;Intussusception&quot;: 'http://fhir.org/guides/who/smart-immunization/ValueSet/intussusception-values'</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 31Kb)</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 67Kb)</p></div>"
  },
  "extension" : [{
    "url" : "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference" : {
      "reference" : "Device/cqf-tooling"
    }
  }],
  "url" : "http://fhir.org/guides/who/smart-immunization/Library/IMMZConcepts",
  "version" : "0.1.0",
  "name" : "IMMZConcepts",
  "status" : "draft",
  "date" : "2023-08-02T04:40:13+00:00",
  "publisher" : "World Health Organization (WHO)",
  "jurisdiction" : [{
    "coding" : [{
      "system" : "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code" : "001"
    }]
  }],
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "Code system ICD-10",
    "resource" : "http://hl7.org/fhir/sid/icd-10"
  },
  {
    "type" : "depends-on",
    "display" : "Code system SNOMED-CT",
    "resource" : "http://snomed.info/sct"
  },
  {
    "type" : "depends-on",
    "display" : "Code system LOINC",
    "resource" : "http://loinc.org"
  },
  {
    "type" : "depends-on",
    "display" : "Code system RxNorm",
    "resource" : "http://www.nlm.nih.gov/research/umls/rxnorm"
  },
  {
    "type" : "depends-on",
    "display" : "Code system CIEL",
    "resource" : "http://hl7.org/fhir/sid/ciel"
  },
  {
    "type" : "depends-on",
    "display" : "Code system ICD-11",
    "resource" : "http://hl7.org/fhir/sid/icd-11"
  },
  {
    "type" : "depends-on",
    "display" : "Code system ICHI",
    "resource" : "https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi"
  },
  {
    "type" : "depends-on",
    "display" : "Code system ICF",
    "resource" : "http://hl7.org/fhir/sid/icf-nl"
  },
  {
    "type" : "depends-on",
    "display" : "Code system Extended Codes CodeSystem codes",
    "resource" : "http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes"
  },
  {
    "type" : "depends-on",
    "display" : "Value set WHO ATC",
    "resource" : "http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Negative Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/negativetestresult-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Positive Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/PositiveTestResult-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set CD4% Test Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/CD4percentageTest-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set CD4 Count Test Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/CD4CountTestResult-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Immunocompromised",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Immunocompromised-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Patient birth weight observation value",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Birthweight-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Seronegative",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Seronegative-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set PretermBirth",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Preterm-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HIV status",
    "resource" : "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de45"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HIV status - HIV positive Choices",
    "resource" : "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HIV status - HIV negative Choices",
    "resource" : "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47"
  },
  {
    "type" : "depends-on",
    "display" : "Value set TST Test Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/TSTTestResult-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set IGRA Test Result",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IGRATestResult-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set ARV Drugs",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/ARVDrugs-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set VNA levels",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/VNAlevelsRAbies-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Inactivated Vero cell-derived Japanese Encephalitis vaccines",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/InactivatedJE-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set BCG Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE1"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Cholera Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE2"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Diphtheria Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE3"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Hib Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE4"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HepA Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE5"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HepB Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE6"
  },
  {
    "type" : "depends-on",
    "display" : "Value set HPV Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE7"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Japanese Encephalitis Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE8"
  },
  {
    "type" : "depends-on",
    "display" : "Value set MCV Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE9"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Meningococcal Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE10"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Mumps Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE11"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Pertussis Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE12"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Pneumococcal Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE13"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Polio Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE14"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Rabies Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE15"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Rotavirus Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE16"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Rubella Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE17"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Seasonal Influenza Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE18"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Tetanus Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE19"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Typhoid Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE21"
  },
  {
    "type" : "depends-on",
    "display" : "Value set TBE Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE20"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Varicella Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE22"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Yellow Fever Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE23"
  },
  {
    "type" : "depends-on",
    "display" : "Value set DTP Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE24"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Inactivated Polio Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE25"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Oral Polio Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE26"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Dengue Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE27"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Inactivated HAV",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/IMMZ.A1.DE28"
  },
  {
    "type" : "depends-on",
    "display" : "Value set WC Class Cholera Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/WCClassCholeraVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set WC-rBS Class Cholera Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/WC-rBSClassCholeraVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set ViPS Class Typhoid Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/ViPSClassTyphoidVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Ty21a Class Typhoid Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Ty21aClassTyphoidVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set MenA conjugate vaccine (5Âµg)",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/MenAconjugatevaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set monovalent MenC conjugate",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/monovalentMenCconjugate-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Quadrivalent conjugate",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/Quadrivalentconjugate-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set FSME-Immun Class TBE Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/FSME-ImmunClassTBEVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set TBE-Moscow Class TBE Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/TBE-MoscowClassTBEVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set EnceVir Class TBE Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/EnceVirClassTBEVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Encepur Class TBE Vaccine",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/EncepurClassTBEVaccine-values"
  },
  {
    "type" : "depends-on",
    "display" : "Value set Intussusception",
    "resource" : "http://fhir.org/guides/who/smart-immunization/ValueSet/intussusception-values"
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : ""
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  },
  {
    "contentType" : "application/elm+json",
    "data" : ""
  }]
}