<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="DTs.Cholera"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">DTs.Cholera</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">DTs.Cholera</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-DTs.Cholera.html">DTs.Cholera</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-07-17 20:56:23+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines context-independent elements for DTs.Cholera</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        

        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">/*
@libname: DTs.Cholera
@libid: DTs.Cholera
@description: This library contains Decision Table elements from the decision table &lt;a href='DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses.html'&gt;DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses&lt;/a&gt;
*/
library DTs.Cholera

context Patient

/*
Autogenerated documentation from DAK
@name: Clients age
@pseudocode: Today's date − &quot;Date of birth&quot;
 */
define &quot;Clients age&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date of birth&quot;

/*
Autogenerated documentation from DAK
@name: Number of cholera primary series doses administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;)
 */
define &quot;Number of cholera primary series doses administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;)

/*
Autogenerated documentation from DAK
@name: Number of cholera booster series doses administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster series&quot;)
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster series&quot;)
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Number of cholera booster series doses administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster series&quot;)

/*
Autogenerated documentation from DAK
@name: Dose number of the latest dose
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;)
 */
define &quot;Dose number of the latest dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;)

/*
Autogenerated documentation from DAK
@name: Time passed since last cholera dose was administered
@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;)
 */
define &quot;Time passed since last cholera dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;)

/*
Autogenerated documentation from DAK
@name: Clients age is less than 1 year
@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 1 year
 */
define &quot;Clients age is less than 1 year&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date of birth&quot; &lt; 1 year

/*
Autogenerated documentation from DAK
@name: Client is not due for cholera vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
 */
define &quot;Client is not due for cholera vaccination&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Not due&quot;

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as clients age is under 1 year.
@title: Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should not vaccinate client with cholera dose as clients age is under 1 year.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.

/*
Autogenerated documentation from DAK
@name: Clients age is more than or equal to 1 year
@pseudocode: Today's date − &quot;Date of birth&quot; ≥ 1 year
 */
define &quot;Clients age is more than or equal to 1 year&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date of birth&quot; ≥ 1 year

/*
Autogenerated documentation from DAK
@name: No cholera primary series dose was administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0
 */
define &quot;No cholera primary series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0

/*
Autogenerated documentation from DAK
@name: Client is due for cholera vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
&quot;Completed the primary vaccination series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = FALSE when dose 1 is administered
 */
define &quot;Client is due for cholera vaccination&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot;

   // &quot;Completed the primary vaccination series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = FALSE when dose 1 is administered

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as no doses have been given.
@title: Should vaccinate client with cholera dose as no doses have been given.
@pseudocode: Should vaccinate client with cholera dose as no doses have been given.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should vaccinate client with cholera dose as no doses have been given.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Should vaccinate client with cholera dose as no doses have been given.

/*
Autogenerated documentation from DAK
@name: One cholera primary series dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;One cholera primary series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered less than 14 days ago
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 14 days
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 14 days
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;The latest cholera dose was administered less than 14 days ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 14 days

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as the latest cholera dose was administered less than 14 days ago.
@title: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should not vaccinate client with cholera dose as the latest cholera dose was administered less than 14 days ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered more than 14 days ago
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 14 days
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 14 days
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;The latest cholera dose was administered more than 14 days ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 14 days

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as the latest cholera dose was administered more than 14 days ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should vaccinate client with cholera dose as the latest cholera dose was administered more than 14 days ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Two cholera primary series doses were administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Two cholera primary series doses were administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2

/*
Autogenerated documentation from DAK
@name: No cholera booster series dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) = 0
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) = 0
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;No cholera booster series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) = 0

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered less than 3 years ago
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 3 years
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 3 years
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;The latest cholera dose was administered less than 3 years ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 3 years

/*
Autogenerated documentation from DAK
@name: Primary series is complete. Client is not due for cholera booster dose
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
&quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE
 */
define &quot;Primary series is complete. Client is not due for cholera booster dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Not due&quot;

   // &quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera booster dose as primary series was completed less than 3 years ago.
@title: Check for any vaccines due and inform the caregiver of when to come back for the first booster dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the first booster dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should not vaccinate client with cholera booster dose as primary series was completed less than 3 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the first booster dose.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered more than 3 years ago
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 3 years
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 3 years
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;The latest cholera dose was administered more than 3 years ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 3 years

/*
Autogenerated documentation from DAK
@name: Primary series is complete. Client is due for cholera booster dose
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
&quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE
 */
define &quot;Primary series is complete. Client is due for cholera booster dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot;

   // &quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as the primary series for cholera was completed more than 3 years ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should vaccinate client with cholera dose as the primary series for cholera was completed more than 3 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: At least one booster series dose was administered
@title: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) &gt;= 1
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) &gt;= 1
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;At least one booster series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Booster dose&quot;) &gt;= 1

/*
Autogenerated documentation from DAK
@name: Dose number of the latest dose is one
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 1
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 1
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Dose number of the latest dose is one&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 1

/*
Autogenerated documentation from DAK
@name: Client is not due for cholera booster dose
@title: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Client is not due for cholera booster dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Not due&quot;

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera booster dose as the latest dose was administered less than 14 days ago.
@title: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should not vaccinate client with cholera booster dose as the latest dose was administered less than 14 days ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered more than 14 days ago and less than 3 years ago
@title: 14 days &lt;= Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt;= 3 years
@pseudocode: 14 days &lt;= Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt;= 3 years
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;The latest cholera dose was administered more than 14 days ago and less than 3 years ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 14 days &lt;= Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt;= 3 years

/*
Autogenerated documentation from DAK
@name: Client is due for cholera booster dose
@title: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Client is due for cholera booster dose&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Immunization recommendation status&quot; = &quot;Due&quot;

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera booster dose as the booster series is not completed and the latest cholera dose was administered more than 14 days ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should vaccinate client with cholera booster dose as the booster series is not completed and the latest cholera dose was administered more than 14 days ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Dose number of the latest dose is two
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 2
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 2
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Dose number of the latest dose is two&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = 2

/*
Autogenerated documentation from DAK
@name: Booster series is complete
@title: &quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE
@pseudocode: &quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Booster series is complete&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // &quot;Completed the booster series&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) = TRUE

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as the booster series for cholera was completed less than 3 years ago.
@title: Check for any vaccines due and inform the caregiver of when to come back for the next booster series.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the next booster series.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should not vaccinate client with cholera dose as the booster series for cholera was completed less than 3 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the next booster series.

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as the booster series for cholera was completed more than 3 years ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WCvaccines']
 */
define &quot;Should vaccinate client with cholera dose as the booster series for cholera was completed more than 3 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Clients age is less than 2 years
@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 2 years
 */
define &quot;Clients age is less than 2 years&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date of birth&quot; &lt; 2 years

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as clients age is less than 2 years.
@title: Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Should not vaccinate client with cholera dose as clients age is less than 2 years.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the first cholera dose.

/*
Autogenerated documentation from DAK
@name: Clients age is 2–5 years
@title: 2 years ≤ Today's date − &quot;Date of birth&quot; ≤ 5 years
@pseudocode: 2 years ≤ Today's date − &quot;Date of birth&quot; ≤ 5 years
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Clients age is 2–5 years&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 2 years ≤ Today's date − &quot;Date of birth&quot; ≤ 5 years

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as no cholera doses have been administered.
@pseudocode: Check for contraindications.
 */
define &quot;Should vaccinate client with cholera dose as no cholera doses have been administered.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: At least one cholera primary series dose was administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &gt;= 1
 */
define &quot;At least one cholera primary series dose was administered&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &gt;= 1

/*
Autogenerated documentation from DAK
@name: Dose number of the latest primary series dose is one
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
 */
define &quot;Dose number of the latest primary series dose is one&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered less than 1 week ago
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 1 week
 */
define &quot;The latest cholera dose was administered less than 1 week ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 1 week

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as the latest cholera dose was administered less than 1 week ago.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
 */
define &quot;Should not vaccinate client with cholera dose as the latest cholera dose was administered less than 1 week ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered more than 1 week and less than 6 weeks ago
@pseudocode: 1 week ≤ Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 6 weeks
 */
define &quot;The latest cholera dose was administered more than 1 week and less than 6 weeks ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // 1 week ≤ Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &lt; 6 weeks

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose as the latest cholera dose was administered in the last 1 to 6 weeks.
@pseudocode: Check for contraindications.
 */
define &quot;Should vaccinate client with cholera dose as the latest cholera dose was administered in the last 1 to 6 weeks.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Dose number of the latest primary series dose is two
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Dose number of the latest primary series dose is two&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2

/*
Autogenerated documentation from DAK
@name: Dose number of the latest primary series dose is less than three
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &lt; 3
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &lt; 3
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Dose number of the latest primary series dose is less than three&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &lt; 3

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered more than 6 weeks ago
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 6 weeks
 */
define &quot;The latest cholera dose was administered more than 6 weeks ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≥ 6 weeks

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered more than 6 weeks ago.
@pseudocode: Check for contraindications.
 */
define &quot;Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered more than 6 weeks ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Dose number of the latest primary series dose is three
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Dose number of the latest primary series dose is three&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered less than {Member States defined lower limit} days ago
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ Member States defined lower limit
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ Member States defined lower limit
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;The latest cholera dose was administered less than {Member States defined lower limit} days ago&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ Member States defined lower limit

/*
Autogenerated documentation from DAK
@name: Should not vaccinate client with cholera dose as the latest cholera dose was administered less than {Member States defined lower limit} days ago.
@title: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@pseudocode: Check for any vaccines due and inform the caregiver of when to come back for the next dose.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Should not vaccinate client with cholera dose as the latest cholera dose was administered less than {Member States defined lower limit} days ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for any vaccines due and inform the caregiver of when to come back for the next dose.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered approximately less than 6 months ago {Member States defined exact interval}
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 6 months
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 6 months
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;The latest cholera dose was administered approximately less than 6 months ago {Member States defined exact interval}&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 6 months

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera booster dose as the latest cholera dose was administered less than approximately 6 months ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Should vaccinate client with cholera booster dose as the latest cholera dose was administered less than approximately 6 months ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered approximately more than 6 months ago {Member States defined exact interval}
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 6 months
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 6 months
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;The latest cholera dose was administered approximately more than 6 months ago {Member States defined exact interval}&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 6 months

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered more than approximately 6 months ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine3doses']
 */
define &quot;Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered more than approximately 6 months ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: Clients age is more than 5 years
@pseudocode: Today's date − &quot;Date of birth&quot; &gt; 5 years
 */
define &quot;Clients age is more than 5 years&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − &quot;Date of birth&quot; &gt; 5 years

/*
Autogenerated documentation from DAK
@name: Dose number of the latest primary series dose is more than or equal to two
@title: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &gt;= 2
@pseudocode: Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &gt;= 2
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses']
 */
define &quot;Dose number of the latest primary series dose is more than or equal to two&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Latest &quot;Dose number&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) &gt;= 2

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered approximately less than 2 years ago {Member States defined interval}
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 2 years ± Member States defined interval
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 2 years ± Member States defined interval
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses']
 */
define &quot;The latest cholera dose was administered approximately less than 2 years ago {Member States defined interval}&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) ≤ 2 years ± Member States defined interval

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera booster dose as the latest cholera dose was administered approximately less than 2 years ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses']
 */
define &quot;Should vaccinate client with cholera booster dose as the latest cholera dose was administered approximately less than 2 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

/*
Autogenerated documentation from DAK
@name: The latest cholera dose was administered approximately more than 2 years ago {Member States defined interval}
@title: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 2 years ± Member States defined interval
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 2 years ± Member States defined interval
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses']
 */
define &quot;The latest cholera dose was administered approximately more than 2 years ago {Member States defined interval}&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Cholera vaccines&quot;) &gt; 2 years ± Member States defined interval

/*
Autogenerated documentation from DAK
@name: Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered approximately more than 2 years ago.
@title: Check for contraindications.
@pseudocode: Check for contraindications.
@tab: ['DTs.Cholera']
@table: ['DT.IMMZ.D2.DT.Cholera.WC-rBSvaccine2doses']
 */
define &quot;Should vaccinate client with cholera dose and restart primary series as the latest cholera dose was administered approximately more than 2 years ago.&quot;:
  //CQL AUTHORS: you need to insert stuff here
  // Check for contraindications.

</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code/></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/DTs.Cholera"/>
  <version value="0.2.0"/>
  <name value="DTs.Cholera"/>
  <title value="DTs.Cholera"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-07-17T20:56:23+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines context-independent elements for DTs.Cholera"/>
  <content>
    <contentType value="text/cql"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
  </content>
</Library>