@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/immunizations/Library/IMMZD5DTBCGCILogic> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "IMMZD5DTBCGCILogic"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "extensions" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTBCGCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTBCGCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD5DTBCGCILogic.html\">IMMZD5DTBCGCILogic</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-07-23 20:56:07+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines decision support logic for the IMMZ.D5.DT.BCG contraindications decision table in the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-IMMZD5DTBCGEncounterElements.html\">IMMZD5DTBCGEncounterElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Draft Medication Request ID for BCG dose</th><th>id</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Bacille Calmette–Guérin (BCG) vaccination is contraindicated</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Bacille Calmette–Guérin (BCG) vaccination is contraindicated Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination is contraindicated Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination is contraindicated Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination is contraindicated</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>BCG vaccination is contraindicated Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n * Library: IMMZD5DTBCGCILogic (IMMZ.D5.DT.BCG contraindications)\n * Rule: Check for contraindications before administering the vaccine(s) due	\n * Decision Table: Potential contraindications\n * Trigger: IMMZ.D5 Determine vaccine(s) to be administered based on contraindications\n */\nlibrary IMMZD5DTBCGCILogic\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude IMMZD5DTBCGEncounterElements called Encounter\n\nparameter Today Date default Today()\n\ncontext Patient\n\n\n/*\n@dynamicValue: Draft Medication Request ID for BCG dose\n*/\ndefine \"Draft Medication Request ID for BCG dose\":\n	First(Encounter.\"Draft Medication Request for BCG dose\").id\n\n/*\n@dynamicValue: Guidance\n*/\ndefine \"Guidance\":\n  case\n    when \"Bacille Calmette–Guérin (BCG) vaccination is contraindicated\" then \"Bacille Calmette–Guérin (BCG) vaccination is contraindicated Guidance\"\n    when \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.\" then \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance\"\n    when \"BCG vaccination is contraindicated\" then \"BCG vaccination is contraindicated Guidance\"\n    else ''\n  end\n\ndefine \"Has Guidance\":\n  \"Guidance\" is not null and \"Guidance\" != ''\n\n/*\n@output: Bacille Calmette–Guérin (BCG) vaccination is contraindicated\n@pseudocode: '\"Immunization recommendation status\" = \"Contraindicated\"\n*/\ndefine \"Bacille Calmette–Guérin (BCG) vaccination is contraindicated\":\n  Encounter.\"The client is pregnant\"\n\n/*\n@output: Bacille Calmette–Guérin (BCG) vaccination is contraindicated Guidance\n@guidance: Do not vaccinate client with BCG as BCG vaccination is not recommended during pregnancy\n*/\ndefine \"Bacille Calmette–Guérin (BCG) vaccination is contraindicated Guidance\":\n  'Do not vaccinate client with BCG as BCG vaccination is not recommended during pregnancy'\n\n/*\n@output: BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1\n@pseudocode: '\"Immunization recommendation status\" = \"Further evaluation needed\"\n*/\ndefine \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1\":\n  Encounter.\"The client has history of severe allergic reactions\"\n\n/*\n@output: BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2\n@pseudocode: '\"Immunization recommendation status\" = \"Further evaluation needed\"\n*/\ndefine \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2\":\n  Encounter.\"The client is exposed to immunosuppressive treatment\"\n    and Encounter.\"Client's age is more than or equal to 1 year\"\n\n/*\n@output: BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.\n@pseudocode: '\"Immunization recommendation status\" = \"Further evaluation needed\"\n*/\ndefine \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note.\":\n  \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1\"\n    or \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2\"\n\n/*\n@output: BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance\n@guidance: Do not vaccinate client with BCG if the client had previous allergic reaction to any component of the vaccine\n@guidance: Do not vaccinate client with BCG if client is exposed to or receives immunosuppressive treatment\n*/\ndefine \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance\":\n  case\n    when \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1\" then 'Do not vaccinate client with BCG if the client had previous allergic reaction to any component of the vaccine'\n    when \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2\" then 'Do not vaccinate client with BCG if client is exposed to or receives immunosuppressive treatment'\n    else ''\n  end\n\n/*\n@output: BCG vaccination is contraindicated Case 1\n@pseudocode: '\"Immunization recommendation status\" = \"Contraindicated\"\n*/\ndefine \"BCG vaccination is contraindicated Case 1\":\n  Encounter.\"The client has immunodeficiency syndromes\"\n\n/*\n@output: BCG vaccination is contraindicated Case 2\n@pseudocode: '\"Immunization recommendation status\" = \"Contraindicated\"\n*/\ndefine \"BCG vaccination is contraindicated Case 2\":\n  Encounter.\"The client is exposed to immunosuppressive treatment\"\n    and Encounter.\"Client's age is less than 1 year\"\n\n/*\n@output: BCG vaccination is contraindicated\n@pseudocode: '\"Immunization recommendation status\" = \"Contraindicated\"\n*/\ndefine \"BCG vaccination is contraindicated\":\n  \"BCG vaccination is contraindicated Case 1\"\n    or \"BCG vaccination is contraindicated Case 2\"\n\n/*\n@output: BCG vaccination is contraindicated Guidance\n@guidance: Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients with immunodeficiency syndromes\n@guidance: Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients undergoing immunosuppressive treatment\n*/\ndefine \"BCG vaccination is contraindicated Guidance\":\n  case\n    when \"BCG vaccination is contraindicated Case 1\" then 'Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients with immunodeficiency syndromes'\n    when \"BCG vaccination is contraindicated Case 2\" then 'Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients undergoing immunosuppressive treatment'\n    else ''\n  end\n\n\n/*\n@test: Test expected results based on example patients\n*/\ndefine \"Test Validation\":\n  case\n    when Patient.id = '37.CI162' then \"Bacille Calmette–Guérin (BCG) vaccination is contraindicated\" and \"Guidance\" = 'Do not vaccinate client with BCG as BCG vaccination is not recommended during pregnancy'\n    when Patient.id = '38.CI167' then \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1\" and \"Guidance\" = 'Do not vaccinate client with BCG if the client had previous allergic reaction to any component of the vaccine'\n    when Patient.id = '39.CI187' then \"BCG vaccination is contraindicated Case 1\" and \"Guidance\" = 'Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients with immunodeficiency syndromes'\n    when Patient.id = '40.Alt1YCI164' then \"BCG vaccination is contraindicated Case 2\" and \"Guidance\" = 'Do not vaccinate client with BCG as BCG vaccination is contraindicated for clients undergoing immunosuppressive treatment'\n    when Patient.id = '41.Agt1YCI164' then \"BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2\" and \"Guidance\" = 'Do not vaccinate client with BCG if client is exposed to or receives immunosuppressive treatment'\n    else 'No test case set'\n  end\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (68596 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"^^rdf:XMLLiteral
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [
       a fhir:code ;
       fhir:v "computable"
     ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/immunizations/Library/IMMZD5DTBCGCILogic"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.2.0"] ; # 
  fhir:name [ fhir:v "IMMZD5DTBCGCILogic"] ; # 
  fhir:title [ fhir:v "IMMZD5DTBCGCILogic"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v false] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2025-07-23T20:56:07+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "This library defines decision support logic for the IMMZ.D5.DT.BCG contraindications decision table in the Immunization CPG"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Encounter" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZD5DTBCGEncounterElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZD5DTBCGEncounterElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Today" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Draft Medication Request ID for BCG dose" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "id" ]
  ] [
     fhir:name [ fhir:v "Bacille Calmette–Guérin (BCG) vaccination is contraindicated" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Bacille Calmette–Guérin (BCG) vaccination is contraindicated Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note." ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination could be contraindicated. Clinical judgement is required. Create a clinical note. Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination is contraindicated Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination is contraindicated Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination is contraindicated" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "BCG vaccination is contraindicated Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Has Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Test Validation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Resource" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

