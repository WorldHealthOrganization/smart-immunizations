<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZD2DTVaricella2DoseLogic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTVaricella2DoseLogic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTVaricella2DoseLogic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-IMMZD2DTVaricella2DoseLogic.html">IMMZD2DTVaricella2DoseLogic</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-07-23 20:56:07+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines decision support logic for the IMMZ.D2.DT.Varicella.2 doses decision table in the Immunization CPG</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><a href="Library-IMMZD2DTVaricellaEncounterElements.html">IMMZD2DTVaricellaEncounterElements</a></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination Case 3</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination Case 4</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is not due for varicella vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is due for varicella vaccination Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is due for varicella vaccination Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is due for varicella vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client is due for varicella vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Varicella immunization schedule is complete</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Varicella immunization schedule is complete Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">
/*
 * Library: IMMZD2DTVaricella2DoseLogic (IMMZ.D2.DT.Varicella.2 doses)
 * Rule: Determine if the client is due for a varicella vaccination according to the national immunization schedule
 * Decision Table: 2-dose schedule
 * Trigger: IMMZ.D2 Determine required vaccination(s) if any  
 */
library IMMZD2DTVaricella2DoseLogic

using FHIR version '4.0.1'
include FHIRHelpers version '4.0.1'

include IMMZD2DTVaricellaEncounterElements called Encounter

parameter Today Date default Today()

context Patient


/*
@dynamicValue: Guidance
*/
define &quot;Guidance&quot;:
  case
    when &quot;Client is not due for varicella vaccination&quot; then &quot;Client is not due for varicella vaccination Guidance&quot;
    when &quot;Client is due for varicella vaccination&quot; then &quot;Client is due for varicella vaccination Guidance&quot;
    when &quot;Varicella immunization schedule is complete&quot; then &quot;Varicella immunization schedule is complete Guidance&quot;
    else ''
  end

define &quot;Has Guidance&quot;:
  &quot;Guidance&quot; is not null and &quot;Guidance&quot; != ''

/*
@output: Client is not due for varicella vaccination Case 1
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
*/
define &quot;Client is not due for varicella vaccination Case 1&quot;:
  Encounter.&quot;Client's age is less than 12 months&quot;

/*
@output: Client is not due for varicella vaccination Case 2
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
*/
define &quot;Client is not due for varicella vaccination Case 2&quot;:
  Encounter.&quot;No varicella primary series doses were administered&quot;
    and Encounter.&quot;Cient's age is more than or equal to 12 months&quot;
    and Encounter.&quot;Live vaccine was administered in the past 4 weeks&quot;

/*
@output: Client is not due for varicella vaccination Case 3
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
*/
define &quot;Client is not due for varicella vaccination Case 3&quot;:
  Encounter.&quot;One varicella primary series dose was administered&quot;
    and Encounter.&quot;The latest varicella dose administered less than 4 weeks ago&quot;

/*
@output: Client is not due for varicella vaccination Case 4
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
*/
define &quot;Client is not due for varicella vaccination Case 4&quot;:
  Encounter.&quot;One varicella primary series dose was administered&quot;
    and Encounter.&quot;The latest varicella dose administered more than 4 weeks ago&quot;
    and Encounter.&quot;Live vaccine was administered in the past 4 weeks&quot;

/*
@output: Client is not due for varicella vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;
*/
define &quot;Client is not due for varicella vaccination&quot;:
  &quot;Client is not due for varicella vaccination Case 1&quot;
    or &quot;Client is not due for varicella vaccination Case 2&quot;
    or &quot;Client is not due for varicella vaccination Case 3&quot;
    or &quot;Client is not due for varicella vaccination Case 4&quot;

/*
@output: Client is not due for varicella vaccination Guidance
@guidance: Should not vaccinate client with first varicella dose as client's age is less than 12 months. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.
@guidance: Should not vaccinate client with first varicella dose as live vaccine was administered in the past 4 weeks. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.
@guidance: Should not vaccinate client with second varicella dose as the latest varicella dose was administered less than 4 weeks ago. Check for any other vaccines due and inform the caregiver when to come back for the second dose.
@guidance: Should not vaccinate client with second varicella dose as live vaccine was administered in the past 4 weeks. Check for any vaccines due and inform the caregiver of when to come back for the second dose.
*/
define &quot;Client is not due for varicella vaccination Guidance&quot;:
  case
    when &quot;Client is not due for varicella vaccination Case 1&quot; then 'Should not vaccinate client with first varicella dose as client\'s age is less than 12 months. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.'
    when &quot;Client is not due for varicella vaccination Case 2&quot; then 'Should not vaccinate client with first varicella dose as live vaccine was administered in the past 4 weeks. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.'
    when &quot;Client is not due for varicella vaccination Case 3&quot; then 'Should not vaccinate client with second varicella dose as the latest varicella dose was administered less than 4 weeks ago. Check for any other vaccines due and inform the caregiver when to come back for the second dose.'
    when &quot;Client is not due for varicella vaccination Case 4&quot; then 'Should not vaccinate client with second varicella dose as live vaccine was administered in the past 4 weeks. Check for any vaccines due and inform the caregiver of when to come back for the second dose.'
    else ''
  end

/*
@output: Client is due for varicella vaccination Case 1
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
*/
define &quot;Client is due for varicella vaccination Case 1&quot;:
  Encounter.&quot;No varicella primary series doses were administered&quot;
    and Encounter.&quot;Cient's age is more than or equal to 12 months&quot;
    and Encounter.&quot;No live vaccine was administered in the past 4 weeks&quot;

/*
@output: Client is due for varicella vaccination Case 2
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
*/
define &quot;Client is due for varicella vaccination Case 2&quot;:
  Encounter.&quot;One varicella primary series dose was administered&quot;
    and Encounter.&quot;The latest varicella dose administered more than 4 weeks ago&quot;
    and Encounter.&quot;No live vaccine was administered in the past 4 weeks&quot;

/*
@output: Client is due for varicella vaccination
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;
*/
define &quot;Client is due for varicella vaccination&quot;:
  &quot;Client is due for varicella vaccination Case 1&quot;
    or &quot;Client is due for varicella vaccination Case 2&quot;

/*
@output: Client is due for varicella vaccination Guidance
@guidance: Should vaccinate client with first varicella dose as no varicella dose was administered, client is within appropriate age range and no live vaccine was administered in past 4 weeks. Check for contraindications.
@guidance: Should vaccinate client with second varicella dose as the latest varicella dose was administered more than 4 weeks ago and no live vaccine was administered in past 4 weeks. Check for contraindications.
*/
define &quot;Client is due for varicella vaccination Guidance&quot;:
  case
    when &quot;Client is due for varicella vaccination Case 1&quot; then 'Should vaccinate client with first varicella dose as no varicella dose was administered, client is within appropriate age range and no live vaccine was administered in past 4 weeks. Check for contraindications.'
    when &quot;Client is due for varicella vaccination Case 2&quot; then 'Should vaccinate client with second varicella dose as the latest varicella dose was administered more than 4 weeks ago and no live vaccine was administered in past 4 weeks. Check for contraindications.'
    else ''
  end

/*
@output: Varicella immunization schedule is complete
@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot;
*/
define &quot;Varicella immunization schedule is complete&quot;:
  Encounter.&quot;Two varicella primary series doses were administered&quot;

/*
@output: Varicella immunization schedule is complete Guidance
@guidance: Varicella immunization schedule is complete. Two varicella primary series doses were administered. Check for any other vaccines due.
*/
define &quot;Varicella immunization schedule is complete Guidance&quot;:
  'Varicella immunization schedule is complete. Two varicella primary series doses were administered. Check for any other vaccines due.'


/*
@test: Test expected results based on example patients
*/
define &quot;Test Validation&quot;:
  case
    when Patient.id = '21.2' then &quot;Client is not due for varicella vaccination Case 1&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with first varicella dose as client\'s age is less than 12 months. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.'
    when Patient.id = '22.124' then &quot;Client is not due for varicella vaccination Case 2&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with first varicella dose as live vaccine was administered in the past 4 weeks. Check for any other vaccines due and inform the caregiver of when to come back for the first varicella dose.'
    when Patient.id = '23.124' then &quot;Client is due for varicella vaccination Case 1&quot; and &quot;Guidance&quot; = 'Should vaccinate client with first varicella dose as no varicella dose was administered, client is within appropriate age range and no live vaccine was administered in past 4 weeks. Check for contraindications.'
    when Patient.id = '24.13' then &quot;Client is not due for varicella vaccination Case 3&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with second varicella dose as the latest varicella dose was administered less than 4 weeks ago. Check for any other vaccines due and inform the caregiver when to come back for the second dose.'
    when Patient.id = '25.134' then &quot;Client is not due for varicella vaccination Case 4&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with second varicella dose as live vaccine was administered in the past 4 weeks. Check for any vaccines due and inform the caregiver of when to come back for the second dose.'
    when Patient.id = '26.134' then &quot;Client is due for varicella vaccination Case 2&quot; and &quot;Guidance&quot; = 'Should vaccinate client with second varicella dose as the latest varicella dose was administered more than 4 weeks ago and no live vaccine was administered in past 4 weeks. Check for contraindications.'
    when Patient.id = '27.1' then &quot;Varicella immunization schedule is complete&quot; and &quot;Guidance&quot; = 'Varicella immunization schedule is complete. Two varicella primary series doses were administered. Check for any other vaccines due.'
    else 'No test case set'
  end
</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (94204 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/IMMZD2DTVaricella2DoseLogic"/>
  <version value="0.2.0"/>
  <name value="IMMZD2DTVaricella2DoseLogic"/>
  <title value="IMMZD2DTVaricella2DoseLogic"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-07-23T20:56:07+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines decision support logic for the IMMZ.D2.DT.Varicella.2 doses decision table in the Immunization CPG"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Encounter"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZD2DTVaricellaEncounterElements"/>
  </relatedArtifact>
  <parameter>
    <name value="Today"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination Case 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination Case 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination Case 3"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination Case 4"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is not due for varicella vaccination Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Client is due for varicella vaccination Case 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is due for varicella vaccination Case 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is due for varicella vaccination"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client is due for varicella vaccination Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Varicella immunization schedule is complete"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Varicella immunization schedule is complete Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Has Guidance"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Test Validation"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>