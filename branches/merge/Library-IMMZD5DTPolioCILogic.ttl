@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/immunizations/Library/IMMZD5DTPolioCILogic> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "IMMZD5DTPolioCILogic"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "extensions" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTPolioCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD5DTPolioCILogic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD5DTPolioCILogic.html\">IMMZD5DTPolioCILogic</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-07-23 20:56:07+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines decision support logic for the IMMZ.D5.DT.Polio contraindications decision table in the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-IMMZD5DTPolioEncounterElements.html\">IMMZD5DTPolioEncounterElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Draft Medication Request ID for bOPV dose</th><th>id</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination could be contraindicated. Clinical judgement required</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination could be contraindicated. Clinical judgement required Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination with bOPV is contraindicated Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination with bOPV is contraindicated Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination with bOPV is contraindicated</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Poliovirus vaccination with bOPV is contraindicated Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n * Library: IMMZD5DTPolioCILogic (IMMZ.D5.DT.Polio contraindications)\n * Rule: Check for contraindications before administering the vaccine(s) due	\n * Decision Table: Potential contraindications\n * Trigger: IMMZ.D5 Determine vaccine(s) to be administered based on contraindications\n */\nlibrary IMMZD5DTPolioCILogic\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude IMMZD5DTPolioEncounterElements called Encounter\n\nparameter Today Date default Today()\n\ncontext Patient\n\n/*\n@dynamicValue: Draft Medication Request ID for bOPV dose\n*/\ndefine \"Draft Medication Request ID for bOPV dose\":\n	First(Encounter.\"Draft Medication Request for bOPV dose\").id\n\n/*\n@dynamicValue: Guidance\n*/\ndefine \"Guidance\":\n  case\n    when \"Poliovirus vaccination could be contraindicated. Clinical judgement required\" then \"Poliovirus vaccination could be contraindicated. Clinical judgement required Guidance\"\n    when \"Poliovirus vaccination with bOPV is contraindicated\" then \"Poliovirus vaccination with bOPV is contraindicated Guidance\"\n    else ''\n  end\n\ndefine \"Has Guidance\":\n  \"Guidance\" is not null and \"Guidance\" != ''\n\n/*\n@output: Poliovirus vaccination could be contraindicated. Clinical judgement required\n@pseudocode: \"Immunization recommendation status\" = \"Further evaluation needed\"\n*/\ndefine \"Poliovirus vaccination could be contraindicated. Clinical judgement required\":\n  Encounter.\"The client has history of severe allergic reactions\"\n\n/*\n@output: Poliovirus vaccination could be contraindicated. Clinical judgement required Guidance\n@guidance: Do not vaccinate client with inactivated polio vaccine (IPV) if client has had a previous severe reaction or known allergy to streptomycin, neomycin or polymyxin B.\nDo not vaccinate client with oral polio vaccine (OPV) if client has had a allergic reaction to OPV or to the trace antibiotics contained.\n*/\ndefine \"Poliovirus vaccination could be contraindicated. Clinical judgement required Guidance\":\n  'Do not vaccinate client with inactivated polio vaccine (IPV) if client has had a previous severe reaction or known allergy to streptomycin, neomycin or polymyxin B.\nDo not vaccinate client with oral polio vaccine (OPV) if client has had a allergic reaction to OPV or to the trace antibiotics contained.'\n\n/*\n@output: Poliovirus vaccination with bOPV is contraindicated Case 1\n@pseudocode: Clinical judgement is required if vaccination with IPV is considered\n*/\ndefine \"Poliovirus vaccination with bOPV is contraindicated Case 1\":\n  Encounter.\"The client is severely immunocompromised\"\n\n/*\n@output: Poliovirus vaccination with bOPV is contraindicated Case 2\n@pseudocode: Clinical judgement is required if vaccination with IPV is considered\n*/\ndefine \"Poliovirus vaccination with bOPV is contraindicated Case 2\":\n  Encounter.\"The client has immunodeficiency syndromes\"\n\n/*\n@output: Poliovirus vaccination with bOPV is contraindicated\n@pseudocode: Clinical judgement is required if vaccination with IPV is considered\n*/\ndefine \"Poliovirus vaccination with bOPV is contraindicated\":\n  \"Poliovirus vaccination with bOPV is contraindicated Case 1\"\n    or \"Poliovirus vaccination with bOPV is contraindicated Case 2\"\n\n/*\n@output: Poliovirus vaccination with bOPV is contraindicated Guidance\n@guidance: For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in severely immunocompromised clients. \nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.\n@guidance: For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in clients with immunodeficiency disorders.\nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.\n*/\ndefine \"Poliovirus vaccination with bOPV is contraindicated Guidance\":\n  case\n    when \"Poliovirus vaccination with bOPV is contraindicated Case 1\" then 'For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in severely immunocompromised clients. \nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n    when \"Poliovirus vaccination with bOPV is contraindicated Case 2\" then 'For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in clients with immunodeficiency disorders.\nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n    else ''\n  end\n\n\n/*\n@test: Test expected results based on example patients\n*/\ndefine \"Test Validation\":\n  case\n    when Patient.id = '87.CI167' then \"Poliovirus vaccination could be contraindicated. Clinical judgement required\" and \"Guidance\" = 'Do not vaccinate client with inactivated polio vaccine (IPV) if client has had a previous severe reaction or known allergy to streptomycin, neomycin or polymyxin B.\nDo not vaccinate client with oral polio vaccine (OPV) if client has had a allergic reaction to OPV or to the trace antibiotics contained.'\n    when Patient.id = '88.CI200' then \"Poliovirus vaccination with bOPV is contraindicated Case 1\" and \"Guidance\" = 'For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in severely immunocompromised clients. \nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n    when Patient.id = '89.CI187' then \"Poliovirus vaccination with bOPV is contraindicated Case 2\" and \"Guidance\" = 'For bOPV dose, do not vaccinate  client for bOPV dose as bOPV vaccination is contranindicated in clients with immunodeficiency disorders.\nCheck if vaccination with IPV is appropriate for the client, consider risks of vaccination and make a clinical judgement.'\n    else 'No test case set'\n  end\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (48228 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"^^rdf:XMLLiteral
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [
       a fhir:code ;
       fhir:v "computable"
     ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/immunizations/Library/IMMZD5DTPolioCILogic"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.2.0"] ; # 
  fhir:name [ fhir:v "IMMZD5DTPolioCILogic"] ; # 
  fhir:title [ fhir:v "IMMZD5DTPolioCILogic"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v false] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2025-07-23T20:56:07+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "This library defines decision support logic for the IMMZ.D5.DT.Polio contraindications decision table in the Immunization CPG"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Encounter" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZD5DTPolioEncounterElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZD5DTPolioEncounterElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Today" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Draft Medication Request ID for bOPV dose" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "id" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination could be contraindicated. Clinical judgement required" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination could be contraindicated. Clinical judgement required Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination with bOPV is contraindicated Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination with bOPV is contraindicated Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination with bOPV is contraindicated" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Poliovirus vaccination with bOPV is contraindicated Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Has Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Test Validation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Resource" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v "Ci8qCiAqIExpYnJhcnk6IElNTVpENURUUG9saW9DSUxvZ2ljIChJTU1aLkQ1LkRULlBvbGlvIGNvbnRyYWluZGljYXRpb25zKQogKiBSdWxlOiBDaGVjayBmb3IgY29udHJhaW5kaWNhdGlvbnMgYmVmb3JlIGFkbWluaXN0ZXJpbmcgdGhlIHZhY2NpbmUocykgZHVlCQogKiBEZWNpc2lvbiBUYWJsZTogUG90ZW50aWFsIGNvbnRyYWluZGljYXRpb25zCiAqIFRyaWdnZXI6IElNTVouRDUgRGV0ZXJtaW5lIHZhY2NpbmUocykgdG8gYmUgYWRtaW5pc3RlcmVkIGJhc2VkIG9uIGNvbnRyYWluZGljYXRpb25zCiAqLwpsaWJyYXJ5IElNTVpENURUUG9saW9DSUxvZ2ljCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwoKaW5jbHVkZSBJTU1aRDVEVFBvbGlvRW5jb3VudGVyRWxlbWVudHMgY2FsbGVkIEVuY291bnRlcgoKcGFyYW1ldGVyIFRvZGF5IERhdGUgZGVmYXVsdCBUb2RheSgpCgpjb250ZXh0IFBhdGllbnQKCi8qCkBkeW5hbWljVmFsdWU6IERyYWZ0IE1lZGljYXRpb24gUmVxdWVzdCBJRCBmb3IgYk9QViBkb3NlCiovCmRlZmluZSAiRHJhZnQgTWVkaWNhdGlvbiBSZXF1ZXN0IElEIGZvciBiT1BWIGRvc2UiOgoJRmlyc3QoRW5jb3VudGVyLiJEcmFmdCBNZWRpY2F0aW9uIFJlcXVlc3QgZm9yIGJPUFYgZG9zZSIpLmlkCgovKgpAZHluYW1pY1ZhbHVlOiBHdWlkYW5jZQoqLwpkZWZpbmUgIkd1aWRhbmNlIjoKICBjYXNlCiAgICB3aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIGNvdWxkIGJlIGNvbnRyYWluZGljYXRlZC4gQ2xpbmljYWwganVkZ2VtZW50IHJlcXVpcmVkIiB0aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIGNvdWxkIGJlIGNvbnRyYWluZGljYXRlZC4gQ2xpbmljYWwganVkZ2VtZW50IHJlcXVpcmVkIEd1aWRhbmNlIgogICAgd2hlbiAiUG9saW92aXJ1cyB2YWNjaW5hdGlvbiB3aXRoIGJPUFYgaXMgY29udHJhaW5kaWNhdGVkIiB0aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgR3VpZGFuY2UiCiAgICBlbHNlICcnCiAgZW5kCgpkZWZpbmUgIkhhcyBHdWlkYW5jZSI6CiAgIkd1aWRhbmNlIiBpcyBub3QgbnVsbCBhbmQgIkd1aWRhbmNlIiAhPSAnJwoKLyoKQG91dHB1dDogUG9saW92aXJ1cyB2YWNjaW5hdGlvbiBjb3VsZCBiZSBjb250cmFpbmRpY2F0ZWQuIENsaW5pY2FsIGp1ZGdlbWVudCByZXF1aXJlZApAcHNldWRvY29kZTogIkltbXVuaXphdGlvbiByZWNvbW1lbmRhdGlvbiBzdGF0dXMiID0gIkZ1cnRoZXIgZXZhbHVhdGlvbiBuZWVkZWQiCiovCmRlZmluZSAiUG9saW92aXJ1cyB2YWNjaW5hdGlvbiBjb3VsZCBiZSBjb250cmFpbmRpY2F0ZWQuIENsaW5pY2FsIGp1ZGdlbWVudCByZXF1aXJlZCI6CiAgRW5jb3VudGVyLiJUaGUgY2xpZW50IGhhcyBoaXN0b3J5IG9mIHNldmVyZSBhbGxlcmdpYyByZWFjdGlvbnMiCgovKgpAb3V0cHV0OiBQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIGNvdWxkIGJlIGNvbnRyYWluZGljYXRlZC4gQ2xpbmljYWwganVkZ2VtZW50IHJlcXVpcmVkIEd1aWRhbmNlCkBndWlkYW5jZTogRG8gbm90IHZhY2NpbmF0ZSBjbGllbnQgd2l0aCBpbmFjdGl2YXRlZCBwb2xpbyB2YWNjaW5lIChJUFYpIGlmIGNsaWVudCBoYXMgaGFkIGEgcHJldmlvdXMgc2V2ZXJlIHJlYWN0aW9uIG9yIGtub3duIGFsbGVyZ3kgdG8gc3RyZXB0b215Y2luLCBuZW9teWNpbiBvciBwb2x5bXl4aW4gQi4KRG8gbm90IHZhY2NpbmF0ZSBjbGllbnQgd2l0aCBvcmFsIHBvbGlvIHZhY2NpbmUgKE9QVikgaWYgY2xpZW50IGhhcyBoYWQgYSBhbGxlcmdpYyByZWFjdGlvbiB0byBPUFYgb3IgdG8gdGhlIHRyYWNlIGFudGliaW90aWNzIGNvbnRhaW5lZC4KKi8KZGVmaW5lICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIGNvdWxkIGJlIGNvbnRyYWluZGljYXRlZC4gQ2xpbmljYWwganVkZ2VtZW50IHJlcXVpcmVkIEd1aWRhbmNlIjoKICAnRG8gbm90IHZhY2NpbmF0ZSBjbGllbnQgd2l0aCBpbmFjdGl2YXRlZCBwb2xpbyB2YWNjaW5lIChJUFYpIGlmIGNsaWVudCBoYXMgaGFkIGEgcHJldmlvdXMgc2V2ZXJlIHJlYWN0aW9uIG9yIGtub3duIGFsbGVyZ3kgdG8gc3RyZXB0b215Y2luLCBuZW9teWNpbiBvciBwb2x5bXl4aW4gQi4KRG8gbm90IHZhY2NpbmF0ZSBjbGllbnQgd2l0aCBvcmFsIHBvbGlvIHZhY2NpbmUgKE9QVikgaWYgY2xpZW50IGhhcyBoYWQgYSBhbGxlcmdpYyByZWFjdGlvbiB0byBPUFYgb3IgdG8gdGhlIHRyYWNlIGFudGliaW90aWNzIGNvbnRhaW5lZC4nCgovKgpAb3V0cHV0OiBQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgQ2FzZSAxCkBwc2V1ZG9jb2RlOiBDbGluaWNhbCBqdWRnZW1lbnQgaXMgcmVxdWlyZWQgaWYgdmFjY2luYXRpb24gd2l0aCBJUFYgaXMgY29uc2lkZXJlZAoqLwpkZWZpbmUgIlBvbGlvdmlydXMgdmFjY2luYXRpb24gd2l0aCBiT1BWIGlzIGNvbnRyYWluZGljYXRlZCBDYXNlIDEiOgogIEVuY291bnRlci4iVGhlIGNsaWVudCBpcyBzZXZlcmVseSBpbW11bm9jb21wcm9taXNlZCIKCi8qCkBvdXRwdXQ6IFBvbGlvdmlydXMgdmFjY2luYXRpb24gd2l0aCBiT1BWIGlzIGNvbnRyYWluZGljYXRlZCBDYXNlIDIKQHBzZXVkb2NvZGU6IENsaW5pY2FsIGp1ZGdlbWVudCBpcyByZXF1aXJlZCBpZiB2YWNjaW5hdGlvbiB3aXRoIElQViBpcyBjb25zaWRlcmVkCiovCmRlZmluZSAiUG9saW92aXJ1cyB2YWNjaW5hdGlvbiB3aXRoIGJPUFYgaXMgY29udHJhaW5kaWNhdGVkIENhc2UgMiI6CiAgRW5jb3VudGVyLiJUaGUgY2xpZW50IGhhcyBpbW11bm9kZWZpY2llbmN5IHN5bmRyb21lcyIKCi8qCkBvdXRwdXQ6IFBvbGlvdmlydXMgdmFjY2luYXRpb24gd2l0aCBiT1BWIGlzIGNvbnRyYWluZGljYXRlZApAcHNldWRvY29kZTogQ2xpbmljYWwganVkZ2VtZW50IGlzIHJlcXVpcmVkIGlmIHZhY2NpbmF0aW9uIHdpdGggSVBWIGlzIGNvbnNpZGVyZWQKKi8KZGVmaW5lICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQiOgogICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgQ2FzZSAxIgogICAgb3IgIlBvbGlvdmlydXMgdmFjY2luYXRpb24gd2l0aCBiT1BWIGlzIGNvbnRyYWluZGljYXRlZCBDYXNlIDIiCgovKgpAb3V0cHV0OiBQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgR3VpZGFuY2UKQGd1aWRhbmNlOiBGb3IgYk9QViBkb3NlLCBkbyBub3QgdmFjY2luYXRlICBjbGllbnQgZm9yIGJPUFYgZG9zZSBhcyBiT1BWIHZhY2NpbmF0aW9uIGlzIGNvbnRyYW5pbmRpY2F0ZWQgaW4gc2V2ZXJlbHkgaW1tdW5vY29tcHJvbWlzZWQgY2xpZW50cy4gCkNoZWNrIGlmIHZhY2NpbmF0aW9uIHdpdGggSVBWIGlzIGFwcHJvcHJpYXRlIGZvciB0aGUgY2xpZW50LCBjb25zaWRlciByaXNrcyBvZiB2YWNjaW5hdGlvbiBhbmQgbWFrZSBhIGNsaW5pY2FsIGp1ZGdlbWVudC4KQGd1aWRhbmNlOiBGb3IgYk9QViBkb3NlLCBkbyBub3QgdmFjY2luYXRlICBjbGllbnQgZm9yIGJPUFYgZG9zZSBhcyBiT1BWIHZhY2NpbmF0aW9uIGlzIGNvbnRyYW5pbmRpY2F0ZWQgaW4gY2xpZW50cyB3aXRoIGltbXVub2RlZmljaWVuY3kgZGlzb3JkZXJzLgpDaGVjayBpZiB2YWNjaW5hdGlvbiB3aXRoIElQViBpcyBhcHByb3ByaWF0ZSBmb3IgdGhlIGNsaWVudCwgY29uc2lkZXIgcmlza3Mgb2YgdmFjY2luYXRpb24gYW5kIG1ha2UgYSBjbGluaWNhbCBqdWRnZW1lbnQuCiovCmRlZmluZSAiUG9saW92aXJ1cyB2YWNjaW5hdGlvbiB3aXRoIGJPUFYgaXMgY29udHJhaW5kaWNhdGVkIEd1aWRhbmNlIjoKICBjYXNlCiAgICB3aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgQ2FzZSAxIiB0aGVuICdGb3IgYk9QViBkb3NlLCBkbyBub3QgdmFjY2luYXRlICBjbGllbnQgZm9yIGJPUFYgZG9zZSBhcyBiT1BWIHZhY2NpbmF0aW9uIGlzIGNvbnRyYW5pbmRpY2F0ZWQgaW4gc2V2ZXJlbHkgaW1tdW5vY29tcHJvbWlzZWQgY2xpZW50cy4gCkNoZWNrIGlmIHZhY2NpbmF0aW9uIHdpdGggSVBWIGlzIGFwcHJvcHJpYXRlIGZvciB0aGUgY2xpZW50LCBjb25zaWRlciByaXNrcyBvZiB2YWNjaW5hdGlvbiBhbmQgbWFrZSBhIGNsaW5pY2FsIGp1ZGdlbWVudC4nCiAgICB3aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgQ2FzZSAyIiB0aGVuICdGb3IgYk9QViBkb3NlLCBkbyBub3QgdmFjY2luYXRlICBjbGllbnQgZm9yIGJPUFYgZG9zZSBhcyBiT1BWIHZhY2NpbmF0aW9uIGlzIGNvbnRyYW5pbmRpY2F0ZWQgaW4gY2xpZW50cyB3aXRoIGltbXVub2RlZmljaWVuY3kgZGlzb3JkZXJzLgpDaGVjayBpZiB2YWNjaW5hdGlvbiB3aXRoIElQViBpcyBhcHByb3ByaWF0ZSBmb3IgdGhlIGNsaWVudCwgY29uc2lkZXIgcmlza3Mgb2YgdmFjY2luYXRpb24gYW5kIG1ha2UgYSBjbGluaWNhbCBqdWRnZW1lbnQuJwogICAgZWxzZSAnJwogIGVuZAoKCi8qCkB0ZXN0OiBUZXN0IGV4cGVjdGVkIHJlc3VsdHMgYmFzZWQgb24gZXhhbXBsZSBwYXRpZW50cwoqLwpkZWZpbmUgIlRlc3QgVmFsaWRhdGlvbiI6CiAgY2FzZQogICAgd2hlbiBQYXRpZW50LmlkID0gJzg3LkNJMTY3JyB0aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIGNvdWxkIGJlIGNvbnRyYWluZGljYXRlZC4gQ2xpbmljYWwganVkZ2VtZW50IHJlcXVpcmVkIiBhbmQgIkd1aWRhbmNlIiA9ICdEbyBub3QgdmFjY2luYXRlIGNsaWVudCB3aXRoIGluYWN0aXZhdGVkIHBvbGlvIHZhY2NpbmUgKElQVikgaWYgY2xpZW50IGhhcyBoYWQgYSBwcmV2aW91cyBzZXZlcmUgcmVhY3Rpb24gb3Iga25vd24gYWxsZXJneSB0byBzdHJlcHRvbXljaW4sIG5lb215Y2luIG9yIHBvbHlteXhpbiBCLgpEbyBub3QgdmFjY2luYXRlIGNsaWVudCB3aXRoIG9yYWwgcG9saW8gdmFjY2luZSAoT1BWKSBpZiBjbGllbnQgaGFzIGhhZCBhIGFsbGVyZ2ljIHJlYWN0aW9uIHRvIE9QViBvciB0byB0aGUgdHJhY2UgYW50aWJpb3RpY3MgY29udGFpbmVkLicKICAgIHdoZW4gUGF0aWVudC5pZCA9ICc4OC5DSTIwMCcgdGhlbiAiUG9saW92aXJ1cyB2YWNjaW5hdGlvbiB3aXRoIGJPUFYgaXMgY29udHJhaW5kaWNhdGVkIENhc2UgMSIgYW5kICJHdWlkYW5jZSIgPSAnRm9yIGJPUFYgZG9zZSwgZG8gbm90IHZhY2NpbmF0ZSAgY2xpZW50IGZvciBiT1BWIGRvc2UgYXMgYk9QViB2YWNjaW5hdGlvbiBpcyBjb250cmFuaW5kaWNhdGVkIGluIHNldmVyZWx5IGltbXVub2NvbXByb21pc2VkIGNsaWVudHMuIApDaGVjayBpZiB2YWNjaW5hdGlvbiB3aXRoIElQViBpcyBhcHByb3ByaWF0ZSBmb3IgdGhlIGNsaWVudCwgY29uc2lkZXIgcmlza3Mgb2YgdmFjY2luYXRpb24gYW5kIG1ha2UgYSBjbGluaWNhbCBqdWRnZW1lbnQuJwogICAgd2hlbiBQYXRpZW50LmlkID0gJzg5LkNJMTg3JyB0aGVuICJQb2xpb3ZpcnVzIHZhY2NpbmF0aW9uIHdpdGggYk9QViBpcyBjb250cmFpbmRpY2F0ZWQgQ2FzZSAyIiBhbmQgIkd1aWRhbmNlIiA9ICdGb3IgYk9QViBkb3NlLCBkbyBub3QgdmFjY2luYXRlICBjbGllbnQgZm9yIGJPUFYgZG9zZSBhcyBiT1BWIHZhY2NpbmF0aW9uIGlzIGNvbnRyYW5pbmRpY2F0ZWQgaW4gY2xpZW50cyB3aXRoIGltbXVub2RlZmljaWVuY3kgZGlzb3JkZXJzLgpDaGVjayBpZiB2YWNjaW5hdGlvbiB3aXRoIElQViBpcyBhcHByb3ByaWF0ZSBmb3IgdGhlIGNsaWVudCwgY29uc2lkZXIgcmlza3Mgb2YgdmFjY2luYXRpb24gYW5kIG1ha2UgYSBjbGluaWNhbCBqdWRnZW1lbnQuJwogICAgZWxzZSAnTm8gdGVzdCBjYXNlIHNldCcKICBlbmQK"^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

