@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/immunizations/Library/IMMZD2DTMeningococcalQuad2Logic> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "IMMZD2DTMeningococcalQuad2Logic"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "extensions" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTMeningococcalQuad2Logic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTMeningococcalQuad2Logic</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD2DTMeningococcalQuad2Logic.html\">IMMZD2DTMeningococcalQuad2Logic</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">true</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.0.2/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-06-25 20:08:00+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines decision support logic for the IMMZ.D2.DT.Meningococcal.Quadrivalent conjugate vaccines 2 doses decision table in the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-IMMZD2DTMeningococcalEncounterElements.html\">IMMZD2DTMeningococcalEncounterElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for meningococcal vaccination Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for meningococcal vaccination Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for meningococcal vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not due for meningococcal vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for meningococcal vaccination Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for meningococcal vaccination Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for meningococcal vaccination</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is due for meningococcal vaccination Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Meningococcal immunization schedule is complete Case 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Meningococcal immunization schedule is complete Case 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Meningococcal immunization schedule is complete</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Meningococcal immunization schedule is complete Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Guidance</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Has Guidance</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n * Library: IMMZD2DTMeningococcalQuad2Logic (IMMZ.D2.DT.Meningococcal.Quadrivalent conjugate vaccines 2 doses)\n * Rule: Determine if the client is due for a meningococcal vaccination according to the national immunization schedule\n * Decision Table: Quadrivalent conjugate vaccines (A,C,W135,Y-D), 2-dose schedule\n * Trigger: IMMZ.D2 Determine required vaccination(s) if any  \n */\nlibrary IMMZD2DTMeningococcalQuad2Logic\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude IMMZD2DTMeningococcalEncounterElements called Encounter\n\nparameter Today Date default Today()\n\ncontext Patient\n\n\n/*\n@dynamicValue: Guidance\n*/\ndefine &quot;Guidance&quot;:\n  case\n    when &quot;Client is not due for meningococcal vaccination&quot; then &quot;Client is not due for meningococcal vaccination Guidance&quot;\n    when &quot;Client is due for meningococcal vaccination&quot; then &quot;Client is due for meningococcal vaccination Guidance&quot;\n    when &quot;Meningococcal immunization schedule is complete&quot; then &quot;Meningococcal immunization schedule is complete Guidance&quot;\n    else ''\n  end\n\ndefine &quot;Has Guidance&quot;:\n  &quot;Guidance&quot; is not null and &quot;Guidance&quot; != ''\n\n/*\n@output: Client is not due for meningococcal vaccination Case 1\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;\n*/\ndefine &quot;Client is not due for meningococcal vaccination Case 1&quot;:\n  Encounter.&quot;Client's age is less than 9 months&quot;\n\n/*\n@output: Client is not due for meningococcal vaccination Case 2\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;\n*/\ndefine &quot;Client is not due for meningococcal vaccination Case 2&quot;:\n  Encounter.&quot;One meningococcal primary series dose was administered&quot;\n    and Encounter.&quot;Client's age was less than or equal to 23 months when the primary series was started&quot;\n    and Encounter.&quot;The latest meningococcal dose was administered less than 3 months ago&quot;\n\n/*\n@output: Client is not due for meningococcal vaccination\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Not due&quot;\n*/\ndefine &quot;Client is not due for meningococcal vaccination&quot;:\n  &quot;Client is not due for meningococcal vaccination Case 1&quot;\n    or &quot;Client is not due for meningococcal vaccination Case 2&quot;\n\n/*\n@output: Client is not due for meningococcal vaccination Guidance\n@guidance: Should not vaccinate client with first meningococcal dose as client's age is less than 9 months. \nCheck for any vaccines due and inform the caregiver of when to come back for the first dose.\n@guidance: Should not vaccinate client with second meningococcal dose as the latest meningococcal dose was administered less than 3 months ago. \nCheck for any other vaccines due and inform the caregiver of when to come back for the second dose.\n*/\ndefine &quot;Client is not due for meningococcal vaccination Guidance&quot;:\n  case\n    when &quot;Client is not due for meningococcal vaccination Case 1&quot; then 'Should not vaccinate client with first meningococcal dose as client\\'s age is less than 9 months. \nCheck for any vaccines due and inform the caregiver of when to come back for the first dose.'\n    when &quot;Client is not due for meningococcal vaccination Case 2&quot; then 'Should not vaccinate client with second meningococcal dose as the latest meningococcal dose was administered less than 3 months ago. \nCheck for any other vaccines due and inform the caregiver of when to come back for the second dose.'\n    else ''\n  end\n\n/*\n@output: Client is due for meningococcal vaccination Case 1\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;\n*/\ndefine &quot;Client is due for meningococcal vaccination Case 1&quot;:\n  Encounter.&quot;No meningococcal primary series dose was administered&quot;\n    and Encounter.&quot;Client's age is more than or equal to 9 months&quot;\n\n/*\n@output: Client is due for meningococcal vaccination Case 2\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;\n*/\ndefine &quot;Client is due for meningococcal vaccination Case 2&quot;:\n  Encounter.&quot;One meningococcal primary series dose was administered&quot;\n    and Encounter.&quot;Client's age was less than or equal to 23 months when the primary series was started&quot;\n    and Encounter.&quot;The latest meningococcal dose was administered more than 3 months ago&quot;\n\n/*\n@output: Client is due for meningococcal vaccination\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Due&quot;\n*/\ndefine &quot;Client is due for meningococcal vaccination&quot;:\n  &quot;Client is due for meningococcal vaccination Case 1&quot;\n    or &quot;Client is due for meningococcal vaccination Case 2&quot;\n\n/*\n@output: Client is due for meningococcal vaccination Guidance\n@guidance: Should vaccinate client with first meningococcal dose as no meningococcal doses were administered and client is within appropriate age range.\nCheck for contraindications.\n@guidance: Should vaccinate client with second meningococcal dose as client's age was less than 23 months when the primary series was started and the latest meningococcal dose was administered more than 3 months ago. \nCheck for contraindications.\n*/\ndefine &quot;Client is due for meningococcal vaccination Guidance&quot;:\n  case\n    when &quot;Client is due for meningococcal vaccination Case 1&quot; then 'Should vaccinate client with first meningococcal dose as no meningococcal doses were administered and client is within appropriate age range.\nCheck for contraindications.'\n    when &quot;Client is due for meningococcal vaccination Case 2&quot; then 'Should vaccinate client with second meningococcal dose as client\\'s age was less than 23 months when the primary series was started and the latest meningococcal dose was administered more than 3 months ago. \nCheck for contraindications.'\n    else ''\n  end\n\n/*\n@output: Meningococcal immunization schedule is complete Case 1\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot;\n*/\ndefine &quot;Meningococcal immunization schedule is complete Case 1&quot;:\n  Encounter.&quot;One meningococcal primary series dose was administered&quot;\n    and Encounter.&quot;Client's age was more than 23 months when the primary series was started&quot;\n\n/*\n@output: Meningococcal immunization schedule is complete Case 2\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot;\n*/\ndefine &quot;Meningococcal immunization schedule is complete Case 2&quot;:\n  Encounter.&quot;Two meningococcal primary series doses were administered&quot;\n\n/*\n@output: Meningococcal immunization schedule is complete\n@pseudocode: &quot;Immunization recommendation status&quot; = &quot;Complete&quot;\n*/\ndefine &quot;Meningococcal immunization schedule is complete&quot;:\n  &quot;Meningococcal immunization schedule is complete Case 1&quot;\n    or &quot;Meningococcal immunization schedule is complete Case 2&quot;\n\n/*\n@output: Meningococcal immunization schedule is complete Guidance\n@guidance: Meningococcal immunization schedule is complete as client's age was more than 23 months when primary series was started. One primary series dose was administered. \nCheck for any other vaccines due.\n@guidance: Meningococcal immunization schedule is complete. Two primary series doses were administered. \nCheck for any other vaccines due.\n*/\ndefine &quot;Meningococcal immunization schedule is complete Guidance&quot;:\n  case\n    when &quot;Meningococcal immunization schedule is complete Case 1&quot; then 'Meningococcal immunization schedule is complete as client\\'s age was more than 23 months when primary series was started. One primary series dose was administered. \nCheck for any other vaccines due.'\n    when &quot;Meningococcal immunization schedule is complete Case 2&quot; then 'Meningococcal immunization schedule is complete. Two primary series doses were administered. \nCheck for any other vaccines due.'\n    else ''\n  end\n\n\n/*\n@test: Test expected results based on example patients\n*/\ndefine &quot;Test Validation&quot;:\n  case\n    when Patient.id = '55.1' then &quot;Client is not due for meningococcal vaccination Case 1&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with first meningococcal dose as client\\'s age is less than 9 months. \nCheck for any vaccines due and inform the caregiver of when to come back for the first dose.'\n    when Patient.id = '56.01' then &quot;Client is due for meningococcal vaccination Case 1&quot; and &quot;Guidance&quot; = 'Should vaccinate client with first meningococcal dose as no meningococcal doses were administered and client is within appropriate age range.\nCheck for contraindications.'\n    when Patient.id = '57.023' then &quot;Client is not due for meningococcal vaccination Case 2&quot; and &quot;Guidance&quot; = 'Should not vaccinate client with second meningococcal dose as the latest meningococcal dose was administered less than 3 months ago. \nCheck for any other vaccines due and inform the caregiver of when to come back for the second dose.'\n    when Patient.id = '58.023' then &quot;Client is due for meningococcal vaccination Case 2&quot; and &quot;Guidance&quot; = 'Should vaccinate client with second meningococcal dose as client\\'s age was less than 23 months when the primary series was started and the latest meningococcal dose was administered more than 3 months ago. \nCheck for contraindications.'\n    when Patient.id = '59.02' then &quot;Meningococcal immunization schedule is complete Case 1&quot; and &quot;Guidance&quot; = 'Meningococcal immunization schedule is complete as client\\'s age was more than 23 months when primary series was started. One primary series dose was administered. \nCheck for any other vaccines due.'\n    when Patient.id = '60.0' then &quot;Meningococcal immunization schedule is complete Case 2&quot; and &quot;Guidance&quot; = 'Meningococcal immunization schedule is complete. Two primary series doses were administered. \nCheck for any other vaccines due.'\n    else 'No test case set'\n  end\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (84888 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"^^rdf:XMLLiteral
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [
       a fhir:code ;
       fhir:v "computable"
     ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/immunizations/Library/IMMZD2DTMeningococcalQuad2Logic"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.2.0"] ; # 
  fhir:name [ fhir:v "IMMZD2DTMeningococcalQuad2Logic"] ; # 
  fhir:title [ fhir:v "IMMZD2DTMeningococcalQuad2Logic"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v true] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2025-06-25T20:08:00+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "This library defines decision support logic for the IMMZ.D2.DT.Meningococcal.Quadrivalent conjugate vaccines 2 doses decision table in the Immunization CPG"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Encounter" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZD2DTMeningococcalEncounterElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZD2DTMeningococcalEncounterElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Today" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Client is not due for meningococcal vaccination Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not due for meningococcal vaccination Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not due for meningococcal vaccination" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not due for meningococcal vaccination Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Client is due for meningococcal vaccination Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is due for meningococcal vaccination Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is due for meningococcal vaccination" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is due for meningococcal vaccination Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Meningococcal immunization schedule is complete Case 1" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Meningococcal immunization schedule is complete Case 2" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Meningococcal immunization schedule is complete" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Meningococcal immunization schedule is complete Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Has Guidance" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Test Validation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Resource" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

