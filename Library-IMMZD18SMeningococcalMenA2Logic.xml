<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZD18SMeningococcalMenA2Logic"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">IMMZD18SMeningococcalMenA2Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">IMMZD18SMeningococcalMenA2Logic</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-IMMZD18SMeningococcalMenA2Logic.html">IMMZD18SMeningococcalMenA2Logic</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.5.0/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-09-19 13:06:04+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines decision support logic for the IMMZ.D18.S.Meningococcal.MenA conjugate vaccine 2-dose schedule table in the Immunization CPG</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><a href="Library-WHOCommon.html">WHOCommon</a></li>
                  
                    <li><a href="Library-IMMZCommon.html">IMMZCommon</a></li>
                  
                    <li><a href="Library-IMMZConcepts.html">IMMZConcepts</a></li>
                  
                    <li><a href="Library-IMMZEncounterElements.html">IMMZEncounterElements</a></li>
                  
                    <li><a href="Library-IMMZD2DTMeningococcalEncounterElements.html">IMMZD2DTMeningococcalEncounterElements</a></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 1 Expiration</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>First meningococcal dose from the primary series was administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 1</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 1 Due Date</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 1 Create</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 1 Overdue</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Second meningococcal dose from the primary series was administered. The primary series has been completed</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 2</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 2 Due Date</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 2 Create</th><th>string</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 2 Overdue</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Meningococcal dose 2 Expiration</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Test Validation</th><th>Resource</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">
/*
 * Library: IMMZD18SMeningococcalMenA2Logic (IMMZ.D18.S.Meningococcal.MenA conjugate vaccine 2-dose schedule)
 * Schedule Table: MenA conjugate vaccine, 2-dose schedule (specific context where there is a compelling reason to vaccinate infants aged under 9 months)
 */
library IMMZD18SMeningococcalMenA2Logic

using FHIR version '4.0.1'
include FHIRHelpers version '4.0.1'

include WHOCommon called WC

include IMMZCommon called Common
include IMMZConcepts called Concepts

include IMMZEncounterElements called IE
include IMMZD2DTMeningococcalEncounterElements called Encounter

parameter Today Date default Today()

context Patient


/*
@output: Meningococcal dose 1
@description: Provision of the meningococcal dose 1
@trigger: Child's birth
@triggerDate: &quot;Date of birth&quot;
*/
define &quot;Meningococcal dose 1&quot;:
  Encounter.&quot;No meningococcal primary series dose was administered&quot;
  and &quot;Meningococcal dose 1 Expiration&quot; after day of Today
  and not &quot;First meningococcal dose from the primary series was administered&quot;

/*
@output: Meningococcal dose 1 Create
@create: If, in a specific context, there is a compelling reason to vaccinate infants aged under 9 months, a 2-priming dose infant schedule should be used starting at 3 months of age.
*/
define &quot;Meningococcal dose 1 Create&quot;:
  if &quot;Meningococcal dose 1&quot; 
  then 'If, in a specific context, there is a compelling reason to vaccinate infants aged under 9 months, a 2-priming dose infant schedule should be used starting at 3 months of age.' + '
Due Date: ' + ToString(&quot;Meningococcal dose 1 Due Date&quot;) + '
Expiration: ' + ToString(&quot;Meningococcal dose 1 Expiration&quot;)
  else ''

/*
@dynamicValue: Meningococcal dose 1 Due Date
@pseudocode: &quot;Date of birth&quot; + 3 months
*/
define &quot;Meningococcal dose 1 Due Date&quot;:
  if &quot;Meningococcal dose 1&quot; then Patient.birthDate + 3 months
  else null

/*
@dynamicValue: Meningococcal dose 1 Overdue
@pseudocode: To be determined by Member States; however, there is no recommended overdue date and individuals are always eligible to be vaccinated.
*/
define &quot;Meningococcal dose 1 Overdue&quot;:
  null

/*
@dynamicValue: Meningococcal dose 1 Expiration
@pseudocode: &quot;Date of birth&quot; + 9 months
*/
define &quot;Meningococcal dose 1 Expiration&quot;:
  Patient.birthDate + 9 months
  
/*
@complete: First meningococcal dose from the primary series was administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Meningococcal vaccines&quot;) = 1
*/
define &quot;First meningococcal dose from the primary series was administered&quot;:
  Encounter.&quot;One meningococcal primary series dose was administered&quot;

/*
@output: Meningococcal dose 2
@description: Provision of the meningococcal dose 2
@trigger: First meningococcal dose from the primary series was administered
Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Meningococcal vaccines&quot;) = 1
@triggerDate: &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Meningococcal vaccines&quot;)
*/
define &quot;Meningococcal dose 2&quot;:
  &quot;First meningococcal dose from the primary series was administered&quot;
  and not &quot;Second meningococcal dose from the primary series was administered. The primary series has been completed&quot;

/*
@output: Meningococcal dose 2 Create
@create: Meningococcal dose 2 should be provided if the client's age is 3–9 months, 8 weeks after the first dose, and there is a compelling reason to vaccinate the infant.
*/
define &quot;Meningococcal dose 2 Create&quot;:
  if &quot;Meningococcal dose 2&quot; 
  then 'Meningococcal dose 2 should be provided if the client\'s age is 3–9 months, 8 weeks after the first dose, and there is a compelling reason to vaccinate the infant.' + '
Due Date: ' + ToString(&quot;Meningococcal dose 2 Due Date&quot;)
  else ''

/*
@dynamicValue: Meningococcal dose 2 Due Date
@pseudocode: &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Meningococcal vaccines&quot;) + 8 weeks
*/
define &quot;Meningococcal dose 2 Due Date&quot;:
  if &quot;Meningococcal dose 2&quot; then Encounter.&quot;Date of Latest Meningococcal Dose&quot; + 8 weeks
  else null

/*
@dynamicValue: Meningococcal dose 2 Overdue
@pseudocode: To be determined by Member States; however, there is no recommended overdue date and individuals are always eligible to be vaccinated.
*/
define &quot;Meningococcal dose 2 Overdue&quot;:
  null

/*
@dynamicValue: Meningococcal dose 2 Expiration
@pseudocode: To be determined by Member States; however, there is no recommended expiration date and individuals are always eligible to be vaccinated.
*/
define &quot;Meningococcal dose 2 Expiration&quot;:
  null
  
/*
@complete: Second meningococcal dose from the primary series was administered. The primary series has been completed
@pseudocode: &quot;Completed the primary vaccination series&quot; = TRUE (where &quot;Vaccine type&quot; = &quot;Meningococcal vaccines&quot;)
*/
define &quot;Second meningococcal dose from the primary series was administered. The primary series has been completed&quot;:
  Encounter.&quot;Two meningococcal primary series doses were administered&quot;

/*
@test: Test expected results based on example patients
*/
define &quot;Test Validation&quot;:
  case
    when Patient.id = '18.1' then &quot;Meningococcal dose 1&quot;
    when Patient.id = '19.01' then &quot;Meningococcal dose 1&quot;
    when Patient.id = '20.02' then &quot;Meningococcal dose 2&quot;
    when Patient.id = '21.02' then &quot;Meningococcal dose 2&quot;
    when Patient.id = '22.0' then &quot;Second meningococcal dose from the primary series was administered. The primary series has been completed&quot;
    else 'No test case set'
  end
</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (59744 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/IMMZD18SMeningococcalMenA2Logic"/>
  <version value="0.2.0"/>
  <name value="IMMZD18SMeningococcalMenA2Logic"/>
  <title value="IMMZD18SMeningococcalMenA2Logic"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-09-19T13:06:04+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines decision support logic for the IMMZ.D18.S.Meningococcal.MenA conjugate vaccine 2-dose schedule table in the Immunization CPG"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WC"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Common"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Concepts"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZConcepts"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library IE"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZEncounterElements"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Encounter"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZD2DTMeningococcalEncounterElements"/>
  </relatedArtifact>
  <parameter>
    <name value="Today"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 1 Expiration"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="First meningococcal dose from the primary series was administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 1 Due Date"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 1 Create"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 1 Overdue"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <parameter>
    <name value="Second meningococcal dose from the primary series was administered. The primary series has been completed"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 2 Due Date"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 2 Create"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 2 Overdue"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <parameter>
    <name value="Meningococcal dose 2 Expiration"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <parameter>
    <name value="Test Validation"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Resource"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="Ci8qCiAqIExpYnJhcnk6IElNTVpEMThTTWVuaW5nb2NvY2NhbE1lbkEyTG9naWMgKElNTVouRDE4LlMuTWVuaW5nb2NvY2NhbC5NZW5BIGNvbmp1Z2F0ZSB2YWNjaW5lIDItZG9zZSBzY2hlZHVsZSkKICogU2NoZWR1bGUgVGFibGU6IE1lbkEgY29uanVnYXRlIHZhY2NpbmUsIDItZG9zZSBzY2hlZHVsZSAoc3BlY2lmaWMgY29udGV4dCB3aGVyZSB0aGVyZSBpcyBhIGNvbXBlbGxpbmcgcmVhc29uIHRvIHZhY2NpbmF0ZSBpbmZhbnRzIGFnZWQgdW5kZXIgOSBtb250aHMpCiAqLwpsaWJyYXJ5IElNTVpEMThTTWVuaW5nb2NvY2NhbE1lbkEyTG9naWMKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIFdIT0NvbW1vbiBjYWxsZWQgV0MKCmluY2x1ZGUgSU1NWkNvbW1vbiBjYWxsZWQgQ29tbW9uCmluY2x1ZGUgSU1NWkNvbmNlcHRzIGNhbGxlZCBDb25jZXB0cwoKaW5jbHVkZSBJTU1aRW5jb3VudGVyRWxlbWVudHMgY2FsbGVkIElFCmluY2x1ZGUgSU1NWkQyRFRNZW5pbmdvY29jY2FsRW5jb3VudGVyRWxlbWVudHMgY2FsbGVkIEVuY291bnRlcgoKcGFyYW1ldGVyIFRvZGF5IERhdGUgZGVmYXVsdCBUb2RheSgpCgpjb250ZXh0IFBhdGllbnQKCgovKgpAb3V0cHV0OiBNZW5pbmdvY29jY2FsIGRvc2UgMQpAZGVzY3JpcHRpb246IFByb3Zpc2lvbiBvZiB0aGUgbWVuaW5nb2NvY2NhbCBkb3NlIDEKQHRyaWdnZXI6IENoaWxkJ3MgYmlydGgKQHRyaWdnZXJEYXRlOiAiRGF0ZSBvZiBiaXJ0aCIKKi8KZGVmaW5lICJNZW5pbmdvY29jY2FsIGRvc2UgMSI6CiAgRW5jb3VudGVyLiJObyBtZW5pbmdvY29jY2FsIHByaW1hcnkgc2VyaWVzIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCIKICBhbmQgIk1lbmluZ29jb2NjYWwgZG9zZSAxIEV4cGlyYXRpb24iIGFmdGVyIGRheSBvZiBUb2RheQogIGFuZCBub3QgIkZpcnN0IG1lbmluZ29jb2NjYWwgZG9zZSBmcm9tIHRoZSBwcmltYXJ5IHNlcmllcyB3YXMgYWRtaW5pc3RlcmVkIgoKLyoKQG91dHB1dDogTWVuaW5nb2NvY2NhbCBkb3NlIDEgQ3JlYXRlCkBjcmVhdGU6IElmLCBpbiBhIHNwZWNpZmljIGNvbnRleHQsIHRoZXJlIGlzIGEgY29tcGVsbGluZyByZWFzb24gdG8gdmFjY2luYXRlIGluZmFudHMgYWdlZCB1bmRlciA5IG1vbnRocywgYSAyLXByaW1pbmcgZG9zZSBpbmZhbnQgc2NoZWR1bGUgc2hvdWxkIGJlIHVzZWQgc3RhcnRpbmcgYXQgMyBtb250aHMgb2YgYWdlLgoqLwpkZWZpbmUgIk1lbmluZ29jb2NjYWwgZG9zZSAxIENyZWF0ZSI6CiAgaWYgIk1lbmluZ29jb2NjYWwgZG9zZSAxIiAKICB0aGVuICdJZiwgaW4gYSBzcGVjaWZpYyBjb250ZXh0LCB0aGVyZSBpcyBhIGNvbXBlbGxpbmcgcmVhc29uIHRvIHZhY2NpbmF0ZSBpbmZhbnRzIGFnZWQgdW5kZXIgOSBtb250aHMsIGEgMi1wcmltaW5nIGRvc2UgaW5mYW50IHNjaGVkdWxlIHNob3VsZCBiZSB1c2VkIHN0YXJ0aW5nIGF0IDMgbW9udGhzIG9mIGFnZS4nICsgJwpEdWUgRGF0ZTogJyArIFRvU3RyaW5nKCJNZW5pbmdvY29jY2FsIGRvc2UgMSBEdWUgRGF0ZSIpICsgJwpFeHBpcmF0aW9uOiAnICsgVG9TdHJpbmcoIk1lbmluZ29jb2NjYWwgZG9zZSAxIEV4cGlyYXRpb24iKQogIGVsc2UgJycKCi8qCkBkeW5hbWljVmFsdWU6IE1lbmluZ29jb2NjYWwgZG9zZSAxIER1ZSBEYXRlCkBwc2V1ZG9jb2RlOiAiRGF0ZSBvZiBiaXJ0aCIgKyAzIG1vbnRocwoqLwpkZWZpbmUgIk1lbmluZ29jb2NjYWwgZG9zZSAxIER1ZSBEYXRlIjoKICBpZiAiTWVuaW5nb2NvY2NhbCBkb3NlIDEiIHRoZW4gUGF0aWVudC5iaXJ0aERhdGUgKyAzIG1vbnRocwogIGVsc2UgbnVsbAoKLyoKQGR5bmFtaWNWYWx1ZTogTWVuaW5nb2NvY2NhbCBkb3NlIDEgT3ZlcmR1ZQpAcHNldWRvY29kZTogVG8gYmUgZGV0ZXJtaW5lZCBieSBNZW1iZXIgU3RhdGVzOyBob3dldmVyLCB0aGVyZSBpcyBubyByZWNvbW1lbmRlZCBvdmVyZHVlIGRhdGUgYW5kIGluZGl2aWR1YWxzIGFyZSBhbHdheXMgZWxpZ2libGUgdG8gYmUgdmFjY2luYXRlZC4KKi8KZGVmaW5lICJNZW5pbmdvY29jY2FsIGRvc2UgMSBPdmVyZHVlIjoKICBudWxsCgovKgpAZHluYW1pY1ZhbHVlOiBNZW5pbmdvY29jY2FsIGRvc2UgMSBFeHBpcmF0aW9uCkBwc2V1ZG9jb2RlOiAiRGF0ZSBvZiBiaXJ0aCIgKyA5IG1vbnRocwoqLwpkZWZpbmUgIk1lbmluZ29jb2NjYWwgZG9zZSAxIEV4cGlyYXRpb24iOgogIFBhdGllbnQuYmlydGhEYXRlICsgOSBtb250aHMKICAKLyoKQGNvbXBsZXRlOiBGaXJzdCBtZW5pbmdvY29jY2FsIGRvc2UgZnJvbSB0aGUgcHJpbWFyeSBzZXJpZXMgd2FzIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJNZW5pbmdvY29jY2FsIHZhY2NpbmVzIikgPSAxCiovCmRlZmluZSAiRmlyc3QgbWVuaW5nb2NvY2NhbCBkb3NlIGZyb20gdGhlIHByaW1hcnkgc2VyaWVzIHdhcyBhZG1pbmlzdGVyZWQiOgogIEVuY291bnRlci4iT25lIG1lbmluZ29jb2NjYWwgcHJpbWFyeSBzZXJpZXMgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIgoKLyoKQG91dHB1dDogTWVuaW5nb2NvY2NhbCBkb3NlIDIKQGRlc2NyaXB0aW9uOiBQcm92aXNpb24gb2YgdGhlIG1lbmluZ29jb2NjYWwgZG9zZSAyCkB0cmlnZ2VyOiBGaXJzdCBtZW5pbmdvY29jY2FsIGRvc2UgZnJvbSB0aGUgcHJpbWFyeSBzZXJpZXMgd2FzIGFkbWluaXN0ZXJlZApDb3VudCBvZiB2YWNjaW5lcyBhZG1pbmlzdGVyZWQgKHdoZXJlICJWYWNjaW5lIHR5cGUiID0gIk1lbmluZ29jb2NjYWwgdmFjY2luZXMiKSA9IDEKQHRyaWdnZXJEYXRlOiAiRGF0ZSBhbmQgdGltZSBvZiB2YWNjaW5hdGlvbiIgKHdoZXJlICJWYWNjaW5lIHR5cGUiID0gIk1lbmluZ29jb2NjYWwgdmFjY2luZXMiKQoqLwpkZWZpbmUgIk1lbmluZ29jb2NjYWwgZG9zZSAyIjoKICAiRmlyc3QgbWVuaW5nb2NvY2NhbCBkb3NlIGZyb20gdGhlIHByaW1hcnkgc2VyaWVzIHdhcyBhZG1pbmlzdGVyZWQiCiAgYW5kIG5vdCAiU2Vjb25kIG1lbmluZ29jb2NjYWwgZG9zZSBmcm9tIHRoZSBwcmltYXJ5IHNlcmllcyB3YXMgYWRtaW5pc3RlcmVkLiBUaGUgcHJpbWFyeSBzZXJpZXMgaGFzIGJlZW4gY29tcGxldGVkIgoKLyoKQG91dHB1dDogTWVuaW5nb2NvY2NhbCBkb3NlIDIgQ3JlYXRlCkBjcmVhdGU6IE1lbmluZ29jb2NjYWwgZG9zZSAyIHNob3VsZCBiZSBwcm92aWRlZCBpZiB0aGUgY2xpZW50J3MgYWdlIGlzIDPigJM5IG1vbnRocywgOCB3ZWVrcyBhZnRlciB0aGUgZmlyc3QgZG9zZSwgYW5kIHRoZXJlIGlzIGEgY29tcGVsbGluZyByZWFzb24gdG8gdmFjY2luYXRlIHRoZSBpbmZhbnQuCiovCmRlZmluZSAiTWVuaW5nb2NvY2NhbCBkb3NlIDIgQ3JlYXRlIjoKICBpZiAiTWVuaW5nb2NvY2NhbCBkb3NlIDIiIAogIHRoZW4gJ01lbmluZ29jb2NjYWwgZG9zZSAyIHNob3VsZCBiZSBwcm92aWRlZCBpZiB0aGUgY2xpZW50XCdzIGFnZSBpcyAz4oCTOSBtb250aHMsIDggd2Vla3MgYWZ0ZXIgdGhlIGZpcnN0IGRvc2UsIGFuZCB0aGVyZSBpcyBhIGNvbXBlbGxpbmcgcmVhc29uIHRvIHZhY2NpbmF0ZSB0aGUgaW5mYW50LicgKyAnCkR1ZSBEYXRlOiAnICsgVG9TdHJpbmcoIk1lbmluZ29jb2NjYWwgZG9zZSAyIER1ZSBEYXRlIikKICBlbHNlICcnCgovKgpAZHluYW1pY1ZhbHVlOiBNZW5pbmdvY29jY2FsIGRvc2UgMiBEdWUgRGF0ZQpAcHNldWRvY29kZTogIkRhdGUgYW5kIHRpbWUgb2YgdmFjY2luYXRpb24iICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJNZW5pbmdvY29jY2FsIHZhY2NpbmVzIikgKyA4IHdlZWtzCiovCmRlZmluZSAiTWVuaW5nb2NvY2NhbCBkb3NlIDIgRHVlIERhdGUiOgogIGlmICJNZW5pbmdvY29jY2FsIGRvc2UgMiIgdGhlbiBFbmNvdW50ZXIuIkRhdGUgb2YgTGF0ZXN0IE1lbmluZ29jb2NjYWwgRG9zZSIgKyA4IHdlZWtzCiAgZWxzZSBudWxsCgovKgpAZHluYW1pY1ZhbHVlOiBNZW5pbmdvY29jY2FsIGRvc2UgMiBPdmVyZHVlCkBwc2V1ZG9jb2RlOiBUbyBiZSBkZXRlcm1pbmVkIGJ5IE1lbWJlciBTdGF0ZXM7IGhvd2V2ZXIsIHRoZXJlIGlzIG5vIHJlY29tbWVuZGVkIG92ZXJkdWUgZGF0ZSBhbmQgaW5kaXZpZHVhbHMgYXJlIGFsd2F5cyBlbGlnaWJsZSB0byBiZSB2YWNjaW5hdGVkLgoqLwpkZWZpbmUgIk1lbmluZ29jb2NjYWwgZG9zZSAyIE92ZXJkdWUiOgogIG51bGwKCi8qCkBkeW5hbWljVmFsdWU6IE1lbmluZ29jb2NjYWwgZG9zZSAyIEV4cGlyYXRpb24KQHBzZXVkb2NvZGU6IFRvIGJlIGRldGVybWluZWQgYnkgTWVtYmVyIFN0YXRlczsgaG93ZXZlciwgdGhlcmUgaXMgbm8gcmVjb21tZW5kZWQgZXhwaXJhdGlvbiBkYXRlIGFuZCBpbmRpdmlkdWFscyBhcmUgYWx3YXlzIGVsaWdpYmxlIHRvIGJlIHZhY2NpbmF0ZWQuCiovCmRlZmluZSAiTWVuaW5nb2NvY2NhbCBkb3NlIDIgRXhwaXJhdGlvbiI6CiAgbnVsbAogIAovKgpAY29tcGxldGU6IFNlY29uZCBtZW5pbmdvY29jY2FsIGRvc2UgZnJvbSB0aGUgcHJpbWFyeSBzZXJpZXMgd2FzIGFkbWluaXN0ZXJlZC4gVGhlIHByaW1hcnkgc2VyaWVzIGhhcyBiZWVuIGNvbXBsZXRlZApAcHNldWRvY29kZTogIkNvbXBsZXRlZCB0aGUgcHJpbWFyeSB2YWNjaW5hdGlvbiBzZXJpZXMiID0gVFJVRSAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiTWVuaW5nb2NvY2NhbCB2YWNjaW5lcyIpCiovCmRlZmluZSAiU2Vjb25kIG1lbmluZ29jb2NjYWwgZG9zZSBmcm9tIHRoZSBwcmltYXJ5IHNlcmllcyB3YXMgYWRtaW5pc3RlcmVkLiBUaGUgcHJpbWFyeSBzZXJpZXMgaGFzIGJlZW4gY29tcGxldGVkIjoKICBFbmNvdW50ZXIuIlR3byBtZW5pbmdvY29jY2FsIHByaW1hcnkgc2VyaWVzIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkIgoKLyoKQHRlc3Q6IFRlc3QgZXhwZWN0ZWQgcmVzdWx0cyBiYXNlZCBvbiBleGFtcGxlIHBhdGllbnRzCiovCmRlZmluZSAiVGVzdCBWYWxpZGF0aW9uIjoKICBjYXNlCiAgICB3aGVuIFBhdGllbnQuaWQgPSAnMTguMScgdGhlbiAiTWVuaW5nb2NvY2NhbCBkb3NlIDEiCiAgICB3aGVuIFBhdGllbnQuaWQgPSAnMTkuMDEnIHRoZW4gIk1lbmluZ29jb2NjYWwgZG9zZSAxIgogICAgd2hlbiBQYXRpZW50LmlkID0gJzIwLjAyJyB0aGVuICJNZW5pbmdvY29jY2FsIGRvc2UgMiIKICAgIHdoZW4gUGF0aWVudC5pZCA9ICcyMS4wMicgdGhlbiAiTWVuaW5nb2NvY2NhbCBkb3NlIDIiCiAgICB3aGVuIFBhdGllbnQuaWQgPSAnMjIuMCcgdGhlbiAiU2Vjb25kIG1lbmluZ29jb2NjYWwgZG9zZSBmcm9tIHRoZSBwcmltYXJ5IHNlcmllcyB3YXMgYWRtaW5pc3RlcmVkLiBUaGUgcHJpbWFyeSBzZXJpZXMgaGFzIGJlZW4gY29tcGxldGVkIgogICAgZWxzZSAnTm8gdGVzdCBjYXNlIHNldCcKICBlbmQK"/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>