<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="IMMZD2DTHepatitisAElements"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"/>
    <profile value="http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"/>
  </meta>
  <text>
    <status value="extensions"/><div xmlns="http://www.w3.org/1999/xhtml">
<div>
    <table class="grid dict">
        
        
        <tr>
            <th scope="row"><b>Title: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTHepatitisAElements</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Id: </b></th>
            <td style="padding-left: 4px;">IMMZD2DTHepatitisAElements</td>
        </tr>
        

        
        
        <tr>
            <th scope="row"><b>Version: </b></th>
            <td style="padding-left: 4px;">0.2.0</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Url: </b></th>
            <td style="padding-left: 4px;"><a href="Library-IMMZD2DTHepatitisAElements.html">IMMZD2DTHepatitisAElements</a></td>
        </tr>
        

        

        

        
        <tr>
            <th scope="row"><b>Status: </b></th>
            <td style="padding-left: 4px;">draft</td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Type: </b></th>
            <td style="padding-left: 4px;">
                
                    
                        
                        <p style="margin-bottom: 5px;">
                            <b>system: </b> <span><a href="http://terminology.hl7.org/6.5.0/CodeSystem-library-type.html">http://terminology.hl7.org/CodeSystem/library-type</a></span>
                        </p>
                        
                        
                        <p style="margin-bottom: 5px;">
                            <b>code: </b> <span>logic-library</span>
                        </p>
                        
                        
                    
                
                
            </td>
        </tr>
        

        

        
        <tr>
            <th scope="row"><b>Date: </b></th>
            <td style="padding-left: 4px;">2025-09-19 13:06:04+0000</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Publisher: </b></th>
            <td style="padding-left: 4px;">WHO</td>
        </tr>
        

        
        <tr>
            <th scope="row"><b>Description: </b></th>
            <td style="padding-left: 4px;"><div><p>This library defines context-independent elements for Hepatitis A used throughout the Immunization CPG</p>
</div></td>
        </tr>
        

        

        

        

        

        

        

        

        

        

        

        
        <tr>
            <th scope="row"><b>Related Artifacts: </b></th>
            <td style="padding-left: 4px;">
                
                
                
                <p><b>Dependencies</b></p>
                <ul>
                  
                    <li><a href="Library-WHOConcepts.html">WHOConcepts</a></li>
                  
                    <li><a href="Library-WHOCommon.html">WHOCommon</a></li>
                  
                    <li><a href="Library-WHOElements.html">WHOElements</a></li>
                  
                    <li><a href="Library-IMMZCommon.html">IMMZCommon</a></li>
                  
                    <li><a href="Library-IMMZConcepts.html">IMMZConcepts</a></li>
                  
                    <li><a href="Library-IMMZElements.html">IMMZElements</a></li>
                  
                </ul>
                
                
                
                
                
            </td>
        </tr>
        

        
        <tr>
          <th scope="row"><b>Parameters: </b></th>
          <td style="padding-left: 4px;">
            <table class="grid-dict">
              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>
              
                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Hepatitis A Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>
              
                <tr><th>Date of Latest Hepatitis A Dose</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Hepatitis A Primary Series Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>
              
                <tr><th>Number of Hepatitis A Primary Series Doses Administered</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>No hepatitis A primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>No hepatitis A primary series dose was administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>One hepatitis A primary series dose was administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Two hepatitis A primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client's age is less than 12 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client's age is more than or equal to 12 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>The latest Hepatitis A dose was administered less than 6 months ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>The latest Hepatitis A dose was administered more than 6 months ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client's age is less than 18 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Client's age is more than or equal to 18 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>Live vaccine was administered in the last 4 weeks</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
                <tr><th>No live vaccine was administered in the last 4 weeks</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>
              
            </table>
          </td>
        </tr>
        

        

        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><a id="cql-content"><b>Content: </b></a> text/cql</th></tr>
              <tr><td><pre><code class="language-cql">
/*
  * Library: IMMZD2DTHepatitisAElements
  */
library IMMZD2DTHepatitisAElements

using FHIR version '4.0.1'
include FHIRHelpers version '4.0.1'

include WHOConcepts
include WHOCommon called WC
include WHOElements called WE

include IMMZCommon called Common
include IMMZConcepts called Concepts
include IMMZElements called Elements

context Patient

/*
@internal: Hepatitis A containing Doses Administered to Patient
*/
define &quot;Hepatitis A Doses Administered to Patient&quot;:
  Elements.&quot;Doses Administered to Patient&quot; I
  where
    I.vaccineCode in Concepts.&quot;Hepatitis A-containing vaccines&quot;

/*
@internal: Date and time of last Hepatitis A dose
*/
define &quot;Date of Latest Hepatitis A Dose&quot;:
  date from start of &quot;Hepatitis A Doses Administered to Patient&quot;.mostRecent().occurrence.toInterval()

/*
@internal: Hepatitis A containing Doses Administered to Patient that are in the Primary series
*/
define &quot;Hepatitis A Primary Series Doses Administered to Patient&quot;:
  &quot;Hepatitis A Doses Administered to Patient&quot;.seriesPrimary()

/*
@internal: Number of Hepatitis A Primary Series doses
*/
define &quot;Number of Hepatitis A Primary Series Doses Administered&quot;:
  Count(&quot;Hepatitis A Primary Series Doses Administered to Patient&quot;)

/*
@input: No hepatitis A primary series doses were administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
*/
define &quot;No hepatitis A primary series doses were administered&quot;:
  &quot;Number of Hepatitis A Primary Series Doses Administered&quot; = 0

/*
@input: No hepatitis A primary series dose was administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0
@decision: Inactivated hepatitis A virus (HAV), 1-dose schedule
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;No hepatitis A primary series dose was administered&quot;:
  &quot;No hepatitis A primary series doses were administered&quot;

/*
@input: One hepatitis A primary series dose was administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
@decision: Inactivated hepatitis A virus (HAV), 1-dose schedule
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;One hepatitis A primary series dose was administered&quot;:
  &quot;Number of Hepatitis A Primary Series Doses Administered&quot; = 0

/*
@input: Two hepatitis A primary series doses were administered
@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
*/
define &quot;Two hepatitis A primary series doses were administered&quot;:
  &quot;Number of Hepatitis A Primary Series Doses Administered&quot; = 2

/*
@input: Client's age is less than 12 months
@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 12 months
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
@decision: Inactivated hepatitis A virus (HAV), 1-dose schedule
*/
define &quot;Client's age is less than 12 months&quot;:
  Elements.&quot;Current Patient Age In Months&quot; &lt; 12

/*
@input: Client's age is more than or equal to 12 months
@pseudocode: Today's date − &quot;Date of birth&quot; ≥ 12 months
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
@decision: Inactivated hepatitis A virus (HAV), 1-dose schedule
*/
define &quot;Client's age is more than or equal to 12 months&quot;:
  Elements.&quot;Current Patient Age In Months&quot; &gt;= 12

/*
@input: The latest Hepatitis A dose was administered less than 6 months ago
@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot;) &lt; 6 months
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
*/
define &quot;The latest Hepatitis A dose was administered less than 6 months ago&quot;:
  &quot;Date of Latest Hepatitis A Dose&quot; is not null 
    and duration in months between &quot;Date of Latest Hepatitis A Dose&quot; and Now() &lt; 6

/*
@input: The latest Hepatitis A dose was administered more than 6 months ago
@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Hepatitis A-containing vaccines&quot;) ≥ 6 months
@decision: Inactivated hepatitis A virus (HAV), 2-dose schedule
*/
define &quot;The latest Hepatitis A dose was administered more than 6 months ago&quot;:
  not &quot;The latest Hepatitis A dose was administered less than 6 months ago&quot;

/*
@input: Client's age is less than 18 months
@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 18 months
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;Client's age is less than 18 months&quot;:
  Elements.&quot;Current Patient Age In Months&quot; &lt; 18

/*
@input: Client's age is more than or equal to 18 months
@pseudocode: Today's date − &quot;Date of birth&quot; ≥ 18 months
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;Client's age is more than or equal to 18 months&quot;:
  Elements.&quot;Current Patient Age In Months&quot; &gt;= 18

/*
@input: Live vaccine was administered in the last 4 weeks
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Live vaccine&quot; = TRUE) &lt; 4 weekS
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;Live vaccine was administered in the last 4 weeks&quot;:
  Elements.&quot;Live vaccine was administered in the last 4 weeks&quot;

/*
@input: No live vaccine was administered in the last 4 weeks
@pseudocode: Today's date − latest &quot;Date and time of vaccination&quot; (where &quot;Live vaccine&quot; = TRUE) ≥ 4 weeks
@decision: Live attenuated hepatitis A virus (HAV), 1 dose schedule
*/
define &quot;No live vaccine was administered in the last 4 weeks&quot;:
  Elements.&quot;No live vaccine was administered in the last 4 weeks&quot;
</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
        
        
        
        <tr>
          <td colspan="2">
            <table>
              <tr><th><b>Content: </b> application/elm+xml</th></tr>
              <tr><td><pre><code>Encoded data (47644 characters)</code></pre></td></tr>
            </table>
          </td>
        </tr>
        
        
    </table>
</div>
</div>
  </text>
  <extension url="http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <url value="http://smart.who.int/immunizations/Library/IMMZD2DTHepatitisAElements"/>
  <version value="0.2.0"/>
  <name value="IMMZD2DTHepatitisAElements"/>
  <title value="IMMZD2DTHepatitisAElements"/>
  <status value="draft"/>
  <experimental value="false"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2025-09-19T13:06:04+00:00"/>
  <publisher value="WHO"/>
  <contact>
    <name value="WHO"/>
    <telecom>
      <system value="url"/>
      <value value="http://who.int"/>
    </telecom>
  </contact>
  <description value="This library defines context-independent elements for Hepatitis A used throughout the Immunization CPG"/>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WHOConcepts"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOConcepts"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WC"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library WE"/>
    <resource value="http://smart.who.int/immunizations/Library/WHOElements"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Common"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZCommon"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Concepts"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZConcepts"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <display value="Library Elements"/>
    <resource value="http://smart.who.int/immunizations/Library/IMMZElements"/>
  </relatedArtifact>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Hepatitis A Doses Administered to Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Immunization"/>
  </parameter>
  <parameter>
    <name value="Date of Latest Hepatitis A Dose"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="date"/>
  </parameter>
  <parameter>
    <name value="Hepatitis A Primary Series Doses Administered to Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Immunization"/>
  </parameter>
  <parameter>
    <name value="Number of Hepatitis A Primary Series Doses Administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="No hepatitis A primary series doses were administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="No hepatitis A primary series dose was administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="One hepatitis A primary series dose was administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Two hepatitis A primary series doses were administered"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client's age is less than 12 months"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client's age is more than or equal to 12 months"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="The latest Hepatitis A dose was administered less than 6 months ago"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="The latest Hepatitis A dose was administered more than 6 months ago"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client's age is less than 18 months"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Client's age is more than or equal to 18 months"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Live vaccine was administered in the last 4 weeks"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="No live vaccine was administered in the last 4 weeks"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="Ci8qCiAgKiBMaWJyYXJ5OiBJTU1aRDJEVEhlcGF0aXRpc0FFbGVtZW50cwogICovCmxpYnJhcnkgSU1NWkQyRFRIZXBhdGl0aXNBRWxlbWVudHMKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIFdIT0NvbmNlcHRzCmluY2x1ZGUgV0hPQ29tbW9uIGNhbGxlZCBXQwppbmNsdWRlIFdIT0VsZW1lbnRzIGNhbGxlZCBXRQoKaW5jbHVkZSBJTU1aQ29tbW9uIGNhbGxlZCBDb21tb24KaW5jbHVkZSBJTU1aQ29uY2VwdHMgY2FsbGVkIENvbmNlcHRzCmluY2x1ZGUgSU1NWkVsZW1lbnRzIGNhbGxlZCBFbGVtZW50cwoKY29udGV4dCBQYXRpZW50CgovKgpAaW50ZXJuYWw6IEhlcGF0aXRpcyBBIGNvbnRhaW5pbmcgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQKKi8KZGVmaW5lICJIZXBhdGl0aXMgQSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCI6CiAgRWxlbWVudHMuIkRvc2VzIEFkbWluaXN0ZXJlZCB0byBQYXRpZW50IiBJCiAgd2hlcmUKICAgIEkudmFjY2luZUNvZGUgaW4gQ29uY2VwdHMuIkhlcGF0aXRpcyBBLWNvbnRhaW5pbmcgdmFjY2luZXMiCgovKgpAaW50ZXJuYWw6IERhdGUgYW5kIHRpbWUgb2YgbGFzdCBIZXBhdGl0aXMgQSBkb3NlCiovCmRlZmluZSAiRGF0ZSBvZiBMYXRlc3QgSGVwYXRpdGlzIEEgRG9zZSI6CiAgZGF0ZSBmcm9tIHN0YXJ0IG9mICJIZXBhdGl0aXMgQSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIubW9zdFJlY2VudCgpLm9jY3VycmVuY2UudG9JbnRlcnZhbCgpCgovKgpAaW50ZXJuYWw6IEhlcGF0aXRpcyBBIGNvbnRhaW5pbmcgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQgdGhhdCBhcmUgaW4gdGhlIFByaW1hcnkgc2VyaWVzCiovCmRlZmluZSAiSGVwYXRpdGlzIEEgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQiOgogICJIZXBhdGl0aXMgQSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIuc2VyaWVzUHJpbWFyeSgpCgovKgpAaW50ZXJuYWw6IE51bWJlciBvZiBIZXBhdGl0aXMgQSBQcmltYXJ5IFNlcmllcyBkb3NlcwoqLwpkZWZpbmUgIk51bWJlciBvZiBIZXBhdGl0aXMgQSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQiOgogIENvdW50KCJIZXBhdGl0aXMgQSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIpCgovKgpAaW5wdXQ6IE5vIGhlcGF0aXRpcyBBIHByaW1hcnkgc2VyaWVzIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkCkBwc2V1ZG9jb2RlOiBDb3VudCBvZiB2YWNjaW5lcyBhZG1pbmlzdGVyZWQgKHdoZXJlICJWYWNjaW5lIHR5cGUiID0gIkhlcGF0aXRpcyBBLWNvbnRhaW5pbmcgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMApAZGVjaXNpb246IEluYWN0aXZhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAyLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJObyBoZXBhdGl0aXMgQSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZCI6CiAgIk51bWJlciBvZiBIZXBhdGl0aXMgQSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQiID0gMAoKLyoKQGlucHV0OiBObyBoZXBhdGl0aXMgQSBwcmltYXJ5IHNlcmllcyBkb3NlIHdhcyBhZG1pbmlzdGVyZWQKQHBzZXVkb2NvZGU6IENvdW50IG9mIHZhY2NpbmVzIGFkbWluaXN0ZXJlZCAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiSGVwYXRpdGlzIEEtY29udGFpbmluZyB2YWNjaW5lcyIgYW5kICJUeXBlIG9mIGRvc2UiID0gIlByaW1hcnkgc2VyaWVzIikgPSAwCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDEtZG9zZSBzY2hlZHVsZQpAZGVjaXNpb246IExpdmUgYXR0ZW51YXRlZCBoZXBhdGl0aXMgQSB2aXJ1cyAoSEFWKSwgMSBkb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiTm8gaGVwYXRpdGlzIEEgcHJpbWFyeSBzZXJpZXMgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIjoKICAiTm8gaGVwYXRpdGlzIEEgcHJpbWFyeSBzZXJpZXMgZG9zZXMgd2VyZSBhZG1pbmlzdGVyZWQiCgovKgpAaW5wdXQ6IE9uZSBoZXBhdGl0aXMgQSBwcmltYXJ5IHNlcmllcyBkb3NlIHdhcyBhZG1pbmlzdGVyZWQKQHBzZXVkb2NvZGU6IENvdW50IG9mIHZhY2NpbmVzIGFkbWluaXN0ZXJlZCAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiSGVwYXRpdGlzIEEtY29udGFpbmluZyB2YWNjaW5lcyIgYW5kICJUeXBlIG9mIGRvc2UiID0gIlByaW1hcnkgc2VyaWVzIikgPSAxCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDItZG9zZSBzY2hlZHVsZQpAZGVjaXNpb246IEluYWN0aXZhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxLWRvc2Ugc2NoZWR1bGUKQGRlY2lzaW9uOiBMaXZlIGF0dGVudWF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDEgZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIk9uZSBoZXBhdGl0aXMgQSBwcmltYXJ5IHNlcmllcyBkb3NlIHdhcyBhZG1pbmlzdGVyZWQiOgogICJOdW1iZXIgb2YgSGVwYXRpdGlzIEEgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDAKCi8qCkBpbnB1dDogVHdvIGhlcGF0aXRpcyBBIHByaW1hcnkgc2VyaWVzIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkCkBwc2V1ZG9jb2RlOiBDb3VudCBvZiB2YWNjaW5lcyBhZG1pbmlzdGVyZWQgKHdoZXJlICJWYWNjaW5lIHR5cGUiID0gIkhlcGF0aXRpcyBBLWNvbnRhaW5pbmcgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMgpAZGVjaXNpb246IEluYWN0aXZhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAyLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJUd28gaGVwYXRpdGlzIEEgcHJpbWFyeSBzZXJpZXMgZG9zZXMgd2VyZSBhZG1pbmlzdGVyZWQiOgogICJOdW1iZXIgb2YgSGVwYXRpdGlzIEEgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDIKCi8qCkBpbnB1dDogQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiAxMiBtb250aHMKQHBzZXVkb2NvZGU6IFRvZGF5J3MgZGF0ZSDiiJIgIkRhdGUgb2YgYmlydGgiIDwgMTIgbW9udGhzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDItZG9zZSBzY2hlZHVsZQpAZGVjaXNpb246IEluYWN0aXZhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJDbGllbnQncyBhZ2UgaXMgbGVzcyB0aGFuIDEyIG1vbnRocyI6CiAgRWxlbWVudHMuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gTW9udGhzIiA8IDEyCgovKgpAaW5wdXQ6IENsaWVudCdzIGFnZSBpcyBtb3JlIHRoYW4gb3IgZXF1YWwgdG8gMTIgbW9udGhzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiDiiaUgMTIgbW9udGhzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDItZG9zZSBzY2hlZHVsZQpAZGVjaXNpb246IEluYWN0aXZhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJDbGllbnQncyBhZ2UgaXMgbW9yZSB0aGFuIG9yIGVxdWFsIHRvIDEyIG1vbnRocyI6CiAgRWxlbWVudHMuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gTW9udGhzIiA+PSAxMgoKLyoKQGlucHV0OiBUaGUgbGF0ZXN0IEhlcGF0aXRpcyBBIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gNiBtb250aHMgYWdvCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiSGVwYXRpdGlzIEEtY29udGFpbmluZyB2YWNjaW5lcyIpIDwgNiBtb250aHMKQGRlY2lzaW9uOiBJbmFjdGl2YXRlZCBoZXBhdGl0aXMgQSB2aXJ1cyAoSEFWKSwgMi1kb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiVGhlIGxhdGVzdCBIZXBhdGl0aXMgQSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbGVzcyB0aGFuIDYgbW9udGhzIGFnbyI6CiAgIkRhdGUgb2YgTGF0ZXN0IEhlcGF0aXRpcyBBIERvc2UiIGlzIG5vdCBudWxsIAogICAgYW5kIGR1cmF0aW9uIGluIG1vbnRocyBiZXR3ZWVuICJEYXRlIG9mIExhdGVzdCBIZXBhdGl0aXMgQSBEb3NlIiBhbmQgTm93KCkgPCA2CgovKgpAaW5wdXQ6IFRoZSBsYXRlc3QgSGVwYXRpdGlzIEEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIG1vcmUgdGhhbiA2IG1vbnRocyBhZ28KQHBzZXVkb2NvZGU6IFRvZGF5J3MgZGF0ZSDiiJIgIkRhdGUgYW5kIHRpbWUgb2YgdmFjY2luYXRpb24iICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJIZXBhdGl0aXMgQS1jb250YWluaW5nIHZhY2NpbmVzIikg4omlIDYgbW9udGhzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgaGVwYXRpdGlzIEEgdmlydXMgKEhBViksIDItZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIlRoZSBsYXRlc3QgSGVwYXRpdGlzIEEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIG1vcmUgdGhhbiA2IG1vbnRocyBhZ28iOgogIG5vdCAiVGhlIGxhdGVzdCBIZXBhdGl0aXMgQSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbGVzcyB0aGFuIDYgbW9udGhzIGFnbyIKCi8qCkBpbnB1dDogQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiAxOCBtb250aHMKQHBzZXVkb2NvZGU6IFRvZGF5J3MgZGF0ZSDiiJIgIkRhdGUgb2YgYmlydGgiIDwgMTggbW9udGhzCkBkZWNpc2lvbjogTGl2ZSBhdHRlbnVhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxIGRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJDbGllbnQncyBhZ2UgaXMgbGVzcyB0aGFuIDE4IG1vbnRocyI6CiAgRWxlbWVudHMuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gTW9udGhzIiA8IDE4CgovKgpAaW5wdXQ6IENsaWVudCdzIGFnZSBpcyBtb3JlIHRoYW4gb3IgZXF1YWwgdG8gMTggbW9udGhzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiDiiaUgMTggbW9udGhzCkBkZWNpc2lvbjogTGl2ZSBhdHRlbnVhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxIGRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJDbGllbnQncyBhZ2UgaXMgbW9yZSB0aGFuIG9yIGVxdWFsIHRvIDE4IG1vbnRocyI6CiAgRWxlbWVudHMuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gTW9udGhzIiA+PSAxOAoKLyoKQGlucHV0OiBMaXZlIHZhY2NpbmUgd2FzIGFkbWluaXN0ZXJlZCBpbiB0aGUgbGFzdCA0IHdlZWtzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSIGxhdGVzdCAiRGF0ZSBhbmQgdGltZSBvZiB2YWNjaW5hdGlvbiIgKHdoZXJlICJMaXZlIHZhY2NpbmUiID0gVFJVRSkgPCA0IHdlZWtTCkBkZWNpc2lvbjogTGl2ZSBhdHRlbnVhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxIGRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJMaXZlIHZhY2NpbmUgd2FzIGFkbWluaXN0ZXJlZCBpbiB0aGUgbGFzdCA0IHdlZWtzIjoKICBFbGVtZW50cy4iTGl2ZSB2YWNjaW5lIHdhcyBhZG1pbmlzdGVyZWQgaW4gdGhlIGxhc3QgNCB3ZWVrcyIKCi8qCkBpbnB1dDogTm8gbGl2ZSB2YWNjaW5lIHdhcyBhZG1pbmlzdGVyZWQgaW4gdGhlIGxhc3QgNCB3ZWVrcwpAcHNldWRvY29kZTogVG9kYXkncyBkYXRlIOKIkiBsYXRlc3QgIkRhdGUgYW5kIHRpbWUgb2YgdmFjY2luYXRpb24iICh3aGVyZSAiTGl2ZSB2YWNjaW5lIiA9IFRSVUUpIOKJpSA0IHdlZWtzCkBkZWNpc2lvbjogTGl2ZSBhdHRlbnVhdGVkIGhlcGF0aXRpcyBBIHZpcnVzIChIQVYpLCAxIGRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJObyBsaXZlIHZhY2NpbmUgd2FzIGFkbWluaXN0ZXJlZCBpbiB0aGUgbGFzdCA0IHdlZWtzIjoKICBFbGVtZW50cy4iTm8gbGl2ZSB2YWNjaW5lIHdhcyBhZG1pbmlzdGVyZWQgaW4gdGhlIGxhc3QgNCB3ZWVrcyIK"/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
</Library>