{
  "resourceType" : "Library",
  "id" : "IMMZD2DTSeasonalinfluenzaElements",
  "meta" : {
    "profile" : ["http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary",
    "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"]
  },
  "text" : {
    "status" : "extensions",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTSeasonalinfluenzaElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTSeasonalinfluenzaElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD2DTSeasonalinfluenzaElements.html\">IMMZD2DTSeasonalinfluenzaElements</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.5.0/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-09-19 13:06:04+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines context-independent elements for Seasonal influenza used throughout the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-WHOConcepts.html\">WHOConcepts</a></li>\n                  \n                    <li><a href=\"Library-WHOCommon.html\">WHOCommon</a></li>\n                  \n                    <li><a href=\"Library-WHOElements.html\">WHOElements</a></li>\n                  \n                    <li><a href=\"Library-IMMZCommon.html\">IMMZCommon</a></li>\n                  \n                    <li><a href=\"Library-IMMZConcepts.html\">IMMZConcepts</a></li>\n                  \n                    <li><a href=\"Library-IMMZElements.html\">IMMZElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Seasonal influenza Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Seasonal influenza Primary Series Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Number of Seasonal influenza Primary Series Doses Administered</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Date of Latest Seasonal influenza Dose</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>No seasonal influenza primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>One seasonal influenza primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Two seasonal influenza primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is less than 6 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is more than or equal to 6 months</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is less than 9 years</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is more than or equal to 9 years</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest seasonal influenza dose was administered less than 4 weeks ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest seasonal influenza dose was administered more than 4 weeks ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest seasonal influenza dose was administered less than 1 year ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest seasonal influenza dose was administered more than 1 year ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n  * Library: IMMZD2DTSeasonalinfluenzaElements\n  */\nlibrary IMMZD2DTSeasonalinfluenzaElements\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude WHOConcepts\ninclude WHOCommon called WC\ninclude WHOElements called WE\n\ninclude IMMZCommon called Common\ninclude IMMZConcepts called Concepts\ninclude IMMZElements called Elements\n\ncontext Patient\n\n/*\n@internal: Seasonal influenza containing Doses Administered to Patient\n*/\ndefine &quot;Seasonal influenza Doses Administered to Patient&quot;:\n  Elements.&quot;Doses Administered to Patient&quot; I\n  where\n    I.vaccineCode in Concepts.&quot;Seasonal influenza vaccines&quot;\n\n/*\n@internal: Seasonal influenza containing Doses Administered to Patient that are in the Primary series\n*/\ndefine &quot;Seasonal influenza Primary Series Doses Administered to Patient&quot;:\n  &quot;Seasonal influenza Doses Administered to Patient&quot;.seriesPrimary()\n\n/*\n@internal: Number of Seasonal influenza Primary Series doses\n*/\ndefine &quot;Number of Seasonal influenza Primary Series Doses Administered&quot;:\n  Count(&quot;Seasonal influenza Primary Series Doses Administered to Patient&quot;)\n\n/*\n@internal: Date and time of last Seasonal influenza dose\n*/\ndefine &quot;Date of Latest Seasonal influenza Dose&quot;:\n  date from start of &quot;Seasonal influenza Doses Administered to Patient&quot;.mostRecent().occurrence.toInterval()\n\n/*\n@input: No seasonal influenza primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;No seasonal influenza primary series doses were administered&quot;:\n  &quot;Number of Seasonal influenza Primary Series Doses Administered&quot; = 0\n\n/*\n@input: One seasonal influenza primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;One seasonal influenza primary series doses were administered&quot;:\n  &quot;Number of Seasonal influenza Primary Series Doses Administered&quot; = 1\n\n/*\n@input: Two seasonal influenza primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;Two seasonal influenza primary series doses were administered&quot;:\n  &quot;Number of Seasonal influenza Primary Series Doses Administered&quot; = 2\n\n/*\n@input: Client's age is less than 6 months\n@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 6 months\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;Client's age is less than 6 months&quot;:\n  Elements.&quot;Current Patient Age In Months&quot; &lt; 6\n\n/*\n@input: Client's age is more than or equal to 6 months\n@pseudocode: Today's date − &quot;Date of birth&quot; ≥ 6 months\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;Client's age is more than or equal to 6 months&quot;:\n  Elements.&quot;Current Patient Age In Months&quot; &gt;= 6\n\n/*\n@input: Client's age is less than 9 years\n@pseudocode: Today's date − &quot;Date of birth&quot; &lt; 9 years\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;Client's age is less than 9 years&quot;:\n  Elements.&quot;Current Patient Age In Years&quot; &lt; 9\n\n/*\n@input: Client's age is more than or equal to 9 years\n@pseudocode: Today's date − &quot;Date of birth&quot; ≥ 9 years\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;Client's age is more than or equal to 9 years&quot;:\n  Elements.&quot;Current Patient Age In Years&quot; &gt;= 9\n\n/*\n@input: The latest seasonal influenza dose was administered less than 4 weeks ago\n@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot;) &lt; 4 weeks\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;The latest seasonal influenza dose was administered less than 4 weeks ago&quot;:\n  &quot;Date of Latest Seasonal influenza Dose&quot; is not null \n  and duration in weeks between &quot;Date of Latest Seasonal influenza Dose&quot; and Now() &lt; 4\n/*\n@input: The latest seasonal influenza dose was administered more than 4 weeks ago\n@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot;) ≥ 4 weeks\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;The latest seasonal influenza dose was administered more than 4 weeks ago&quot;:\n  not &quot;The latest seasonal influenza dose was administered less than 4 weeks ago&quot;\n\n/*\n@input: The latest seasonal influenza dose was administered less than 1 year ago\n@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot;) &lt; 1 year\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;The latest seasonal influenza dose was administered less than 1 year ago&quot;:\n  &quot;Date of Latest Seasonal influenza Dose&quot; is not null \n  and duration in years between &quot;Date of Latest Seasonal influenza Dose&quot; and Now() &lt; 1\n\n/*\n@input: The latest seasonal influenza dose was administered more than 1 year ago\n@pseudocode: Today's date − &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Seasonal influenza vaccines&quot;) ≥ 1 year\n@decision: Inactivated trivalent and quadrivalent vaccines, 2-dose schedule\n*/\ndefine &quot;The latest seasonal influenza dose was administered more than 1 year ago&quot;:\n  not &quot;The latest seasonal influenza dose was administered less than 1 year ago&quot;\n\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (48412 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"
  },
  "extension" : [{
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability",
    "valueCode" : "computable"
  }],
  "url" : "http://smart.who.int/immunizations/Library/IMMZD2DTSeasonalinfluenzaElements",
  "version" : "0.2.0",
  "name" : "IMMZD2DTSeasonalinfluenzaElements",
  "title" : "IMMZD2DTSeasonalinfluenzaElements",
  "status" : "draft",
  "experimental" : false,
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2025-09-19T13:06:04+00:00",
  "publisher" : "WHO",
  "contact" : [{
    "name" : "WHO",
    "telecom" : [{
      "system" : "url",
      "value" : "http://who.int"
    }]
  }],
  "description" : "This library defines context-independent elements for Seasonal influenza used throughout the Immunization CPG",
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "Library WHOConcepts",
    "resource" : "http://smart.who.int/immunizations/Library/WHOConcepts"
  },
  {
    "type" : "depends-on",
    "display" : "Library WC",
    "resource" : "http://smart.who.int/immunizations/Library/WHOCommon"
  },
  {
    "type" : "depends-on",
    "display" : "Library WE",
    "resource" : "http://smart.who.int/immunizations/Library/WHOElements"
  },
  {
    "type" : "depends-on",
    "display" : "Library Common",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZCommon"
  },
  {
    "type" : "depends-on",
    "display" : "Library Concepts",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZConcepts"
  },
  {
    "type" : "depends-on",
    "display" : "Library Elements",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZElements"
  }],
  "parameter" : [{
    "name" : "Patient",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Patient"
  },
  {
    "name" : "Seasonal influenza Doses Administered to Patient",
    "use" : "out",
    "min" : 0,
    "max" : "*",
    "type" : "Immunization"
  },
  {
    "name" : "Seasonal influenza Primary Series Doses Administered to Patient",
    "use" : "out",
    "min" : 0,
    "max" : "*",
    "type" : "Immunization"
  },
  {
    "name" : "Number of Seasonal influenza Primary Series Doses Administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "integer"
  },
  {
    "name" : "Date of Latest Seasonal influenza Dose",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "date"
  },
  {
    "name" : "No seasonal influenza primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "One seasonal influenza primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Two seasonal influenza primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is less than 6 months",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is more than or equal to 6 months",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is less than 9 years",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is more than or equal to 9 years",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest seasonal influenza dose was administered less than 4 weeks ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest seasonal influenza dose was administered more than 4 weeks ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest seasonal influenza dose was administered less than 1 year ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest seasonal influenza dose was administered more than 1 year ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : "Ci8qCiAgKiBMaWJyYXJ5OiBJTU1aRDJEVFNlYXNvbmFsaW5mbHVlbnphRWxlbWVudHMKICAqLwpsaWJyYXJ5IElNTVpEMkRUU2Vhc29uYWxpbmZsdWVuemFFbGVtZW50cwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgV0hPQ29uY2VwdHMKaW5jbHVkZSBXSE9Db21tb24gY2FsbGVkIFdDCmluY2x1ZGUgV0hPRWxlbWVudHMgY2FsbGVkIFdFCgppbmNsdWRlIElNTVpDb21tb24gY2FsbGVkIENvbW1vbgppbmNsdWRlIElNTVpDb25jZXB0cyBjYWxsZWQgQ29uY2VwdHMKaW5jbHVkZSBJTU1aRWxlbWVudHMgY2FsbGVkIEVsZW1lbnRzCgpjb250ZXh0IFBhdGllbnQKCi8qCkBpbnRlcm5hbDogU2Vhc29uYWwgaW5mbHVlbnphIGNvbnRhaW5pbmcgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQKKi8KZGVmaW5lICJTZWFzb25hbCBpbmZsdWVuemEgRG9zZXMgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQiOgogIEVsZW1lbnRzLiJEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIgSQogIHdoZXJlCiAgICBJLnZhY2NpbmVDb2RlIGluIENvbmNlcHRzLiJTZWFzb25hbCBpbmZsdWVuemEgdmFjY2luZXMiCgovKgpAaW50ZXJuYWw6IFNlYXNvbmFsIGluZmx1ZW56YSBjb250YWluaW5nIERvc2VzIEFkbWluaXN0ZXJlZCB0byBQYXRpZW50IHRoYXQgYXJlIGluIHRoZSBQcmltYXJ5IHNlcmllcwoqLwpkZWZpbmUgIlNlYXNvbmFsIGluZmx1ZW56YSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCI6CiAgIlNlYXNvbmFsIGluZmx1ZW56YSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIuc2VyaWVzUHJpbWFyeSgpCgovKgpAaW50ZXJuYWw6IE51bWJlciBvZiBTZWFzb25hbCBpbmZsdWVuemEgUHJpbWFyeSBTZXJpZXMgZG9zZXMKKi8KZGVmaW5lICJOdW1iZXIgb2YgU2Vhc29uYWwgaW5mbHVlbnphIFByaW1hcnkgU2VyaWVzIERvc2VzIEFkbWluaXN0ZXJlZCI6CiAgQ291bnQoIlNlYXNvbmFsIGluZmx1ZW56YSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIpCgovKgpAaW50ZXJuYWw6IERhdGUgYW5kIHRpbWUgb2YgbGFzdCBTZWFzb25hbCBpbmZsdWVuemEgZG9zZQoqLwpkZWZpbmUgIkRhdGUgb2YgTGF0ZXN0IFNlYXNvbmFsIGluZmx1ZW56YSBEb3NlIjoKICBkYXRlIGZyb20gc3RhcnQgb2YgIlNlYXNvbmFsIGluZmx1ZW56YSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIubW9zdFJlY2VudCgpLm9jY3VycmVuY2UudG9JbnRlcnZhbCgpCgovKgpAaW5wdXQ6IE5vIHNlYXNvbmFsIGluZmx1ZW56YSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJTZWFzb25hbCBpbmZsdWVuemEgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMApAZGVjaXNpb246IEluYWN0aXZhdGVkIHRyaXZhbGVudCBhbmQgcXVhZHJpdmFsZW50IHZhY2NpbmVzLCAyLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJObyBzZWFzb25hbCBpbmZsdWVuemEgcHJpbWFyeSBzZXJpZXMgZG9zZXMgd2VyZSBhZG1pbmlzdGVyZWQiOgogICJOdW1iZXIgb2YgU2Vhc29uYWwgaW5mbHVlbnphIFByaW1hcnkgU2VyaWVzIERvc2VzIEFkbWluaXN0ZXJlZCIgPSAwCgovKgpAaW5wdXQ6IE9uZSBzZWFzb25hbCBpbmZsdWVuemEgcHJpbWFyeSBzZXJpZXMgZG9zZXMgd2VyZSBhZG1pbmlzdGVyZWQKQHBzZXVkb2NvZGU6IENvdW50IG9mIHZhY2NpbmVzIGFkbWluaXN0ZXJlZCAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiU2Vhc29uYWwgaW5mbHVlbnphIHZhY2NpbmVzIiBhbmQgIlR5cGUgb2YgZG9zZSIgPSAiUHJpbWFyeSBzZXJpZXMiKSA9IDEKQGRlY2lzaW9uOiBJbmFjdGl2YXRlZCB0cml2YWxlbnQgYW5kIHF1YWRyaXZhbGVudCB2YWNjaW5lcywgMi1kb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiT25lIHNlYXNvbmFsIGluZmx1ZW56YSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZCI6CiAgIk51bWJlciBvZiBTZWFzb25hbCBpbmZsdWVuemEgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDEKCi8qCkBpbnB1dDogVHdvIHNlYXNvbmFsIGluZmx1ZW56YSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJTZWFzb25hbCBpbmZsdWVuemEgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMgpAZGVjaXNpb246IEluYWN0aXZhdGVkIHRyaXZhbGVudCBhbmQgcXVhZHJpdmFsZW50IHZhY2NpbmVzLCAyLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJUd28gc2Vhc29uYWwgaW5mbHVlbnphIHByaW1hcnkgc2VyaWVzIGRvc2VzIHdlcmUgYWRtaW5pc3RlcmVkIjoKICAiTnVtYmVyIG9mIFNlYXNvbmFsIGluZmx1ZW56YSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQiID0gMgoKLyoKQGlucHV0OiBDbGllbnQncyBhZ2UgaXMgbGVzcyB0aGFuIDYgbW9udGhzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiA8IDYgbW9udGhzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgdHJpdmFsZW50IGFuZCBxdWFkcml2YWxlbnQgdmFjY2luZXMsIDItZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIkNsaWVudCdzIGFnZSBpcyBsZXNzIHRoYW4gNiBtb250aHMiOgogIEVsZW1lbnRzLiJDdXJyZW50IFBhdGllbnQgQWdlIEluIE1vbnRocyIgPCA2CgovKgpAaW5wdXQ6IENsaWVudCdzIGFnZSBpcyBtb3JlIHRoYW4gb3IgZXF1YWwgdG8gNiBtb250aHMKQHBzZXVkb2NvZGU6IFRvZGF5J3MgZGF0ZSDiiJIgIkRhdGUgb2YgYmlydGgiIOKJpSA2IG1vbnRocwpAZGVjaXNpb246IEluYWN0aXZhdGVkIHRyaXZhbGVudCBhbmQgcXVhZHJpdmFsZW50IHZhY2NpbmVzLCAyLWRvc2Ugc2NoZWR1bGUKKi8KZGVmaW5lICJDbGllbnQncyBhZ2UgaXMgbW9yZSB0aGFuIG9yIGVxdWFsIHRvIDYgbW9udGhzIjoKICBFbGVtZW50cy4iQ3VycmVudCBQYXRpZW50IEFnZSBJbiBNb250aHMiID49IDYKCi8qCkBpbnB1dDogQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiA5IHllYXJzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiA8IDkgeWVhcnMKQGRlY2lzaW9uOiBJbmFjdGl2YXRlZCB0cml2YWxlbnQgYW5kIHF1YWRyaXZhbGVudCB2YWNjaW5lcywgMi1kb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiA5IHllYXJzIjoKICBFbGVtZW50cy4iQ3VycmVudCBQYXRpZW50IEFnZSBJbiBZZWFycyIgPCA5CgovKgpAaW5wdXQ6IENsaWVudCdzIGFnZSBpcyBtb3JlIHRoYW4gb3IgZXF1YWwgdG8gOSB5ZWFycwpAcHNldWRvY29kZTogVG9kYXkncyBkYXRlIOKIkiAiRGF0ZSBvZiBiaXJ0aCIg4omlIDkgeWVhcnMKQGRlY2lzaW9uOiBJbmFjdGl2YXRlZCB0cml2YWxlbnQgYW5kIHF1YWRyaXZhbGVudCB2YWNjaW5lcywgMi1kb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiQ2xpZW50J3MgYWdlIGlzIG1vcmUgdGhhbiBvciBlcXVhbCB0byA5IHllYXJzIjoKICBFbGVtZW50cy4iQ3VycmVudCBQYXRpZW50IEFnZSBJbiBZZWFycyIgPj0gOQoKLyoKQGlucHV0OiBUaGUgbGF0ZXN0IHNlYXNvbmFsIGluZmx1ZW56YSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbGVzcyB0aGFuIDQgd2Vla3MgYWdvCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiU2Vhc29uYWwgaW5mbHVlbnphIHZhY2NpbmVzIikgPCA0IHdlZWtzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgdHJpdmFsZW50IGFuZCBxdWFkcml2YWxlbnQgdmFjY2luZXMsIDItZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIlRoZSBsYXRlc3Qgc2Vhc29uYWwgaW5mbHVlbnphIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gNCB3ZWVrcyBhZ28iOgogICJEYXRlIG9mIExhdGVzdCBTZWFzb25hbCBpbmZsdWVuemEgRG9zZSIgaXMgbm90IG51bGwgCiAgYW5kIGR1cmF0aW9uIGluIHdlZWtzIGJldHdlZW4gIkRhdGUgb2YgTGF0ZXN0IFNlYXNvbmFsIGluZmx1ZW56YSBEb3NlIiBhbmQgTm93KCkgPCA0Ci8qCkBpbnB1dDogVGhlIGxhdGVzdCBzZWFzb25hbCBpbmZsdWVuemEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIG1vcmUgdGhhbiA0IHdlZWtzIGFnbwpAcHNldWRvY29kZTogVG9kYXkncyBkYXRlIOKIkiAiRGF0ZSBhbmQgdGltZSBvZiB2YWNjaW5hdGlvbiIgKHdoZXJlICJWYWNjaW5lIHR5cGUiID0gIlNlYXNvbmFsIGluZmx1ZW56YSB2YWNjaW5lcyIpIOKJpSA0IHdlZWtzCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgdHJpdmFsZW50IGFuZCBxdWFkcml2YWxlbnQgdmFjY2luZXMsIDItZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIlRoZSBsYXRlc3Qgc2Vhc29uYWwgaW5mbHVlbnphIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBtb3JlIHRoYW4gNCB3ZWVrcyBhZ28iOgogIG5vdCAiVGhlIGxhdGVzdCBzZWFzb25hbCBpbmZsdWVuemEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIGxlc3MgdGhhbiA0IHdlZWtzIGFnbyIKCi8qCkBpbnB1dDogVGhlIGxhdGVzdCBzZWFzb25hbCBpbmZsdWVuemEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIGxlc3MgdGhhbiAxIHllYXIgYWdvCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiU2Vhc29uYWwgaW5mbHVlbnphIHZhY2NpbmVzIikgPCAxIHllYXIKQGRlY2lzaW9uOiBJbmFjdGl2YXRlZCB0cml2YWxlbnQgYW5kIHF1YWRyaXZhbGVudCB2YWNjaW5lcywgMi1kb3NlIHNjaGVkdWxlCiovCmRlZmluZSAiVGhlIGxhdGVzdCBzZWFzb25hbCBpbmZsdWVuemEgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIGxlc3MgdGhhbiAxIHllYXIgYWdvIjoKICAiRGF0ZSBvZiBMYXRlc3QgU2Vhc29uYWwgaW5mbHVlbnphIERvc2UiIGlzIG5vdCBudWxsIAogIGFuZCBkdXJhdGlvbiBpbiB5ZWFycyBiZXR3ZWVuICJEYXRlIG9mIExhdGVzdCBTZWFzb25hbCBpbmZsdWVuemEgRG9zZSIgYW5kIE5vdygpIDwgMQoKLyoKQGlucHV0OiBUaGUgbGF0ZXN0IHNlYXNvbmFsIGluZmx1ZW56YSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbW9yZSB0aGFuIDEgeWVhciBhZ28KQHBzZXVkb2NvZGU6IFRvZGF5J3MgZGF0ZSDiiJIgIkRhdGUgYW5kIHRpbWUgb2YgdmFjY2luYXRpb24iICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJTZWFzb25hbCBpbmZsdWVuemEgdmFjY2luZXMiKSDiiaUgMSB5ZWFyCkBkZWNpc2lvbjogSW5hY3RpdmF0ZWQgdHJpdmFsZW50IGFuZCBxdWFkcml2YWxlbnQgdmFjY2luZXMsIDItZG9zZSBzY2hlZHVsZQoqLwpkZWZpbmUgIlRoZSBsYXRlc3Qgc2Vhc29uYWwgaW5mbHVlbnphIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBtb3JlIHRoYW4gMSB5ZWFyIGFnbyI6CiAgbm90ICJUaGUgbGF0ZXN0IHNlYXNvbmFsIGluZmx1ZW56YSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbGVzcyB0aGFuIDEgeWVhciBhZ28iCgo="
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  }]
}