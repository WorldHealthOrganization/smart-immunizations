@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://smart.who.int/immunizations/Library/IMMZEncounterElements> a fhir:Library ;
  fhir:nodeRole fhir:treeRoot ;
  fhir:id [ fhir:v "IMMZEncounterElements"] ; # 
  fhir:meta [
     fhir:profile ( [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library>
     ] [
       fhir:v "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"^^xsd:anyURI ;
       fhir:link <http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module>
     ] )
  ] ; # 
  fhir:text [
     fhir:status [ fhir:v "extensions" ] ;
     fhir:div "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZEncounterElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZEncounterElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZEncounterElements.html\">IMMZEncounterElements</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.5.0/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-09-19 13:06:04+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines encounter-based elements used throughout the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-WHOConcepts.html\">WHOConcepts</a></li>\n                  \n                    <li><a href=\"Library-WHOCommon.html\">WHOCommon</a></li>\n                  \n                    <li><a href=\"Library-WHOEncounterElements.html\">WHOEncounterElements</a></li>\n                  \n                    <li><a href=\"Library-IMMZConcepts.html\">IMMZConcepts</a></li>\n                  \n                    <li><a href=\"Library-IMMZCommon.html\">IMMZCommon</a></li>\n                  \n                    <li><a href=\"Library-IMMZElements.html\">IMMZElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>EncounterId</th><th>string</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Draft Medication Request for Patient</th><th>MedicationRequest</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Live Attenuated Vaccines</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Date of Latest Live Attenuated Vaccine</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Current Patient Age In Years</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Current Patient Age In Months</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Current Patient Age In Weeks</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Current Patient Age In Days</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>No live vaccine was administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Live vaccine was administered in the last 4 weeks</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>No live vaccine was administered in the last 4 weeks</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Currently pregnant Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Currently pregnant Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is pregnant</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI History of anaphylactic reactions Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI History of anaphylactic reactions Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has history of anaphylactic reactions</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Severe allergic reactions Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Severe allergic reactions Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has history of severe allergic reactions</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Severely immunocompromised Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Severely immunocompromised Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is severely immunocompromised</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Severely immunosuppressed Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Severely immunosuppressed Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is severely immunosuppressed</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Symptomatic HIV infection Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Symptomatic HIV infection Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has a symptomatic HIV infection</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Immunodeficiency syndromes Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Immunodeficiency syndromes Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has immunodeficiency syndromes</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Exposed to immunosuppressive treatment Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Exposed to immunosuppressive treatment Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is exposed to immunosuppressive treatment</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Severe acute illness Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Severe acute illness Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client currently has a severe acute illness</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Prior history of intussusception Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Prior history of intussusception Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has prior history of intussusception</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Altered immunocompetence Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Altered immunocompetence Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has altered immunocompetence</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Spina bifida Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Spina bifida Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has spina bifida</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Bladder exstrophy Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Bladder exstrophy Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has bladder exstrophy</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Immunocompromised Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client is immunocompromised</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Immunocompromised Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Immunocompromised Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is immunocompromised</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Planning to get pregnant in the next month Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Planning to get pregnant in the next month Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is planning to get pregnant in next month</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Receiving blood products Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Receiving blood products Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is receiving blood products</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI TB disease Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI TB disease Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has TB disease</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Breastfeeding Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Breastfeeding Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is lactating</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Acute gastroenteritis Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Acute gastroenteritis Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has acute gastroenteritis</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Moderate to severe fever Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Moderate to severe fever Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has moderate to severe fever</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Hypersensitivity to vaccine components Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Hypersensitivity to vaccine components Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has hypersensitivity to any component of the vaccine</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Taking antibiotics Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Taking antibiotics Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client is currently taking antibiotics</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>CI Chronic gastrointestinal disease Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>CI Chronic gastrointestinal disease Condition</th><th>Condition</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>The client has chronic gastrointestinal disease</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's HIV status is positive</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's HIV status is negative or unknown</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is currently receiving antiretroviral therapy</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is currently not receiving antiretroviral therapy</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Immunologically stable Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client is immunologically stable</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not immunologically stable</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>TB infection test result Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client's TB infection test result is negative</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's TB infection test result is positive</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's TB infection test result is unknown (test not done or no result yet)</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Clinically well Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client is not clinically well</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is clinically well</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not immunocompromised</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Birth weight in grams Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Birth weight in grams Value</th><th>Quantity</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Birth weight in grams</th><th>decimal</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's weight at birth was over 2000 g</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's weight at birth was below 2000 g</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Preterm birth Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client was a premature infant at birth</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client was not a premature infant at birth</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Completed the primary vaccination series Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>At high risk for pneumococcal infection Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client is at high risk for pneumococcal infection</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client is not at high risk for pneumococcal infection</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Date when primary vaccination series was completed Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Completed the booster series Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library IMMZEncounterElements\n\nusing FHIR version '4.0.1'\n\ninclude FHIRHelpers version '4.0.1'\n\ninclude WHOConcepts\ninclude WHOCommon called WC\ninclude WHOEncounterElements called WE\n\ninclude IMMZConcepts called Concepts\ninclude IMMZCommon called Common\ninclude IMMZElements called Elements\n\nparameter Today Date default Today()\nparameter EncounterId String\n\ncontext Patient\n\n/**\n * @dataElement All Doses Administered to Patient\n */\ndefine \"Doses Administered to Patient\":\n  Elements.\"Doses Administered to Patient\" I\n    where I.occurrence.toInterval() same day or before Today\n\n/*\n@dataElement: Draft Medication Request for Patient\n*/\ndefine \"Draft Medication Request for Patient\":\n  Elements.\"Draft Medication Request for Patient\" MR\n    where MR.encounter.references(EncounterId) \n      or MR.authoredOn.toInterval() same day or before Today\n  	sort by date from (authoredOn as FHIR.dateTime) desc\n\n/*\n@dataElement Live attenuated vaccines\n*/\ndefine \"Live Attenuated Vaccines\":\n  Elements.\"Live Attenuated Vaccines\" I\n    where I.occurrence.toInterval() same day or before Today\n\n/*\n@dataElement Date and time of last live attenuated vaccine\n*/\ndefine \"Date of Latest Live Attenuated Vaccine\":\n  date from start of \"Live Attenuated Vaccines\".mostRecent().occurrence.toInterval()\n  \n/** \n * @dataElement Patient age in years\n */\ndefine \"Current Patient Age In Years\":\n  AgeInYearsAt(Today)\n\n/** \n * @dataElement Patient age in months\n */\ndefine \"Current Patient Age In Months\":\n  AgeInMonthsAt(Today)\n\n/** \n * @dataElement Patient age in weeks\n */\ndefine \"Current Patient Age In Weeks\":\n  AgeInWeeksAt(Today)\n\n/** \n * @dataElement Patient age in days\n */\ndefine \"Current Patient Age In Days\":\n  AgeInDaysAt(Today)\n\n/*\n@input: No live vaccine was administered\n@pseudocode: Today's date − latest \"Date and time of vaccination\" (where \"Live vaccine\" = TRUE) IS NULL\n*/\ndefine \"No live vaccine was administered\":\n  not exists(\"Live Attenuated Vaccines\")\n\n/*\n@input: Live vaccine was administered in the last 4 weeks\n@pseudocode: Today's date − latest \"Date and time of vaccination\" (where \"Live vaccine\" = TRUE) &lt; 4 weeks\n*/\ndefine \"Live vaccine was administered in the last 4 weeks\":\n	\"Date of Latest Live Attenuated Vaccine\" is not null \n    and duration in weeks between \"Date of Latest Live Attenuated Vaccine\" and Today &lt; 4\n\n/*\n@input: No live vaccine was administered in the last 4 weeks\n@pseudocode: Today's date − latest \"Date and time of vaccination\" (where \"Live vaccine\" = TRUE) ≥ 4 weeks\n*/\ndefine \"No live vaccine was administered in the last 4 weeks\":\n  not(\"Live vaccine was administered in the last 4 weeks\")\n\n/*\n@input: The client is pregnant\n@pseudocode: \"Potential contraindications\" = \"Currently pregnant\"\n*/\ndefine \"The client is pregnant\":\n  exists \"CI Currently pregnant Observation\"\n  or exists \"CI Currently pregnant Condition\"\n  or exists WE.\"Pregnant Observation\"\n\n/*\n@internal: Observation for currently pregnant\n*/\ndefine \"CI Currently pregnant Observation\":\n  Elements.\"CI Currently pregnant Observation\" O\n    where O.encounter.references(EncounterId)\n      or O.effective.toInterval() starts same day or after Today - 9 months\n\n/*\n@internal: Condition for currently pregnant\n*/\ndefine \"CI Currently pregnant Condition\":\n  Elements.\"CI Currently pregnant Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has history of anaphylactic reactions\n@pseudocode: \"Potential contraindications\" = \"History of anaphylactic reactions\"\n*/\ndefine \"The client has history of anaphylactic reactions\":\n  exists \"CI History of anaphylactic reactions Observation\"\n    or exists \"CI History of anaphylactic reactions Condition\"\n    \n/*\n@internal: Observation for History of anaphylactic reactions\n*/\ndefine \"CI History of anaphylactic reactions Observation\":\n  Elements.\"CI History of anaphylactic reactions Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for History of anaphylactic reactions\n*/\ndefine \"CI History of anaphylactic reactions Condition\":\n  Elements.\"CI History of anaphylactic reactions Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has history of severe allergic reactions\n@pseudocode: \"Potential contraindications\" = \"Severe allergic reactions\"\n*/\ndefine \"The client has history of severe allergic reactions\":\n  exists \"CI Severe allergic reactions Observation\"\n    or exists \"CI Severe allergic reactions Condition\"\n    \n/*\n@internal: Observation for Severe allergic reactions\n*/\ndefine \"CI Severe allergic reactions Observation\":\n  Elements.\"CI Severe allergic reactions Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Severe allergic reactions\n*/\ndefine \"CI Severe allergic reactions Condition\":\n  Elements.\"CI Severe allergic reactions Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is severely immunocompromised\n@pseudocode: \"Potential contraindications\" = \"Severely immunocompromised\"\n*/\ndefine \"The client is severely immunocompromised\":\n  exists \"CI Severely immunocompromised Observation\"\n    or exists \"CI Severely immunocompromised Condition\"\n    \n/*\n@internal: Observation for Severely immunocompromised\n*/\ndefine \"CI Severely immunocompromised Observation\":\n  Elements.\"CI Severely immunocompromised Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Severely immunocompromised\n*/\ndefine \"CI Severely immunocompromised Condition\":\n  Elements.\"CI Severely immunocompromised Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is severely immunosuppressed\n@pseudocode: \"Potential contraindications\" = \"Severely immunosuppressed\"\n*/\ndefine \"The client is severely immunosuppressed\":\n  exists \"CI Severely immunosuppressed Observation\"\n    or exists \"CI Severely immunosuppressed Condition\"\n    \n/*\n@internal: Observation for Severely immunosuppressed\n*/\ndefine \"CI Severely immunosuppressed Observation\":\n  Elements.\"CI Severely immunosuppressed Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Severely immunosuppressed\n*/\ndefine \"CI Severely immunosuppressed Condition\":\n  Elements.\"CI Severely immunosuppressed Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has a symptomatic HIV infection\n@pseudocode: \"Potential contraindications\" = \"Symptomatic HIV infection\"\n*/\ndefine \"The client has a symptomatic HIV infection\":\n  exists \"CI Symptomatic HIV infection Observation\"\n    or exists \"CI Symptomatic HIV infection Condition\"\n    \n/*\n@internal: Observation for Symptomatic HIV infection\n*/\ndefine \"CI Symptomatic HIV infection Observation\":\n  Elements.\"CI Symptomatic HIV infection Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Symptomatic HIV infection\n*/\ndefine \"CI Symptomatic HIV infection Condition\":\n  Elements.\"CI Symptomatic HIV infection Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has immunodeficiency syndromes\n@pseudocode: \"Potential contraindications\" = \"Immunodeficiency syndromes\"\n*/\ndefine \"The client has immunodeficiency syndromes\":\n  exists \"CI Immunodeficiency syndromes Observation\"\n    or exists \"CI Immunodeficiency syndromes Condition\"\n    \n/*\n@internal: Observation for Immunodeficiency syndromes\n*/\ndefine \"CI Immunodeficiency syndromes Observation\":\n  Elements.\"CI Immunodeficiency syndromes Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Immunodeficiency syndromes\n*/\ndefine \"CI Immunodeficiency syndromes Condition\":\n  Elements.\"CI Immunodeficiency syndromes Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is exposed to immunosuppressive treatment\n@pseudocode: \"Potential contraindications\" = \"Exposed to immunosuppressive treatment\"\n*/\ndefine \"The client is exposed to immunosuppressive treatment\":\n  exists \"CI Exposed to immunosuppressive treatment Observation\"\n    or exists \"CI Exposed to immunosuppressive treatment Condition\"\n    \n/*\n@internal: Observation for Exposed to immunosuppressive treatment\n*/\ndefine \"CI Exposed to immunosuppressive treatment Observation\":\n  Elements.\"CI Exposed to immunosuppressive treatment Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Exposed to immunosuppressive treatment\n*/\ndefine \"CI Exposed to immunosuppressive treatment Condition\":\n  Elements.\"CI Exposed to immunosuppressive treatment Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client currently has a severe acute illness\n@pseudocode: \"Potential contraindications\" = \"Severe acute illness\"\n*/\ndefine \"The client currently has a severe acute illness\":\n  exists \"CI Severe acute illness Observation\"\n    or exists \"CI Severe acute illness Condition\"\n    \n/*\n@internal: Observation for Severe acute illness\n*/\ndefine \"CI Severe acute illness Observation\":\n  Elements.\"CI Severe acute illness Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Severe acute illness\n*/\ndefine \"CI Severe acute illness Condition\":\n  Elements.\"CI Severe acute illness Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has prior history of intussusception\n@pseudocode: \"Potential contraindications\" = \"Prior history of intussusception\"\n*/\ndefine \"The client has prior history of intussusception\":\n  exists \"CI Prior history of intussusception Observation\"\n    or exists \"CI Prior history of intussusception Condition\"\n    \n/*\n@internal: Observation for Prior history of intussusception\n*/\ndefine \"CI Prior history of intussusception Observation\":\n  Elements.\"CI Prior history of intussusception Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Prior history of intussusception\n*/\ndefine \"CI Prior history of intussusception Condition\":\n  Elements.\"CI Prior history of intussusception Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has altered immunocompetence\n@pseudocode: \"Potential contraindications\" = \"Altered immunocompetence\"\n*/\ndefine \"The client has altered immunocompetence\":\n  exists \"CI Altered immunocompetence Observation\"\n    or exists \"CI Altered immunocompetence Condition\"\n    \n/*\n@internal: Observation for Altered immunocompetence\n*/\ndefine \"CI Altered immunocompetence Observation\":\n  Elements.\"CI Altered immunocompetence Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Altered immunocompetence\n*/\ndefine \"CI Altered immunocompetence Condition\":\n  Elements.\"CI Altered immunocompetence Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has spina bifida\n@pseudocode: \"Potential contraindications\" = \"Spina bifida\"\n*/\ndefine \"The client has spina bifida\":\n  exists \"CI Spina bifida Observation\"\n    or exists \"CI Spina bifida Condition\"\n    \n/*\n@internal: Observation for Spina bifida\n*/\ndefine \"CI Spina bifida Observation\":\n  Elements.\"CI Spina bifida Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Spina bifida\n*/\ndefine \"CI Spina bifida Condition\":\n  Elements.\"CI Spina bifida Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has bladder exstrophy\n@pseudocode: \"Potential contraindications\" = \"Bladder exstrophy\"\n*/\ndefine \"The client has bladder exstrophy\":\n  exists \"CI Bladder exstrophy Observation\"\n    or exists \"CI Bladder exstrophy Condition\"\n    \n/*\n@internal: Observation for Bladder exstrophy\n*/\ndefine \"CI Bladder exstrophy Observation\":\n  Elements.\"CI Bladder exstrophy Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Bladder exstrophy\n*/\ndefine \"CI Bladder exstrophy Condition\":\n  Elements.\"CI Bladder exstrophy Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is immunocompromised\n@pseudocode: \"Potential contraindications\" = \"Immunocompromised\"\n*/\ndefine \"The client is immunocompromised\":\n  \"Client is immunocompromised\"\n    or exists \"CI Immunocompromised Observation\"\n    or exists \"CI Immunocompromised Condition\"\n\n/*\n@internal: Observation for Immunocompromised\n*/\ndefine \"CI Immunocompromised Observation\":\n  Elements.\"CI Immunocompromised Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Immunocompromised\n*/\ndefine \"CI Immunocompromised Condition\":\n  Elements.\"CI Immunocompromised Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is planning to get pregnant in next month\n@pseudocode: \"Potential contraindications\" = \"Planning to get pregnant in the next month\"\n*/\ndefine \"The client is planning to get pregnant in next month\":\n  exists \"CI Planning to get pregnant in the next month Observation\"\n    or exists \"CI Planning to get pregnant in the next month Condition\"\n\n/*\n@internal: Observation for Planning to get pregnant in the next month\n*/\ndefine \"CI Planning to get pregnant in the next month Observation\":\n  Elements.\"CI Planning to get pregnant in the next month Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Planning to get pregnant in the next month\n*/\ndefine \"CI Planning to get pregnant in the next month Condition\":\n  Elements.\"CI Planning to get pregnant in the next month Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is receiving blood products\n@pseudocode: \"Potential contraindications\" = \"Receiving blood products\"\n*/\ndefine \"The client is receiving blood products\":\n  exists \"CI Receiving blood products Observation\"\n    or exists \"CI Receiving blood products Condition\"\n\n/*\n@internal: Observation for Receiving blood products\n*/\ndefine \"CI Receiving blood products Observation\":\n  Elements.\"CI Receiving blood products Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Receiving blood products\n*/\ndefine \"CI Receiving blood products Condition\":\n  Elements.\"CI Receiving blood products Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has TB disease\n@pseudocode: \"Potential contraindications\" = \"TB disease\"\n*/\ndefine \"The client has TB disease\":\n  exists \"CI TB disease Observation\"\n    or exists \"CI TB disease Condition\"\n\n/*\n@internal: Observation for TB disease\n*/\ndefine \"CI TB disease Observation\":\n  Elements.\"CI TB disease Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for TB disease\n*/\ndefine \"CI TB disease Condition\":\n  Elements.\"CI TB disease Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is lactating\n@pseudocode: \"Potential contraindications\" = \"Breastfeeding\"\n*/\ndefine \"The client is lactating\":\n  exists \"CI Breastfeeding Observation\"\n    or exists \"CI Breastfeeding Condition\"\n\n/*\n@internal: Observation for Breastfeeding\n*/\ndefine \"CI Breastfeeding Observation\":\n  Elements.\"CI Breastfeeding Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Breastfeeding\n*/\ndefine \"CI Breastfeeding Condition\":\n  Elements.\"CI Breastfeeding Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has acute gastroenteritis\n@pseudocode: \"Potential contraindications\" = \"Acute gastroenteritis\"\n*/\ndefine \"The client has acute gastroenteritis\":\n  exists \"CI Acute gastroenteritis Observation\"\n    or exists \"CI Acute gastroenteritis Condition\"\n\n/*\n@internal: Observation for Acute gastroenteritis\n*/\ndefine \"CI Acute gastroenteritis Observation\":\n  Elements.\"CI Acute gastroenteritis Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Acute gastroenteritis\n*/\ndefine \"CI Acute gastroenteritis Condition\":\n  Elements.\"CI Acute gastroenteritis Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has moderate to severe fever\n@pseudocode: \"Potential contraindications\" = \"Moderate to severe fever\"\n*/\ndefine \"The client has moderate to severe fever\":\n  exists \"CI Moderate to severe fever Observation\"\n    or exists \"CI Moderate to severe fever Condition\"\n\n/*\n@internal: Observation for Moderate to severe fever\n*/\ndefine \"CI Moderate to severe fever Observation\":\n  Elements.\"CI Moderate to severe fever Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Moderate to severe fever\n*/\ndefine \"CI Moderate to severe fever Condition\":\n  Elements.\"CI Moderate to severe fever Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has hypersensitivity to any component of the vaccine\n@pseudocode: \"Potential contraindications\" = \"Hypersensitivity to vaccine components\"\n*/\ndefine \"The client has hypersensitivity to any component of the vaccine\":\n  exists \"CI Hypersensitivity to vaccine components Observation\"\n    or exists \"CI Hypersensitivity to vaccine components Condition\"\n\n/*\n@internal: Observation for Hypersensitivity to vaccine components\n*/\ndefine \"CI Hypersensitivity to vaccine components Observation\":\n  Elements.\"CI Hypersensitivity to vaccine components Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Hypersensitivity to vaccine components\n*/\ndefine \"CI Hypersensitivity to vaccine components Condition\":\n  Elements.\"CI Hypersensitivity to vaccine components Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client is currently taking antibiotics\n@pseudocode: \"Potential contraindications\" = \"Taking antibiotics\"\n*/\ndefine \"The client is currently taking antibiotics\":\n  exists \"CI Taking antibiotics Observation\"\n    or exists \"CI Taking antibiotics Condition\"\n\n/*\n@internal: Observation for Taking antibiotics\n*/\ndefine \"CI Taking antibiotics Observation\":\n  Elements.\"CI Taking antibiotics Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Taking antibiotics\n*/\ndefine \"CI Taking antibiotics Condition\":\n  Elements.\"CI Taking antibiotics Condition\" C\n    where C.prevalenceInterval() includes Today\n\n/*\n@input: The client has chronic gastrointestinal disease\n@pseudocode: \"Potential contraindications\" = \"Chronic gastrointestinal disease\"\n*/\ndefine \"The client has chronic gastrointestinal disease\":\n  exists \"CI Chronic gastrointestinal disease Observation\"\n    or exists \"CI Chronic gastrointestinal disease Condition\"\n\n/*\n@internal: Observation for Chronic gastrointestinal disease\n*/\ndefine \"CI Chronic gastrointestinal disease Observation\":\n  Elements.\"CI Chronic gastrointestinal disease Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Condition for Chronic gastrointestinal disease\n*/\ndefine \"CI Chronic gastrointestinal disease Condition\":\n  Elements.\"CI Chronic gastrointestinal disease Condition\" C\n    where C.prevalenceInterval() includes Today\n\n\n\n/*\n@input: Client's HIV status is negative or unknown\n@pseudocode: \"HIV status\" ≠ \"HIV-positive\"\n*/\ndefine \"Client's HIV status is negative or unknown\":\n  not \"Client's HIV status is positive\"\n\n/*\n@input: Client's HIV status is positive\n@pseudocode: \"HIV status\" = \"HIV-positive\"\n*/\ndefine \"Client's HIV status is positive\":\n  exists( (Elements.\"HIV status Observation\".encounterOrOnBefore(EncounterId, Today)) O\n    where O.value ~ Concepts.\"HIV-positive\" )\n\n/*\n@input: Client is currently receiving antiretroviral therapy\n@pseudocode: \"Currently on ART\" = TRUE\n*/\ndefine \"Client is currently receiving antiretroviral therapy\":\n  Elements.\"Currently on ART Observation\".encounterOrOnBefore(EncounterId, Today).mostRecent().value = true\n\n/*\n@input: Client is currently not receiving antiretroviral therapy\n@pseudocode: \"Currently on ART\" = FALSE\n*/\ndefine \"Client is currently not receiving antiretroviral therapy\":\n  not \"Client is currently receiving antiretroviral therapy\"\n\n/*\n@internal: Immunologically stable Observation\n*/\ndefine \"Immunologically stable Observation\":\n  Elements.\"Immunologically stable Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client is immunologically stable\n@pseudocode: \"Immunologically stable\" = TRUE\n*/\ndefine \"Client is immunologically stable\":\n  First(\"Immunologically stable Observation\").value = true\n\n/*\n@input: Client is not immunologically stable\n@pseudocode: \"Immunologically stable\" = FALSE\n*/\ndefine \"Client is not immunologically stable\":\n  First(\"Immunologically stable Observation\").value = false\n\n/*\n@internal: Immunologically stable Observation\n*/\ndefine \"TB infection test result Observation\":\n  Elements.\"TB infection test result Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client's TB infection test result is negative\n@pseudocode: \"TB infection test result\" = \"Negative\"\n*/\ndefine \"Client's TB infection test result is negative\":\n  First( \"TB infection test result Observation\" ).value ~ Concepts.\"TB-Negative\"\n/*\n@input: Client's TB infection test result is unknown (test not done or no result yet)\n@pseudocode: \"TB infection test result\" IS NULL\n*/\ndefine \"Client's TB infection test result is unknown (test not done or no result yet)\":\n  not exists( \"TB infection test result Observation\" ) or (\n    not (\"Client's TB infection test result is negative\") and not (\"Client's TB infection test result is positive\")\n  )\n/*\n@input: Client's TB infection test result is positive\n@pseudocode: \"TB infection test result\" = \"Positive\"\n*/\ndefine \"Client's TB infection test result is positive\":\n  First( \"TB infection test result Observation\" ).value ~ Concepts.\"TB-Positive\"\n\n/*\n@internal: Clinically well Observation\n*/\ndefine \"Clinically well Observation\":\n  Elements.\"Clinically well Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client is not clinically well\n@pseudocode: \"Clinically well\" = FALSE\n*/\ndefine \"Client is not clinically well\":\n  First( \"Clinically well Observation\" ).value = false\n\n/*\n@input: Client is clinically well\n@pseudocode: \"Clinically well\" = TRUE\n*/\ndefine \"Client is clinically well\":\n  First( \"Clinically well Observation\" ).value = true \n\n/*\n@internal: Immunocompromised Observation\n*/\ndefine \"Immunocompromised Observation\":\n  ([Observation: Concepts.\"Immunocompromised\"] O\n    sort by end of effective.toInterval() desc).complete()\n\n/*\n@input: Client is immunocompromised\n@pseudocode: \"Immunocompromised\" = TRUE\n*/\ndefine \"Client is immunocompromised\":\n  exists( \"Immunocompromised Observation\" ) and\n  First( \"Immunocompromised Observation\" ).value = true \n\n/*\n@input: Client is not immunocompromised\n@pseudocode: \"Immunocompromised\" ≠ TRUE\n*/\ndefine \"Client is not immunocompromised\":\n  not \"Client is immunocompromised\"\n\n/*\n@internal: Birth weight in grams Observation\n*/\ndefine \"Birth weight in grams Observation\":\n  Elements.\"Birth weight in grams Observation\".encounterOrOnBefore(EncounterId, Today)\n\ndefine \"Birth weight in grams Value\":\n  First(\"Birth weight in grams Observation\").value as FHIR.Quantity\n\ndefine \"Birth weight in grams\":\n  \"Birth weight in grams Value\".value as FHIR.decimal\n\n/*\n@input: Client's weight at birth was over 2000 g\n@pseudocode: \"Birth weight in grams\"  ≥ 2000\n*/\ndefine \"Client's weight at birth was over 2000 g\":\n  \"Birth weight in grams\" &gt;= 2000\n\n/*\n@input: Client's weight at birth was below 2000 g\n@pseudocode: \"Birth weight in grams\" &lt; 2000\n*/\ndefine \"Client's weight at birth was below 2000 g\":\n  \"Birth weight in grams\" &lt; 2000\n\n/*\n@internal: Preterm birth Observation\n*/\ndefine \"Preterm birth Observation\":\n  Elements.\"Preterm birth Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client was not a premature infant at birth\n@pseudocode: \"Preterm birth\" ≠  TRUE\n*/\ndefine \"Client was not a premature infant at birth\":\n  not(\"Client was a premature infant at birth\")\n\n/*\n@input: Client was a premature infant at birth\n@pseudocode: \"Preterm birth\" =  TRUE\n*/\ndefine \"Client was a premature infant at birth\":\n  exists( \"Preterm birth Observation\" O where O.value = true )\n\n/*\n@internal: Completed the primary vaccination series Observation\n*/\ndefine \"Completed the primary vaccination series Observation\":\n  Elements.\"Completed the primary vaccination series Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: At high risk for pneumococcal infection Observation\n*/\ndefine \"At high risk for pneumococcal infection Observation\":\n  Elements.\"At high risk for pneumococcal infection Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client is at high risk for pneumococcal infection\n@pseudocode: \"At high risk for pneumococcal infection\" = TRUE\n*/\ndefine \"Client is at high risk for pneumococcal infection\":\n  exists( \"At high risk for pneumococcal infection Observation\" O where O.value = true )\n\n/*\n@input: Client is not at high risk for pneumococcal infection\n@pseudocode: \"At high risk for pneumococcal infection\" = FALSE\n*/\ndefine \"Client is not at high risk for pneumococcal infection\":\n  exists( \"At high risk for pneumococcal infection Observation\" O where O.value = false )\n\n/*\n@internal: Date when primary vaccination series was completed Observation\n*/\ndefine \"Date when primary vaccination series was completed Observation\":\n  Elements.\"Date when primary vaccination series was completed Observation\".encounterOrOnBefore(EncounterId, Today)\n\n/*\n@internal: Completed the booster series Observation\n*/\ndefine \"Completed the booster series Observation\":\n  Elements.\"Completed the booster series Observation\".encounterOrOnBefore(EncounterId, Today)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (358460 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"^^rdf:XMLLiteral
  ] ; # 
  fhir:extension ( [
     fhir:url [ fhir:v "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability"^^xsd:anyURI ] ;
     fhir:value [
       a fhir:code ;
       fhir:v "computable"
     ]
  ] ) ; # 
  fhir:url [ fhir:v "http://smart.who.int/immunizations/Library/IMMZEncounterElements"^^xsd:anyURI] ; # 
  fhir:version [ fhir:v "0.2.0"] ; # 
  fhir:name [ fhir:v "IMMZEncounterElements"] ; # 
  fhir:title [ fhir:v "IMMZEncounterElements"] ; # 
  fhir:status [ fhir:v "draft"] ; # 
  fhir:experimental [ fhir:v false] ; # 
  fhir:type [
     fhir:coding ( [
       fhir:system [ fhir:v "http://terminology.hl7.org/CodeSystem/library-type"^^xsd:anyURI ] ;
       fhir:code [ fhir:v "logic-library" ]
     ] )
  ] ; # 
  fhir:date [ fhir:v "2025-09-19T13:06:04+00:00"^^xsd:dateTime] ; # 
  fhir:publisher [ fhir:v "WHO"] ; # 
  fhir:contact ( [
     fhir:name [ fhir:v "WHO" ] ;
     fhir:telecom ( [
       fhir:system [ fhir:v "url" ] ;
       fhir:value [ fhir:v "http://who.int" ]
     ] )
  ] ) ; # 
  fhir:description [ fhir:v "This library defines encounter-based elements used throughout the Immunization CPG"] ; # 
  fhir:relatedArtifact ( [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library WHOConcepts" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/WHOConcepts"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/WHOConcepts>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library WC" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/WHOCommon"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/WHOCommon>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library WE" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/WHOEncounterElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/WHOEncounterElements>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Concepts" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZConcepts"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZConcepts>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Common" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZCommon"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZCommon>
     ]
  ] [
     fhir:type [ fhir:v "depends-on" ] ;
     fhir:display [ fhir:v "Library Elements" ] ;
     fhir:resource [
       fhir:v "http://smart.who.int/immunizations/Library/IMMZElements"^^xsd:anyURI ;
       fhir:link <http://smart.who.int/immunizations/Library/IMMZElements>
     ]
  ] ) ; # 
  fhir:parameter ( [
     fhir:name [ fhir:v "Today" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "EncounterId" ] ;
     fhir:use [ fhir:v "in" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "string" ]
  ] [
     fhir:name [ fhir:v "Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Patient" ]
  ] [
     fhir:name [ fhir:v "Doses Administered to Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Immunization" ]
  ] [
     fhir:name [ fhir:v "Draft Medication Request for Patient" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "MedicationRequest" ]
  ] [
     fhir:name [ fhir:v "Live Attenuated Vaccines" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Immunization" ]
  ] [
     fhir:name [ fhir:v "Date of Latest Live Attenuated Vaccine" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "date" ]
  ] [
     fhir:name [ fhir:v "Current Patient Age In Years" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "integer" ]
  ] [
     fhir:name [ fhir:v "Current Patient Age In Months" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "integer" ]
  ] [
     fhir:name [ fhir:v "Current Patient Age In Weeks" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "integer" ]
  ] [
     fhir:name [ fhir:v "Current Patient Age In Days" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "integer" ]
  ] [
     fhir:name [ fhir:v "No live vaccine was administered" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Live vaccine was administered in the last 4 weeks" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "No live vaccine was administered in the last 4 weeks" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Currently pregnant Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Currently pregnant Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is pregnant" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI History of anaphylactic reactions Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI History of anaphylactic reactions Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has history of anaphylactic reactions" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Severe allergic reactions Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Severe allergic reactions Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has history of severe allergic reactions" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Severely immunocompromised Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Severely immunocompromised Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is severely immunocompromised" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Severely immunosuppressed Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Severely immunosuppressed Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is severely immunosuppressed" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Symptomatic HIV infection Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Symptomatic HIV infection Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has a symptomatic HIV infection" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Immunodeficiency syndromes Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Immunodeficiency syndromes Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has immunodeficiency syndromes" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Exposed to immunosuppressive treatment Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Exposed to immunosuppressive treatment Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is exposed to immunosuppressive treatment" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Severe acute illness Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Severe acute illness Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client currently has a severe acute illness" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Prior history of intussusception Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Prior history of intussusception Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has prior history of intussusception" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Altered immunocompetence Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Altered immunocompetence Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has altered immunocompetence" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Spina bifida Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Spina bifida Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has spina bifida" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Bladder exstrophy Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Bladder exstrophy Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has bladder exstrophy" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Immunocompromised Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client is immunocompromised" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Immunocompromised Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Immunocompromised Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is immunocompromised" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Planning to get pregnant in the next month Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Planning to get pregnant in the next month Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is planning to get pregnant in next month" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Receiving blood products Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Receiving blood products Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is receiving blood products" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI TB disease Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI TB disease Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has TB disease" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Breastfeeding Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Breastfeeding Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is lactating" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Acute gastroenteritis Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Acute gastroenteritis Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has acute gastroenteritis" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Moderate to severe fever Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Moderate to severe fever Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has moderate to severe fever" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Hypersensitivity to vaccine components Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Hypersensitivity to vaccine components Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has hypersensitivity to any component of the vaccine" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Taking antibiotics Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Taking antibiotics Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client is currently taking antibiotics" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "CI Chronic gastrointestinal disease Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "CI Chronic gastrointestinal disease Condition" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Condition" ]
  ] [
     fhir:name [ fhir:v "The client has chronic gastrointestinal disease" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client's HIV status is positive" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client's HIV status is negative or unknown" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is currently receiving antiretroviral therapy" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is currently not receiving antiretroviral therapy" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Immunologically stable Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client is immunologically stable" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not immunologically stable" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "TB infection test result Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client's TB infection test result is negative" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client's TB infection test result is positive" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client's TB infection test result is unknown (test not done or no result yet)" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Clinically well Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client is not clinically well" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is clinically well" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not immunocompromised" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Birth weight in grams Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Birth weight in grams Value" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "Quantity" ]
  ] [
     fhir:name [ fhir:v "Birth weight in grams" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "decimal" ]
  ] [
     fhir:name [ fhir:v "Client's weight at birth was over 2000 g" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client's weight at birth was below 2000 g" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Preterm birth Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client was a premature infant at birth" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client was not a premature infant at birth" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Completed the primary vaccination series Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "At high risk for pneumococcal infection Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Client is at high risk for pneumococcal infection" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Client is not at high risk for pneumococcal infection" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "1" ] ;
     fhir:type [ fhir:v "boolean" ]
  ] [
     fhir:name [ fhir:v "Date when primary vaccination series was completed Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] [
     fhir:name [ fhir:v "Completed the booster series Observation" ] ;
     fhir:use [ fhir:v "out" ] ;
     fhir:min [ fhir:v 0 ] ;
     fhir:max [ fhir:v "*" ] ;
     fhir:type [ fhir:v "Observation" ]
  ] ) ; # 
  fhir:content ( [
     fhir:contentType [ fhir:v "text/cql" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] [
     fhir:contentType [ fhir:v "application/elm+xml" ] ;
     fhir:data [ fhir:v ""^^xsd:base64Binary ]
  ] ) . # 

# -------------------------------------------------------------------------------------

