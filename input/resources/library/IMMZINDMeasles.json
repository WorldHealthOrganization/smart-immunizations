{
  "resourceType": "Library",
  "id": "IMMZINDMeasles",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://smart.who.int/ig/smart-immunizations/Library/IMMZINDMeasles",
  "name": "IMMZINDMeasles",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library IMMZCom",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZCommon"
  }, {
    "type": "depends-on",
    "display": "Library IMMZc",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZConcepts"
  }, {
    "type": "depends-on",
    "display": "Library IMMZCon",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZConfig"
  }, {
    "type": "depends-on",
    "display": "Library IMMZIndCom",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZIndicatorCommon"
  }, {
    "type": "depends-on",
    "display": "Library IMMZvl",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZVaccineLibrary"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library Measles",
    "resource": "http://smart.who.int/ig/smart-immunizations/Library/IMMZD2DTMeasles"
  }, {
    "type": "depends-on",
    "display": "Code system Administrative Gender Codes",
    "resource": "http://hl7.org/fhir/administrative-gender"
  }, {
    "type": "depends-on",
    "display": "Code system ISO-8601-Derived Periods",
    "resource": "http://ohie.org/CodeSystem/iso-8601-derived-periods"
  }, {
    "type": "depends-on",
    "display": "Value set MCV Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.A1.DE9"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Initial Population 05",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Immunization"
  }, {
    "name": "Measure Population 05",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Immunization"
  }, {
    "name": "Initial Population 40",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Immunization"
  }, {
    "name": "Measure Population 40",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Immunization"
  }, {
    "name": "Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "use" ]
  }, {
    "type": "Immunization",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Immunization" ],
    "mustSupport": [ "status", "vaccineCode", "occurrence" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "LyoKICogTGlicmFyeTogSU1NWi5JTkQuTWVhc2xlcwogKiBJbW11bml6YXRpb24gY292ZXJhZ2UgZm9yIE1lYXNsZXMgY29udGFpbmluZyB2YWNjaW5lIChFc3RpbWF0ZWQgRGVub21pbmF0b3IpIAogKiBDb21wYXJlcyB0aGUgYWRtaW5pc3RlcmVkIGRvc2VzIG9mIG1lYXNsZXMgY29udGFpbmluZyB2YWNjaW5lcyAoTUNWKSB3aXRoIHRoZSBlc3RpbWF0ZWQgbnVtYmVyIG9mIHN1cnZpdmluZyBpbmZhbnRzIChpZiBkb3NlIDEpIG9yIGEgY291bnRyeSBzdXBwbGllZCBkZW5vbWluYXRvciAoaWYgZG9zZSAyKSBleHByZXNzZWQgYXMgYSBwZXJjZW50YWdlLiAKICogCiAqIE51bWVyYXRvcjogTnVtYmVyIG9mIGFkbWluaXN0cmF0aW9ucyBvZiB2YWNjaW5hdGlvbnMgY29udGFpbmluZyBhIE1lYXNsZXMgY29tcG9uZW50IGR1cmluZyByZXBvcnRpbmcgcGVyaW9kIAogKiBOdW1lcmF0b3IgQ29tcHV0YXRpb246IENPVU5UIGltbXVuaXphdGlvbiBldmVudHMgV0hFUkUgYWRtaW5pc3RlcmVkIHByb2R1Y3QgaXMgYSBNZWFzbGVzIHZhY2NpbmUgKElNTVouQTEuREU5KSBkdXJpbmcgcmVwb3J0aW5nIHBlcmlvZAogKiBEZW5vbWluYXRvcjogRXN0aW1hdGVkIG51bWJlciBvZiBzdXJ2aXZpbmcgaW5mYW50cyAoZm9yIGRvc2UgMSkgYW5kIGNvdW50cnkgc3VwcGxpZWQgZGVub21pbmF0b3IgZm9yIGRvc2Ugc2VxdWVuY2UgMiAoc2VlIGNvbW1lbnRzKQogKiBEZW5vbWluYXRvciBDb21wdXRhdGlvbjogUEFSQU1FVEVSIG51bWJlciBvZiBzdXJ2aXZpbmcgaW5mYW50cyAoaWYgRG9zZSBTZXF1ZW5jZSA9IDEpIG9yIFBBUkFNRVRFUiBvZiBjb3VudHJ5IHN1cHBsaWVkIGRlbm9taW5hdG9yIChpZiBEb3NlIFNlcXVlbmNlID0gMikKICogCiAqIERpc2FnZ3JlZ2F0aW9uOgogKiAgIC0gRG9zZSBTZXF1ZW5jZSAoMSwgMikKICogICAtIEFnZSBHcm91cCAoPCAxIHllYXIgb3IgPiAxIHllYXIpCiAqICAgLSBHZW9ncmFwaGljIFJlZ2lvbgogKiAgIC0gQWRtaW5pc3RyYXRpdmUgR2VuZGVyIChvciBCaW9sb2dpY2FsIFNleCkKICogCiAqIFJlZmVyZW5jZXM6IFdITyBJbW11bml6YXRpb24gRmFjaWxpdHkgQW5hbHlzaXMgR3VpZGUgKDEpLCBXSE8gLyBVTklDRUYgSm9pbnQgUmVwb3J0aW5nIEZvcm0gKDMgLSBlbGVtZW50cyA0MjQwIGFuZCA0MjYwICkKICovCgpsaWJyYXJ5IElNTVpJTkRNZWFzbGVzCgovLyBTdGFydCBTa2VsZXRvbiBDUUwKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBJTU1aQ29tbW9uIGNhbGxlZCBJTU1aQ29tCmluY2x1ZGUgSU1NWkNvbmNlcHRzIGNhbGxlZCBJTU1aYwppbmNsdWRlIElNTVpDb25maWcgY2FsbGVkIElNTVpDb24KaW5jbHVkZSBJTU1aSW5kaWNhdG9yQ29tbW9uIGNhbGxlZCBJTU1aSW5kQ29tCmluY2x1ZGUgSU1NWlZhY2NpbmVMaWJyYXJ5IGNhbGxlZCBJTU1admwKaW5jbHVkZSBGSElSQ29tbW9uIGNhbGxlZCBGQwppbmNsdWRlIElNTVpEMkRUTWVhc2xlcyBjYWxsZWQgTWVhc2xlcwovLyBFbmQgU2tlbGV0b24gQ1FMCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlPgoKY29udGV4dCBQYXRpZW50CgovKgpkZWZpbmUgIk1DViBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCBEdXJpbmcgTWVhc3VyZW1lbnQgUGVyaW9kIjoKICAgIE1lYXNsZXMuIk1DViBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIgSSAKICAgIHdoZXJlIElNTVpDb20uVG9EYXRlKEkub2NjdXJyZW5jZSkgZHVyaW5nICJNZWFzdXJlbWVudCBQZXJpb2QiCiovCgpkZWZpbmUgZnVuY3Rpb24gIk1lYXN1cmUgT2JzZXJ2YXRpb24iIChQYXRpZW50ICJQYXRpZW50Iik6CiAgMQoKLyoKICogVGFyZ2V0IHBvcHVsYXRpb24gZm9yIGZpcnN0IGRvc2U6IEFueSBvbmUgb3ZlciA5IChpbiBoaWdoIHRyYW5zbWlzc2lvbiBhcmVhKSBvciAxMiAoaW4gbG93IHRyYW5zbWlzc2lvbiBhcmVhKSBtb250aHMgb2xkCiAqLyAKZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24gMDUiOgoJTWVhc2xlcy4iRmlyc3QgTUNWIERvc2UgQWRtaW5pc3RlcmVkIHRvIFBhdGllbnQiIEkgd2hlcmUgSU1NWkNvbS5Ub0RhdGUoSS5vY2N1cnJlbmNlKSBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIKCi8qCiAqIE51bWVyYXRvciBmb3IgZmlyc3QgZG9zZTogQW55b25lIGhhdmluZyByZWNlaXZlZCB0aGUgZmlyc3QgZG9zZQogKi8KZGVmaW5lICJNZWFzdXJlIFBvcHVsYXRpb24gMDUiOgoJIkluaXRpYWwgUG9wdWxhdGlvbiAwNSIKCi8qCiAqIFRhcmdldCBwb3B1bGF0aW9uIGZvciBzZWNvbmQgZG9zZTogQW55IG9uZSBvdmVyIDE1IG1vbnRocwogKi8gCmRlZmluZSAiSW5pdGlhbCBQb3B1bGF0aW9uIDQwIjoKCU1lYXNsZXMuIlNlY29uZCBNQ1YgRG9zZSBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIgSSB3aGVyZSBJTU1aQ29tLlRvRGF0ZShJLm9jY3VycmVuY2UpIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIgoKLyoKICogTnVtZXJhdG9yIGZvciBzZWNvbmQgZG9zZTogQW55b25lIGhhdmluZyByZWNlaXZlZCB0aGUgZmlyc3QgZG9zZQogKi8KZGVmaW5lICJNZWFzdXJlIFBvcHVsYXRpb24gNDAiOgoJIkluaXRpYWwgUG9wdWxhdGlvbiA0MCIKCgovKgogKiBDb21iaW5lZCBzdHJhdGlmaWVycwogKi8KZGVmaW5lICJTdHJhdGlmaWNhdGlvbiI6CgkJSU1NWkluZENvbS4iQnkgQWRtaW5pc3RyYXRpdmUgR2VuZGVyIFN0cmF0aWZpZXIiLmNvZGUgKyAnOicgKyBJTU1aSW5kQ29tLiJUb2RkbGVyIEJ5IEFnZSBTdHJhdGlmaWVyIi5jb2RlICsgJzonICsgSU1NWkluZENvbS4iQnkgR2VvZ3JhcGhpYyBSZWdpb24gU3RyYXRpZmllciIKCgo="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}