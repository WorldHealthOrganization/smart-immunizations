{
  "resourceType": "Library",
  "id": "IMMZConcepts",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://smart.who.int/ig/smart-immunizations/Library/IMMZConcepts",
  "name": "IMMZConcepts",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "Code system ICD-10",
    "resource": "http://hl7.org/fhir/sid/icd-10"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system RxNorm",
    "resource": "http://www.nlm.nih.gov/research/umls/rxnorm"
  }, {
    "type": "depends-on",
    "display": "Code system CIEL",
    "resource": "http://hl7.org/fhir/sid/ciel"
  }, {
    "type": "depends-on",
    "display": "Code system ICD-11",
    "resource": "http://hl7.org/fhir/sid/icd-11"
  }, {
    "type": "depends-on",
    "display": "Code system ICHI",
    "resource": "https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi"
  }, {
    "type": "depends-on",
    "display": "Code system ICF",
    "resource": "http://hl7.org/fhir/sid/icf-nl"
  }, {
    "type": "depends-on",
    "display": "Code system Extended Codes CodeSystem codes",
    "resource": "http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.C",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.C"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.D1",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.D1"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.D",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.D"
  }, {
    "type": "depends-on",
    "display": "Value set WHO ATC",
    "resource": "http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips"
  }, {
    "type": "depends-on",
    "display": "Value set Negative Result",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Negativetestresult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Positive Result",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/PositiveTestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Immunocompromised",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Immunocompromised-values"
  }, {
    "type": "depends-on",
    "display": "Value set Live Attenuated",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/LiveAttenuatedVaccines"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/HIVstatus-values"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV positive Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV negative Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47"
  }, {
    "type": "depends-on",
    "display": "Value set ARV Drugs",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/ARVDrugs-values"
  }, {
    "type": "depends-on",
    "display": "Value set MCV Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE9"
  }, {
    "type": "depends-on",
    "display": "Value set Yellow Fever Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE23"
  }, {
    "type": "depends-on",
    "display": "Value set Polio Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE14"
  }, {
    "type": "depends-on",
    "display": "Value set Polio Vaccine - bOPV",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE30"
  }, {
    "type": "depends-on",
    "display": "Value set Polio Vaccine - IPV",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE31"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis B Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE6"
  }, {
    "type": "depends-on",
    "display": "Value set DTP Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE24"
  }, {
    "type": "depends-on",
    "display": "Value set Tetanus and Diphtheria Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE28"
  }, {
    "type": "depends-on",
    "display": "Value set Pertussis Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE12"
  }, {
    "type": "depends-on",
    "display": "Value set Rubella Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE17"
  }, {
    "type": "depends-on",
    "display": "Value set Measles and Rubella Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE32"
  }, {
    "type": "depends-on",
    "display": "Value set All Rubella Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE17.All"
  }, {
    "type": "depends-on",
    "display": "Value set Mumps Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.Z.DE11"
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBJTU1aQ29uY2VwdHMNCg0KLy8gQ29kZSBTeXN0ZW1zDQovL1Byb2JhYmx5IGNhbiBkZWxldGUgdGhlc2Ugb25jZSBpbXBvcnRlZCBXSE9Db25jZXB0cw0KY29kZXN5c3RlbSAiSUNELTEwIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvc2lkL2ljZC0xMCcNCmNvZGVzeXN0ZW0gIlNOT01FRC1DVCI6ICdodHRwOi8vc25vbWVkLmluZm8vc2N0Jw0KY29kZXN5c3RlbSAiTE9JTkMiOiAnaHR0cDovL2xvaW5jLm9yZycNCmNvZGVzeXN0ZW0gIlJ4Tm9ybSI6ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJw0KY29kZXN5c3RlbSAiQ0lFTCI6ICdodHRwOi8vaGw3Lm9yZy9maGlyL3NpZC9jaWVsJw0KY29kZXN5c3RlbSAiSUNELTExIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvc2lkL2ljZC0xMScNCmNvZGVzeXN0ZW0gIklDSEkiOiAnaHR0cHM6Ly9taXRlbC5kaW1pLnVuaXVkLml0L2ljaGkvI2h0dHA6Ly9pZC53aG8uaW50L2ljaGknDQpjb2Rlc3lzdGVtICJJQ0YiOiAnaHR0cDovL2hsNy5vcmcvZmhpci9zaWQvaWNmLW5sJw0KY29kZXN5c3RlbSAiRXh0ZW5kZWQgQ29kZXMgQ29kZVN5c3RlbSBjb2RlcyI6ICdodHRwOi8vZmhpci5vcmcvZ3VpZGVzL3doby9hbmMtY2RzL0NvZGVTeXN0ZW0vYW5jLWN1c3RvbS1jb2RlcycNCg0KY29kZXN5c3RlbSAiSU1NWi5DIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvQ29kZVN5c3RlbS9JTU1aLkMnDQpjb2Rlc3lzdGVtICJJTU1aLkQxIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvQ29kZVN5c3RlbS9JTU1aLkQxJw0KY29kZXN5c3RlbSAiSU1NWi5EIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvQ29kZVN5c3RlbS9JTU1aLkQnDQoNCi8vV0hPIEFUQyBJUFMgVmFsdWVzZXQNCnZhbHVlc2V0ICJXSE8gQVRDIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvdXYvaXBzL1ZhbHVlU2V0L3dob2F0Yy11di1pcHMnDQoNCi8vIEdlbmVyYWwgdXNlIFZhbHVlU2V0cyANCnZhbHVlc2V0ICJOZWdhdGl2ZSBSZXN1bHQiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9OZWdhdGl2ZXRlc3RyZXN1bHQtdmFsdWVzJw0KdmFsdWVzZXQgIlBvc2l0aXZlIFJlc3VsdCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L1Bvc2l0aXZlVGVzdFJlc3VsdC12YWx1ZXMnDQp2YWx1ZXNldCAiSW1tdW5vY29tcHJvbWlzZWQiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9JbW11bm9jb21wcm9taXNlZC12YWx1ZXMnDQovL3ZhbHVlc2V0ICJQYXRpZW50IGJpcnRoIHdlaWdodCBvYnNlcnZhdGlvbiB2YWx1ZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0JpcnRod2VpZ2h0LXZhbHVlcycNCi8vdmFsdWVzZXQgIlByZXRlcm1CaXJ0aCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L1ByZXRlcm0tdmFsdWVzJw0KdmFsdWVzZXQgIkxpdmUgQXR0ZW51YXRlZCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0xpdmVBdHRlbnVhdGVkVmFjY2luZXMnDQoNCi8vdmFsdWVzZXQgIlRhcmdldCBEaXNlYXNlIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaW1tdW5pemF0aW9uLXRhcmdldC1kaXNlYXNlJw0KDQp2YWx1ZXNldCAiSElWIHN0YXR1cyI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0hJVnN0YXR1cy12YWx1ZXMnDQp2YWx1ZXNldCAiSElWIHN0YXR1cyAtIEhJViBwb3NpdGl2ZSBDaG9pY2VzIjogJ2h0dHA6Ly9maGlyLm9yZy9ndWlkZXMvd2hvL2FuYy1jZHMvVmFsdWVTZXQvYW5jLWI5LWRlNDYnDQp2YWx1ZXNldCAiSElWIHN0YXR1cyAtIEhJViBuZWdhdGl2ZSBDaG9pY2VzIjogJ2h0dHA6Ly9maGlyLm9yZy9ndWlkZXMvd2hvL2FuYy1jZHMvVmFsdWVTZXQvYW5jLWI5LWRlNDcnDQoNCnZhbHVlc2V0ICJBUlYgRHJ1Z3MiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9BUlZEcnVncy12YWx1ZXMnDQoNCi8vIFZhY2NpbmUgVmFsdWUgU2V0cyANCg0KdmFsdWVzZXQgIk1DViBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFOScNCnZhbHVlc2V0ICJZZWxsb3cgRmV2ZXIgVmFjY2luZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouWi5ERTIzJw0KdmFsdWVzZXQgIlBvbGlvIFZhY2NpbmUiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9JTU1aLlouREUxNCcNCnZhbHVlc2V0ICJQb2xpbyBWYWNjaW5lIC0gYk9QViI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouWi5ERTMwJw0KdmFsdWVzZXQgIlBvbGlvIFZhY2NpbmUgLSBJUFYiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9JTU1aLlouREUzMScNCnZhbHVlc2V0ICJIZXBhdGl0aXMgQiBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFNicNCnZhbHVlc2V0ICJEVFAgVmFjY2luZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouWi5ERTI0Jw0KdmFsdWVzZXQgIlRldGFudXMgYW5kIERpcGh0aGVyaWEgVmFjY2luZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouWi5ERTI4Jw0KdmFsdWVzZXQgIlBlcnR1c3NpcyBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFMTInDQp2YWx1ZXNldCAiUnViZWxsYSBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFMTcnDQp2YWx1ZXNldCAiTWVhc2xlcyBhbmQgUnViZWxsYSBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFMzInDQp2YWx1ZXNldCAiQWxsIFJ1YmVsbGEgVmFjY2luZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouWi5ERTE3LkFsbCcNCnZhbHVlc2V0ICJNdW1wcyBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5aLkRFMTEnDQoNCg0KLyoNCi8vIFBsdWdpbiBpcyBjb21wbGFpbmluZyBhYm91dCBub3QgZmluZGluZyB0aGVzZSBzbyB0aGF0IHNob3VsZCBiZSByZXNvbHZlZCwgYnV0IGhlcmUgdW50aWwgaXQgY2FuIGJlIGZpeGVkDQp2YWx1ZXNldCAiQkNHIFZhY2NpbmUiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9JTU1aLkExLkRFMScNCnZhbHVlc2V0ICJDaG9sZXJhIFZhY2NpbmUiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9JTU1aLkExLkRFMicNCiovDQoNCg0KY29kZSAiQmlydGggV2VpZ2h0IGluIEdyYW1zIjogJ0RFMjknIGZyb20gIklNTVouRDEiIGRpc3BsYXkgJ0JpcnRoIFdlaWdodCBpbiBHcmFtcycNCmNvZGUgIlByZXRlcm0gQmlydGgiOiAnREUxNScgZnJvbSAiSU1NWi5EMSIgZGlzcGxheSAnUHJldGVybSBCaXJ0aCcNCg0KY29kZSAiQWR2ZXJzZSBFdmVudCBTZXZlcml0eSI6ICcyNDYxMTIwMDUnIGZyb20gIlNOT01FRC1DVCIgZGlzcGxheSAnU2V2ZXJpdHkgKGF0dHJpYnV0ZSknDQpjb2RlICJBZHZlcnNlIEV2ZW50IE1hbmlmZXN0YXRpb24iOiAnMjQ2MTEyMDA1JyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ1NldmVyaXR5IChhdHRyaWJ1dGUpJw0KDQpjb2RlICJDdXJyZW50bHkgUHJlZ25hbnQiOiAnREUxNjInIGZyb20gIklNTVouRCIgZGlzcGxheSAnQ3VycmVudGx5IFByZWduYW50Jw0KY29kZSAiUGxhbm5pbmcgdG8gZ2V0IHByZWduYW50IGluIHRoZSBuZXh0IG1vbnRoIjogJ0RFMTY5JyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1BsYW5uaW5nIHRvIGdldCBwcmVnbmFudCBpbiB0aGUgbmV4dCBtb250aCcNCmNvZGUgIlJlY2VpdmluZyBibG9vZCBwcm9kdWN0cyI6ICdERTE3MCcgZnJvbSAiSU1NWi5EIiBkaXNwbGF5ICdSZWNlaXZpbmcgYmxvb2QgcHJvZHVjdHMnDQpjb2RlICJTZXZlcmVseSBpbW11bm9zdXBwcmVzc2VkIjogJ0RFMTY1JyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1NldmVyZWx5IGltbXVub3N1cHByZXNzZWQnDQpjb2RlICJFeHBvc2VkIHRvIGltbXVub3N1cHByZXNzaXZlIHRyZWF0bWVudCI6ICdERTE2NCcgZnJvbSAiSU1NWi5EIiBkaXNwbGF5ICdFeHBvc2VkIHRvIGltbXVub3N1cHByZXNzaXZlIHRyZWF0bWVudCcNCmNvZGUgIkhpc3Rvcnkgb2YgYW5hcGh5bGFjdGljIHJlYWN0aW9ucyI6ICdERTE2NicgZnJvbSAiSU1NWi5EIiBkaXNwbGF5ICdIaXN0b3J5IG9mIGFuYXBoeWxhY3RpYyByZWFjdGlvbnMnDQpjb2RlICJTZXZlcmUgYWxsZXJnaWMgcmVhY3Rpb25zIjogJ0RFMTY3JyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1NldmVyZSBhbGxlcmdpYyByZWFjdGlvbnMnDQpjb2RlICJTeW1wdG9tYXRpYyBISVYgaW5mZWN0aW9uIjogJ0RFMTY4JyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1N5bXB0b21hdGljIEhJViBpbmZlY3Rpb24nDQpjb2RlICJUQiBkaXNlYXNlIjogJ0RFMTkwJyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1RCIGRpc2Vhc2UnDQpjb2RlICJJbW11bm9kZWZpY2llbmN5IHN5bmRyb21lcyI6ICdERTE4NycgZnJvbSAiSU1NWi5EIiBkaXNwbGF5ICdJbW11bm9kZWZpY2llbmN5IHN5bmRyb21lcycNCmNvZGUgIlNldmVyZWx5IGltbXVub2NvbXByb21pc2VkIjogJ0RFMjAwJyBmcm9tICJJTU1aLkQiIGRpc3BsYXkgJ1NldmVyZWx5IGltbXVub2NvbXByb21pc2VkJw0KY29kZSAiQnJlYXN0ZmVlZGluZyI6ICdERTE5MScgZnJvbSAiSU1NWi5EIiBkaXNwbGF5ICdCcmVhc3RmZWVkaW5nJw0KY29kZSAiU2V2ZXJlIGFjdXRlIGlsbG5lc3MiOiAnREUxODgnIGZyb20gIklNTVouRCIgZGlzcGxheSAnU2V2ZXJlIGFjdXRlIGlsbG5lc3MnDQo="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}