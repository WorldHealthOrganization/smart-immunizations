{
  "resourceType": "Library",
  "id": "IMMZConcepts",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://smart.who.int/ig/smart-immunizations/Library/IMMZConcepts",
  "name": "IMMZConcepts",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "Code system ICD-10",
    "resource": "http://hl7.org/fhir/sid/icd-10"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system RxNorm",
    "resource": "http://www.nlm.nih.gov/research/umls/rxnorm"
  }, {
    "type": "depends-on",
    "display": "Code system CIEL",
    "resource": "http://hl7.org/fhir/sid/ciel"
  }, {
    "type": "depends-on",
    "display": "Code system ICD-11",
    "resource": "http://hl7.org/fhir/sid/icd-11"
  }, {
    "type": "depends-on",
    "display": "Code system ICHI",
    "resource": "https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi"
  }, {
    "type": "depends-on",
    "display": "Code system ICF",
    "resource": "http://hl7.org/fhir/sid/icf-nl"
  }, {
    "type": "depends-on",
    "display": "Code system Extended Codes CodeSystem codes",
    "resource": "http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.C",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.C"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.D1",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.D1"
  }, {
    "type": "depends-on",
    "display": "Code system IMMZ.D4",
    "resource": "http://smart.who.int/ig/smart-immunizations/CodeSystem/IMMZ.D4"
  }, {
    "type": "depends-on",
    "display": "Value set WHO ATC",
    "resource": "http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips"
  }, {
    "type": "depends-on",
    "display": "Value set Negative Result",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Negativetestresult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Positive Result",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/PositiveTestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Immunocompromised",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Immunocompromised-values"
  }, {
    "type": "depends-on",
    "display": "Value set Patient birth weight observation value",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Birthweight-values"
  }, {
    "type": "depends-on",
    "display": "Value set PretermBirth",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/Preterm-values"
  }, {
    "type": "depends-on",
    "display": "Value set Live Attenuated",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/LiveAttenduatedVaccines"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/HIVstatus-values"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV positive Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV negative Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47"
  }, {
    "type": "depends-on",
    "display": "Value set ARV Drugs",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/ARVDrugs-values"
  }, {
    "type": "depends-on",
    "display": "Value set MCV Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.A1.DE9"
  }, {
    "type": "depends-on",
    "display": "Value set BCG Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.A1.DE1"
  }, {
    "type": "depends-on",
    "display": "Value set Cholera Vaccine",
    "resource": "http://smart.who.int/ig/smart-immunizations/ValueSet/IMMZ.A1.DE2"
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBJTU1aQ29uY2VwdHMNCg0KLy8gQ29kZSBTeXN0ZW1zDQovL1Byb2JhYmx5IGNhbiBkZWxldGUgdGhlc2Ugb25jZSBpbXBvcnRlZCBXSE9Db25jZXB0cw0KY29kZXN5c3RlbSAiSUNELTEwIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvc2lkL2ljZC0xMCcNCmNvZGVzeXN0ZW0gIlNOT01FRC1DVCI6ICdodHRwOi8vc25vbWVkLmluZm8vc2N0Jw0KY29kZXN5c3RlbSAiTE9JTkMiOiAnaHR0cDovL2xvaW5jLm9yZycNCmNvZGVzeXN0ZW0gIlJ4Tm9ybSI6ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJw0KY29kZXN5c3RlbSAiQ0lFTCI6ICdodHRwOi8vaGw3Lm9yZy9maGlyL3NpZC9jaWVsJw0KY29kZXN5c3RlbSAiSUNELTExIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvc2lkL2ljZC0xMScNCmNvZGVzeXN0ZW0gIklDSEkiOiAnaHR0cHM6Ly9taXRlbC5kaW1pLnVuaXVkLml0L2ljaGkvI2h0dHA6Ly9pZC53aG8uaW50L2ljaGknDQpjb2Rlc3lzdGVtICJJQ0YiOiAnaHR0cDovL2hsNy5vcmcvZmhpci9zaWQvaWNmLW5sJw0KY29kZXN5c3RlbSAiRXh0ZW5kZWQgQ29kZXMgQ29kZVN5c3RlbSBjb2RlcyI6ICdodHRwOi8vZmhpci5vcmcvZ3VpZGVzL3doby9hbmMtY2RzL0NvZGVTeXN0ZW0vYW5jLWN1c3RvbS1jb2RlcycNCg0KY29kZXN5c3RlbSAiSU1NWi5DIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvQ29kZVN5c3RlbS9JTU1aLkMnDQpjb2Rlc3lzdGVtICJJTU1aLkQxIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvQ29kZVN5c3RlbS9JTU1aLkQxJw0KY29kZXN5c3RlbSAiSU1NWi5ENCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL0NvZGVTeXN0ZW0vSU1NWi5ENCcNCg0KLy9XSE8gQVRDIElQUyBWYWx1ZXNldA0KdmFsdWVzZXQgIldITyBBVEMiOiAnaHR0cDovL2hsNy5vcmcvZmhpci91di9pcHMvVmFsdWVTZXQvd2hvYXRjLXV2LWlwcycNCg0KLy8gR2VuZXJhbCB1c2UgVmFsdWVTZXRzIA0KdmFsdWVzZXQgIk5lZ2F0aXZlIFJlc3VsdCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L05lZ2F0aXZldGVzdHJlc3VsdC12YWx1ZXMnDQp2YWx1ZXNldCAiUG9zaXRpdmUgUmVzdWx0IjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvUG9zaXRpdmVUZXN0UmVzdWx0LXZhbHVlcycNCnZhbHVlc2V0ICJJbW11bm9jb21wcm9taXNlZCI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0ltbXVub2NvbXByb21pc2VkLXZhbHVlcycNCnZhbHVlc2V0ICJQYXRpZW50IGJpcnRoIHdlaWdodCBvYnNlcnZhdGlvbiB2YWx1ZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0JpcnRod2VpZ2h0LXZhbHVlcycNCnZhbHVlc2V0ICJQcmV0ZXJtQmlydGgiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9QcmV0ZXJtLXZhbHVlcycNCnZhbHVlc2V0ICJMaXZlIEF0dGVudWF0ZWQiOiAnaHR0cDovL3NtYXJ0Lndoby5pbnQvaWcvc21hcnQtaW1tdW5pemF0aW9ucy9WYWx1ZVNldC9MaXZlQXR0ZW5kdWF0ZWRWYWNjaW5lcycNCg0KLy92YWx1ZXNldCAiVGFyZ2V0IERpc2Vhc2UiOiAnaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pbW11bml6YXRpb24tdGFyZ2V0LWRpc2Vhc2UnDQoNCnZhbHVlc2V0ICJISVYgc3RhdHVzIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSElWc3RhdHVzLXZhbHVlcycNCnZhbHVlc2V0ICJISVYgc3RhdHVzIC0gSElWIHBvc2l0aXZlIENob2ljZXMiOiAnaHR0cDovL2ZoaXIub3JnL2d1aWRlcy93aG8vYW5jLWNkcy9WYWx1ZVNldC9hbmMtYjktZGU0NicNCnZhbHVlc2V0ICJISVYgc3RhdHVzIC0gSElWIG5lZ2F0aXZlIENob2ljZXMiOiAnaHR0cDovL2ZoaXIub3JnL2d1aWRlcy93aG8vYW5jLWNkcy9WYWx1ZVNldC9hbmMtYjktZGU0NycNCg0KdmFsdWVzZXQgIkFSViBEcnVncyI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0FSVkRydWdzLXZhbHVlcycNCg0KLy8gVmFjY2luZSBWYWx1ZSBTZXRzDQoNCnZhbHVlc2V0ICJNQ1YgVmFjY2luZSI6ICdodHRwOi8vc21hcnQud2hvLmludC9pZy9zbWFydC1pbW11bml6YXRpb25zL1ZhbHVlU2V0L0lNTVouQTEuREU5Jw0KDQovLyBQbHVnaW4gaXMgY29tcGxhaW5pbmcgYWJvdXQgbm90IGZpbmRpbmcgdGhlc2Ugc28gdGhhdCBzaG91bGQgYmUgcmVzb2x2ZWQsIGJ1dCBoZXJlIHVudGlsIGl0IGNhbiBiZSBmaXhlZA0KdmFsdWVzZXQgIkJDRyBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5BMS5ERTEnDQp2YWx1ZXNldCAiQ2hvbGVyYSBWYWNjaW5lIjogJ2h0dHA6Ly9zbWFydC53aG8uaW50L2lnL3NtYXJ0LWltbXVuaXphdGlvbnMvVmFsdWVTZXQvSU1NWi5BMS5ERTInDQoNCg0KDQpjb2RlICJBZHZlcnNlIEV2ZW50IFNldmVyaXR5IjogJzI0NjExMjAwNScgZnJvbSAiU05PTUVELUNUIiBkaXNwbGF5ICdTZXZlcml0eSAoYXR0cmlidXRlKScNCmNvZGUgIkFkdmVyc2UgRXZlbnQgTWFuaWZlc3RhdGlvbiI6ICcyNDYxMTIwMDUnIGZyb20gIlNOT01FRC1DVCIgZGlzcGxheSAnU2V2ZXJpdHkgKGF0dHJpYnV0ZSknDQoNCmNvZGUgIkN1cnJlbnRseSBQcmVnbmFudCI6ICdERTE2MScgZnJvbSAiSU1NWi5ENCIgZGlzcGxheSAnQ3VycmVudGx5IFByZWduYW50Jw0KY29kZSAiU2V2ZXJlbHkgaW1tdW5vc3VwcHJlc3NlZCI6ICdERTE2NScgZnJvbSAiSU1NWi5ENCIgZGlzcGxheSAnU2V2ZXJlbHkgaW1tdW5vc3VwcHJlc3NlZCcgDQpjb2RlICJIaXN0b3J5IG9mIGFuYXBoeWxhY3RpYyByZWFjdGlvbnMiOiAnREUxNjYnIGZyb20gIklNTVouRDQiIGRpc3BsYXkgJ0hpc3Rvcnkgb2YgYW5hcGh5bGFjdGljIHJlYWN0aW9ucycNCmNvZGUgIlNldmVyZSBhbGxlcmdpYyByZWFjdGlvbnMiOiAnREUxNjcnIGZyb20gIklNTVouRDQiIGRpc3BsYXkgJ1NldmVyZSBhbGxlcmdpYyByZWFjdGlvbnMnDQpjb2RlICJTeW1wdG9tYXRpYyBISVYgaW5mZWN0aW9uIjogJ0RFMTY4JyBmcm9tICJJTU1aLkQ0IiBkaXNwbGF5ICdTeW1wdG9tYXRpYyBISVYgaW5mZWN0aW9uJw=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}