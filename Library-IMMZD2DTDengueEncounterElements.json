{
  "resourceType" : "Library",
  "id" : "IMMZD2DTDengueEncounterElements",
  "meta" : {
    "profile" : ["http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-shareablelibrary",
    "http://hl7.org/fhir/uv/crmi/StructureDefinition/crmi-publishablelibrary",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-library",
    "http://hl7.org/fhir/uv/cql/StructureDefinition/cql-module"]
  },
  "text" : {
    "status" : "extensions",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<div>\n    <table class=\"grid dict\">\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTDengueEncounterElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">IMMZD2DTDengueEncounterElements</td>\n        </tr>\n        \n\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">0.2.0</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\"><a href=\"Library-IMMZD2DTDengueEncounterElements.html\">IMMZD2DTDengueEncounterElements</a></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">draft</td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span><a href=\"http://terminology.hl7.org/6.5.0/CodeSystem-library-type.html\">http://terminology.hl7.org/CodeSystem/library-type</a></span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2025-09-19 13:06:04+0000</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">WHO</td>\n        </tr>\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\"><div><p>This library defines encounter-based elements for Dengue used throughout the Immunization CPG</p>\n</div></td>\n        </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n        <tr>\n            <th scope=\"row\"><b>Related Artifacts: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                \n                \n                <p><b>Dependencies</b></p>\n                <ul>\n                  \n                    <li><a href=\"Library-WHOConcepts.html\">WHOConcepts</a></li>\n                  \n                    <li><a href=\"Library-WHOCommon.html\">WHOCommon</a></li>\n                  \n                    <li><a href=\"Library-WHOElements.html\">WHOElements</a></li>\n                  \n                    <li><a href=\"Library-IMMZCommon.html\">IMMZCommon</a></li>\n                  \n                    <li><a href=\"Library-IMMZConcepts.html\">IMMZConcepts</a></li>\n                  \n                    <li><a href=\"Library-IMMZEncounterElements.html\">IMMZEncounterElements</a></li>\n                  \n                    <li><a href=\"Library-IMMZD2DTDengueElements.html\">IMMZD2DTDengueElements</a></li>\n                  \n                </ul>\n                \n                \n                \n                \n                \n            </td>\n        </tr>\n        \n\n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>Today</th><th>date</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>EncounterId</th><th>string</th><th>0</th><th>1</th><th>In</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Dengue Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Dengue Primary Series Doses Administered to Patient</th><th>Immunization</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Number of Dengue Primary Series Doses Administered</th><th>integer</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Date of Latest Dengue Dose</th><th>date</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>No dengue primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>One dengue primary series dose was administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Two dengue primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Three dengue primary series doses were administered</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is less than 9 years</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is more than 45 years</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's age is between 9 years and 45 years</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Dengue serostatus Observation</th><th>Observation</th><th>0</th><th>*</th><th>Out</th></tr>\n              \n                <tr><th>Client's dengue serostatus is negative</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>Client's dengue serostatus is positive</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest dengue dose was administered less than 6 months ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n                <tr><th>The latest dengue dose was administered more than 6 months ago</th><th>boolean</th><th>0</th><th>1</th><th>Out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n\n        \n\n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">\n/*\n  * Library: IMMZD2DTDengueEncounterElements\n  */\nlibrary IMMZD2DTDengueEncounterElements\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ninclude WHOConcepts\ninclude WHOCommon called WC\ninclude WHOElements called WE\n\ninclude IMMZCommon called Common\ninclude IMMZConcepts called Concepts\n\ninclude IMMZEncounterElements called Encounter\n\ninclude IMMZD2DTDengueElements called DengueElements\n\nparameter Today Date default Today()\nparameter EncounterId String\n\ncontext Patient\n\n/*\n@internal: Dengue containing Doses Administered to Patient\n*/\ndefine &quot;Dengue Doses Administered to Patient&quot;:\n  Encounter.&quot;Doses Administered to Patient&quot; I\n  where\n    I.vaccineCode in Concepts.&quot;Dengue vaccines&quot;\n\n/*\n@internal: Dengue containing Doses Administered to Patient that are in the Primary series\n*/\ndefine &quot;Dengue Primary Series Doses Administered to Patient&quot;:\n  &quot;Dengue Doses Administered to Patient&quot;.seriesPrimary()\n\n/*\n@internal: Number of Dengue Primary Series doses\n*/\ndefine &quot;Number of Dengue Primary Series Doses Administered&quot;:\n  Count(&quot;Dengue Primary Series Doses Administered to Patient&quot;)\n\n/*\n@internal: Date and time of last Dengue dose\n*/\ndefine &quot;Date of Latest Dengue Dose&quot;:\n  date from start of &quot;Dengue Doses Administered to Patient&quot;.mostRecent().occurrence.toInterval()\n\n/*\n@input: No dengue primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 0\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;No dengue primary series doses were administered&quot;:\n  &quot;Number of Dengue Primary Series Doses Administered&quot; = 0\n\n/*\n@input: One dengue primary series dose was administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 1\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;One dengue primary series dose was administered&quot;:\n  &quot;Number of Dengue Primary Series Doses Administered&quot; = 1\n\n/*\n@input: Two dengue primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 2\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;Two dengue primary series doses were administered&quot;:\n  &quot;Number of Dengue Primary Series Doses Administered&quot; = 2\n\n/*\n@input: Three dengue primary series doses were administered\n@pseudocode: Count of vaccines administered (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot; and &quot;Type of dose&quot; = &quot;Primary series&quot;) = 3\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;Three dengue primary series doses were administered&quot;:\n  &quot;Number of Dengue Primary Series Doses Administered&quot; = 3\n\n/*\n@input: Client's age is less than 9 years\n@pseudocode: Today's date − &quot;Date of birth&quot; &lt;  9 years\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;Client's age is less than 9 years&quot;:\n  Encounter.&quot;Current Patient Age In Years&quot; &lt; 9\n\n/*\n@input: Client's age is more than 45 years\n@pseudocode: Today's date − &quot;Date of birth&quot; &gt; 45 years\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;Client's age is more than 45 years&quot;:\n  Encounter.&quot;Current Patient Age In Years&quot; &gt; 45\n\n/*\n@input: Client's age is between 9 years and 45 years\n@pseudocode: 9 years ≤ Today's date − &quot;Date of birth&quot; ≤  45 years\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;Client's age is between 9 years and 45 years&quot;:\n  Encounter.&quot;Current Patient Age In Years&quot; &gt;= 9\n  and Encounter.&quot;Current Patient Age In Years&quot; &lt;= 45\n\n/*\n@internal: Dengue serostatus Observation\n*/\ndefine &quot;Dengue serostatus Observation&quot;:\n  DengueElements.&quot;Dengue serostatus Observation&quot;.encounterOrOnBefore(EncounterId, Today)\n\n/*\n@input: Client's dengue serostatus is negative\n@pseudocode: &quot;Dengue serostatus&quot; = &quot;Negative&quot;\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n*/\ndefine &quot;Client's dengue serostatus is negative&quot;:\n  First( &quot;Dengue serostatus Observation&quot; ).value ~ Concepts.&quot;Dengue-Negative&quot;\n\n/*\n@input: Client's dengue serostatus is positive\n@pseudocode: &quot;Dengue serostatus&quot; = &quot;Positive&quot;\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n*/\ndefine &quot;Client's dengue serostatus is positive&quot;:\n  First( &quot;Dengue serostatus Observation&quot; ).value ~ Concepts.&quot;Dengue-Positive&quot;\n\n/*\n@input: The latest dengue dose was administered less than 6 months ago\n@pseudocode: Today's date - Latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot;) &lt; 6 months\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;The latest dengue dose was administered less than 6 months ago&quot;:\n  &quot;Date of Latest Dengue Dose&quot; is not null\n  and duration in months between &quot;Date of Latest Dengue Dose&quot; and Today &lt; 6\n\n/*\n@input: The latest dengue dose was administered more than 6 months ago\n@pseudocode: Today's date - Latest &quot;Date and time of vaccination&quot; (where &quot;Vaccine type&quot; = &quot;Dengue vaccines&quot;) ≥ 6 months\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule with pre-vaccination screening, the recommended strategy where feasible (pre-vaccination screening whereby only those tested seropositive would be vaccinated)\n@decision: CYD-TDV (Dengvaxia), 3-dose schedule without pre-vaccination screening [when pre-vaccination screening is not feasible and in areas with recent documentation of seroprevalence rates of at least 80% by age 9 years]\n*/\ndefine &quot;The latest dengue dose was administered more than 6 months ago&quot;:\n  &quot;Date of Latest Dengue Dose&quot; is not null\n  and duration in months between &quot;Date of Latest Dengue Dose&quot; and Today &gt;= 6\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (66084 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>\n</div>"
  },
  "extension" : [{
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability",
    "valueCode" : "computable"
  }],
  "url" : "http://smart.who.int/immunizations/Library/IMMZD2DTDengueEncounterElements",
  "version" : "0.2.0",
  "name" : "IMMZD2DTDengueEncounterElements",
  "title" : "IMMZD2DTDengueEncounterElements",
  "status" : "draft",
  "experimental" : false,
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2025-09-19T13:06:04+00:00",
  "publisher" : "WHO",
  "contact" : [{
    "name" : "WHO",
    "telecom" : [{
      "system" : "url",
      "value" : "http://who.int"
    }]
  }],
  "description" : "This library defines encounter-based elements for Dengue used throughout the Immunization CPG",
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "Library WHOConcepts",
    "resource" : "http://smart.who.int/immunizations/Library/WHOConcepts"
  },
  {
    "type" : "depends-on",
    "display" : "Library WC",
    "resource" : "http://smart.who.int/immunizations/Library/WHOCommon"
  },
  {
    "type" : "depends-on",
    "display" : "Library WE",
    "resource" : "http://smart.who.int/immunizations/Library/WHOElements"
  },
  {
    "type" : "depends-on",
    "display" : "Library Common",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZCommon"
  },
  {
    "type" : "depends-on",
    "display" : "Library Concepts",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZConcepts"
  },
  {
    "type" : "depends-on",
    "display" : "Library Encounter",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZEncounterElements"
  },
  {
    "type" : "depends-on",
    "display" : "Library DengueElements",
    "resource" : "http://smart.who.int/immunizations/Library/IMMZD2DTDengueElements"
  }],
  "parameter" : [{
    "name" : "Today",
    "use" : "in",
    "min" : 0,
    "max" : "1",
    "type" : "date"
  },
  {
    "name" : "EncounterId",
    "use" : "in",
    "min" : 0,
    "max" : "1",
    "type" : "string"
  },
  {
    "name" : "Patient",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Patient"
  },
  {
    "name" : "Dengue Doses Administered to Patient",
    "use" : "out",
    "min" : 0,
    "max" : "*",
    "type" : "Immunization"
  },
  {
    "name" : "Dengue Primary Series Doses Administered to Patient",
    "use" : "out",
    "min" : 0,
    "max" : "*",
    "type" : "Immunization"
  },
  {
    "name" : "Number of Dengue Primary Series Doses Administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "integer"
  },
  {
    "name" : "Date of Latest Dengue Dose",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "date"
  },
  {
    "name" : "No dengue primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "One dengue primary series dose was administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Two dengue primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Three dengue primary series doses were administered",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is less than 9 years",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is more than 45 years",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's age is between 9 years and 45 years",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Dengue serostatus Observation",
    "use" : "out",
    "min" : 0,
    "max" : "*",
    "type" : "Observation"
  },
  {
    "name" : "Client's dengue serostatus is negative",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "Client's dengue serostatus is positive",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest dengue dose was administered less than 6 months ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  },
  {
    "name" : "The latest dengue dose was administered more than 6 months ago",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "boolean"
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : "Ci8qCiAgKiBMaWJyYXJ5OiBJTU1aRDJEVERlbmd1ZUVuY291bnRlckVsZW1lbnRzCiAgKi8KbGlicmFyeSBJTU1aRDJEVERlbmd1ZUVuY291bnRlckVsZW1lbnRzCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwoKaW5jbHVkZSBXSE9Db25jZXB0cwppbmNsdWRlIFdIT0NvbW1vbiBjYWxsZWQgV0MKaW5jbHVkZSBXSE9FbGVtZW50cyBjYWxsZWQgV0UKCmluY2x1ZGUgSU1NWkNvbW1vbiBjYWxsZWQgQ29tbW9uCmluY2x1ZGUgSU1NWkNvbmNlcHRzIGNhbGxlZCBDb25jZXB0cwoKaW5jbHVkZSBJTU1aRW5jb3VudGVyRWxlbWVudHMgY2FsbGVkIEVuY291bnRlcgoKaW5jbHVkZSBJTU1aRDJEVERlbmd1ZUVsZW1lbnRzIGNhbGxlZCBEZW5ndWVFbGVtZW50cwoKcGFyYW1ldGVyIFRvZGF5IERhdGUgZGVmYXVsdCBUb2RheSgpCnBhcmFtZXRlciBFbmNvdW50ZXJJZCBTdHJpbmcKCmNvbnRleHQgUGF0aWVudAoKLyoKQGludGVybmFsOiBEZW5ndWUgY29udGFpbmluZyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudAoqLwpkZWZpbmUgIkRlbmd1ZSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCI6CiAgRW5jb3VudGVyLiJEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIgSQogIHdoZXJlCiAgICBJLnZhY2NpbmVDb2RlIGluIENvbmNlcHRzLiJEZW5ndWUgdmFjY2luZXMiCgovKgpAaW50ZXJuYWw6IERlbmd1ZSBjb250YWluaW5nIERvc2VzIEFkbWluaXN0ZXJlZCB0byBQYXRpZW50IHRoYXQgYXJlIGluIHRoZSBQcmltYXJ5IHNlcmllcwoqLwpkZWZpbmUgIkRlbmd1ZSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCI6CiAgIkRlbmd1ZSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIuc2VyaWVzUHJpbWFyeSgpCgovKgpAaW50ZXJuYWw6IE51bWJlciBvZiBEZW5ndWUgUHJpbWFyeSBTZXJpZXMgZG9zZXMKKi8KZGVmaW5lICJOdW1iZXIgb2YgRGVuZ3VlIFByaW1hcnkgU2VyaWVzIERvc2VzIEFkbWluaXN0ZXJlZCI6CiAgQ291bnQoIkRlbmd1ZSBQcmltYXJ5IFNlcmllcyBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIpCgovKgpAaW50ZXJuYWw6IERhdGUgYW5kIHRpbWUgb2YgbGFzdCBEZW5ndWUgZG9zZQoqLwpkZWZpbmUgIkRhdGUgb2YgTGF0ZXN0IERlbmd1ZSBEb3NlIjoKICBkYXRlIGZyb20gc3RhcnQgb2YgIkRlbmd1ZSBEb3NlcyBBZG1pbmlzdGVyZWQgdG8gUGF0aWVudCIubW9zdFJlY2VudCgpLm9jY3VycmVuY2UudG9JbnRlcnZhbCgpCgovKgpAaW5wdXQ6IE5vIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJEZW5ndWUgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMApAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRoIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcsIHRoZSByZWNvbW1lbmRlZCBzdHJhdGVneSB3aGVyZSBmZWFzaWJsZSAocHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyB3aGVyZWJ5IG9ubHkgdGhvc2UgdGVzdGVkIHNlcm9wb3NpdGl2ZSB3b3VsZCBiZSB2YWNjaW5hdGVkKQpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRob3V0IHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgW3doZW4gcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBpcyBub3QgZmVhc2libGUgYW5kIGluIGFyZWFzIHdpdGggcmVjZW50IGRvY3VtZW50YXRpb24gb2Ygc2Vyb3ByZXZhbGVuY2UgcmF0ZXMgb2YgYXQgbGVhc3QgODAlIGJ5IGFnZSA5IHllYXJzXQoqLwpkZWZpbmUgIk5vIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZCI6CiAgIk51bWJlciBvZiBEZW5ndWUgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDAKCi8qCkBpbnB1dDogT25lIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlIHdhcyBhZG1pbmlzdGVyZWQKQHBzZXVkb2NvZGU6IENvdW50IG9mIHZhY2NpbmVzIGFkbWluaXN0ZXJlZCAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiRGVuZ3VlIHZhY2NpbmVzIiBhbmQgIlR5cGUgb2YgZG9zZSIgPSAiUHJpbWFyeSBzZXJpZXMiKSA9IDEKQGRlY2lzaW9uOiBDWUQtVERWIChEZW5ndmF4aWEpLCAzLWRvc2Ugc2NoZWR1bGUgd2l0aCBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nLCB0aGUgcmVjb21tZW5kZWQgc3RyYXRlZ3kgd2hlcmUgZmVhc2libGUgKHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgd2hlcmVieSBvbmx5IHRob3NlIHRlc3RlZCBzZXJvcG9zaXRpdmUgd291bGQgYmUgdmFjY2luYXRlZCkKQGRlY2lzaW9uOiBDWUQtVERWIChEZW5ndmF4aWEpLCAzLWRvc2Ugc2NoZWR1bGUgd2l0aG91dCBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIFt3aGVuIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgaXMgbm90IGZlYXNpYmxlIGFuZCBpbiBhcmVhcyB3aXRoIHJlY2VudCBkb2N1bWVudGF0aW9uIG9mIHNlcm9wcmV2YWxlbmNlIHJhdGVzIG9mIGF0IGxlYXN0IDgwJSBieSBhZ2UgOSB5ZWFyc10KKi8KZGVmaW5lICJPbmUgZGVuZ3VlIHByaW1hcnkgc2VyaWVzIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCI6CiAgIk51bWJlciBvZiBEZW5ndWUgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDEKCi8qCkBpbnB1dDogVHdvIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJEZW5ndWUgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMgpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRoIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcsIHRoZSByZWNvbW1lbmRlZCBzdHJhdGVneSB3aGVyZSBmZWFzaWJsZSAocHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyB3aGVyZWJ5IG9ubHkgdGhvc2UgdGVzdGVkIHNlcm9wb3NpdGl2ZSB3b3VsZCBiZSB2YWNjaW5hdGVkKQpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRob3V0IHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgW3doZW4gcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBpcyBub3QgZmVhc2libGUgYW5kIGluIGFyZWFzIHdpdGggcmVjZW50IGRvY3VtZW50YXRpb24gb2Ygc2Vyb3ByZXZhbGVuY2UgcmF0ZXMgb2YgYXQgbGVhc3QgODAlIGJ5IGFnZSA5IHllYXJzXQoqLwpkZWZpbmUgIlR3byBkZW5ndWUgcHJpbWFyeSBzZXJpZXMgZG9zZXMgd2VyZSBhZG1pbmlzdGVyZWQiOgogICJOdW1iZXIgb2YgRGVuZ3VlIFByaW1hcnkgU2VyaWVzIERvc2VzIEFkbWluaXN0ZXJlZCIgPSAyCgovKgpAaW5wdXQ6IFRocmVlIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZApAcHNldWRvY29kZTogQ291bnQgb2YgdmFjY2luZXMgYWRtaW5pc3RlcmVkICh3aGVyZSAiVmFjY2luZSB0eXBlIiA9ICJEZW5ndWUgdmFjY2luZXMiIGFuZCAiVHlwZSBvZiBkb3NlIiA9ICJQcmltYXJ5IHNlcmllcyIpID0gMwpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRoIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcsIHRoZSByZWNvbW1lbmRlZCBzdHJhdGVneSB3aGVyZSBmZWFzaWJsZSAocHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyB3aGVyZWJ5IG9ubHkgdGhvc2UgdGVzdGVkIHNlcm9wb3NpdGl2ZSB3b3VsZCBiZSB2YWNjaW5hdGVkKQpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRob3V0IHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgW3doZW4gcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBpcyBub3QgZmVhc2libGUgYW5kIGluIGFyZWFzIHdpdGggcmVjZW50IGRvY3VtZW50YXRpb24gb2Ygc2Vyb3ByZXZhbGVuY2UgcmF0ZXMgb2YgYXQgbGVhc3QgODAlIGJ5IGFnZSA5IHllYXJzXQoqLwpkZWZpbmUgIlRocmVlIGRlbmd1ZSBwcmltYXJ5IHNlcmllcyBkb3NlcyB3ZXJlIGFkbWluaXN0ZXJlZCI6CiAgIk51bWJlciBvZiBEZW5ndWUgUHJpbWFyeSBTZXJpZXMgRG9zZXMgQWRtaW5pc3RlcmVkIiA9IDMKCi8qCkBpbnB1dDogQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiA5IHllYXJzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiA8ICA5IHllYXJzCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGggcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZywgdGhlIHJlY29tbWVuZGVkIHN0cmF0ZWd5IHdoZXJlIGZlYXNpYmxlIChwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIHdoZXJlYnkgb25seSB0aG9zZSB0ZXN0ZWQgc2Vyb3Bvc2l0aXZlIHdvdWxkIGJlIHZhY2NpbmF0ZWQpCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGhvdXQgcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBbd2hlbiBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIGlzIG5vdCBmZWFzaWJsZSBhbmQgaW4gYXJlYXMgd2l0aCByZWNlbnQgZG9jdW1lbnRhdGlvbiBvZiBzZXJvcHJldmFsZW5jZSByYXRlcyBvZiBhdCBsZWFzdCA4MCUgYnkgYWdlIDkgeWVhcnNdCiovCmRlZmluZSAiQ2xpZW50J3MgYWdlIGlzIGxlc3MgdGhhbiA5IHllYXJzIjoKICBFbmNvdW50ZXIuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gWWVhcnMiIDwgOQoKLyoKQGlucHV0OiBDbGllbnQncyBhZ2UgaXMgbW9yZSB0aGFuIDQ1IHllYXJzCkBwc2V1ZG9jb2RlOiBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiA+IDQ1IHllYXJzCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGggcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZywgdGhlIHJlY29tbWVuZGVkIHN0cmF0ZWd5IHdoZXJlIGZlYXNpYmxlIChwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIHdoZXJlYnkgb25seSB0aG9zZSB0ZXN0ZWQgc2Vyb3Bvc2l0aXZlIHdvdWxkIGJlIHZhY2NpbmF0ZWQpCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGhvdXQgcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBbd2hlbiBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIGlzIG5vdCBmZWFzaWJsZSBhbmQgaW4gYXJlYXMgd2l0aCByZWNlbnQgZG9jdW1lbnRhdGlvbiBvZiBzZXJvcHJldmFsZW5jZSByYXRlcyBvZiBhdCBsZWFzdCA4MCUgYnkgYWdlIDkgeWVhcnNdCiovCmRlZmluZSAiQ2xpZW50J3MgYWdlIGlzIG1vcmUgdGhhbiA0NSB5ZWFycyI6CiAgRW5jb3VudGVyLiJDdXJyZW50IFBhdGllbnQgQWdlIEluIFllYXJzIiA+IDQ1CgovKgpAaW5wdXQ6IENsaWVudCdzIGFnZSBpcyBiZXR3ZWVuIDkgeWVhcnMgYW5kIDQ1IHllYXJzCkBwc2V1ZG9jb2RlOiA5IHllYXJzIOKJpCBUb2RheSdzIGRhdGUg4oiSICJEYXRlIG9mIGJpcnRoIiDiiaQgIDQ1IHllYXJzCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGggcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZywgdGhlIHJlY29tbWVuZGVkIHN0cmF0ZWd5IHdoZXJlIGZlYXNpYmxlIChwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIHdoZXJlYnkgb25seSB0aG9zZSB0ZXN0ZWQgc2Vyb3Bvc2l0aXZlIHdvdWxkIGJlIHZhY2NpbmF0ZWQpCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGhvdXQgcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBbd2hlbiBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIGlzIG5vdCBmZWFzaWJsZSBhbmQgaW4gYXJlYXMgd2l0aCByZWNlbnQgZG9jdW1lbnRhdGlvbiBvZiBzZXJvcHJldmFsZW5jZSByYXRlcyBvZiBhdCBsZWFzdCA4MCUgYnkgYWdlIDkgeWVhcnNdCiovCmRlZmluZSAiQ2xpZW50J3MgYWdlIGlzIGJldHdlZW4gOSB5ZWFycyBhbmQgNDUgeWVhcnMiOgogIEVuY291bnRlci4iQ3VycmVudCBQYXRpZW50IEFnZSBJbiBZZWFycyIgPj0gOQogIGFuZCBFbmNvdW50ZXIuIkN1cnJlbnQgUGF0aWVudCBBZ2UgSW4gWWVhcnMiIDw9IDQ1CgovKgpAaW50ZXJuYWw6IERlbmd1ZSBzZXJvc3RhdHVzIE9ic2VydmF0aW9uCiovCmRlZmluZSAiRGVuZ3VlIHNlcm9zdGF0dXMgT2JzZXJ2YXRpb24iOgogIERlbmd1ZUVsZW1lbnRzLiJEZW5ndWUgc2Vyb3N0YXR1cyBPYnNlcnZhdGlvbiIuZW5jb3VudGVyT3JPbkJlZm9yZShFbmNvdW50ZXJJZCwgVG9kYXkpCgovKgpAaW5wdXQ6IENsaWVudCdzIGRlbmd1ZSBzZXJvc3RhdHVzIGlzIG5lZ2F0aXZlCkBwc2V1ZG9jb2RlOiAiRGVuZ3VlIHNlcm9zdGF0dXMiID0gIk5lZ2F0aXZlIgpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRoIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcsIHRoZSByZWNvbW1lbmRlZCBzdHJhdGVneSB3aGVyZSBmZWFzaWJsZSAocHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyB3aGVyZWJ5IG9ubHkgdGhvc2UgdGVzdGVkIHNlcm9wb3NpdGl2ZSB3b3VsZCBiZSB2YWNjaW5hdGVkKQoqLwpkZWZpbmUgIkNsaWVudCdzIGRlbmd1ZSBzZXJvc3RhdHVzIGlzIG5lZ2F0aXZlIjoKICBGaXJzdCggIkRlbmd1ZSBzZXJvc3RhdHVzIE9ic2VydmF0aW9uIiApLnZhbHVlIH4gQ29uY2VwdHMuIkRlbmd1ZS1OZWdhdGl2ZSIKCi8qCkBpbnB1dDogQ2xpZW50J3MgZGVuZ3VlIHNlcm9zdGF0dXMgaXMgcG9zaXRpdmUKQHBzZXVkb2NvZGU6ICJEZW5ndWUgc2Vyb3N0YXR1cyIgPSAiUG9zaXRpdmUiCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGggcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZywgdGhlIHJlY29tbWVuZGVkIHN0cmF0ZWd5IHdoZXJlIGZlYXNpYmxlIChwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIHdoZXJlYnkgb25seSB0aG9zZSB0ZXN0ZWQgc2Vyb3Bvc2l0aXZlIHdvdWxkIGJlIHZhY2NpbmF0ZWQpCiovCmRlZmluZSAiQ2xpZW50J3MgZGVuZ3VlIHNlcm9zdGF0dXMgaXMgcG9zaXRpdmUiOgogIEZpcnN0KCAiRGVuZ3VlIHNlcm9zdGF0dXMgT2JzZXJ2YXRpb24iICkudmFsdWUgfiBDb25jZXB0cy4iRGVuZ3VlLVBvc2l0aXZlIgoKLyoKQGlucHV0OiBUaGUgbGF0ZXN0IGRlbmd1ZSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbGVzcyB0aGFuIDYgbW9udGhzIGFnbwpAcHNldWRvY29kZTogVG9kYXkncyBkYXRlIC0gTGF0ZXN0ICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiRGVuZ3VlIHZhY2NpbmVzIikgPCA2IG1vbnRocwpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRoIHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcsIHRoZSByZWNvbW1lbmRlZCBzdHJhdGVneSB3aGVyZSBmZWFzaWJsZSAocHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyB3aGVyZWJ5IG9ubHkgdGhvc2UgdGVzdGVkIHNlcm9wb3NpdGl2ZSB3b3VsZCBiZSB2YWNjaW5hdGVkKQpAZGVjaXNpb246IENZRC1URFYgKERlbmd2YXhpYSksIDMtZG9zZSBzY2hlZHVsZSB3aXRob3V0IHByZS12YWNjaW5hdGlvbiBzY3JlZW5pbmcgW3doZW4gcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBpcyBub3QgZmVhc2libGUgYW5kIGluIGFyZWFzIHdpdGggcmVjZW50IGRvY3VtZW50YXRpb24gb2Ygc2Vyb3ByZXZhbGVuY2UgcmF0ZXMgb2YgYXQgbGVhc3QgODAlIGJ5IGFnZSA5IHllYXJzXQoqLwpkZWZpbmUgIlRoZSBsYXRlc3QgZGVuZ3VlIGRvc2Ugd2FzIGFkbWluaXN0ZXJlZCBsZXNzIHRoYW4gNiBtb250aHMgYWdvIjoKICAiRGF0ZSBvZiBMYXRlc3QgRGVuZ3VlIERvc2UiIGlzIG5vdCBudWxsCiAgYW5kIGR1cmF0aW9uIGluIG1vbnRocyBiZXR3ZWVuICJEYXRlIG9mIExhdGVzdCBEZW5ndWUgRG9zZSIgYW5kIFRvZGF5IDwgNgoKLyoKQGlucHV0OiBUaGUgbGF0ZXN0IGRlbmd1ZSBkb3NlIHdhcyBhZG1pbmlzdGVyZWQgbW9yZSB0aGFuIDYgbW9udGhzIGFnbwpAcHNldWRvY29kZTogVG9kYXkncyBkYXRlIC0gTGF0ZXN0ICJEYXRlIGFuZCB0aW1lIG9mIHZhY2NpbmF0aW9uIiAod2hlcmUgIlZhY2NpbmUgdHlwZSIgPSAiRGVuZ3VlIHZhY2NpbmVzIikg4omlIDYgbW9udGhzCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGggcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZywgdGhlIHJlY29tbWVuZGVkIHN0cmF0ZWd5IHdoZXJlIGZlYXNpYmxlIChwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIHdoZXJlYnkgb25seSB0aG9zZSB0ZXN0ZWQgc2Vyb3Bvc2l0aXZlIHdvdWxkIGJlIHZhY2NpbmF0ZWQpCkBkZWNpc2lvbjogQ1lELVREViAoRGVuZ3ZheGlhKSwgMy1kb3NlIHNjaGVkdWxlIHdpdGhvdXQgcHJlLXZhY2NpbmF0aW9uIHNjcmVlbmluZyBbd2hlbiBwcmUtdmFjY2luYXRpb24gc2NyZWVuaW5nIGlzIG5vdCBmZWFzaWJsZSBhbmQgaW4gYXJlYXMgd2l0aCByZWNlbnQgZG9jdW1lbnRhdGlvbiBvZiBzZXJvcHJldmFsZW5jZSByYXRlcyBvZiBhdCBsZWFzdCA4MCUgYnkgYWdlIDkgeWVhcnNdCiovCmRlZmluZSAiVGhlIGxhdGVzdCBkZW5ndWUgZG9zZSB3YXMgYWRtaW5pc3RlcmVkIG1vcmUgdGhhbiA2IG1vbnRocyBhZ28iOgogICJEYXRlIG9mIExhdGVzdCBEZW5ndWUgRG9zZSIgaXMgbm90IG51bGwKICBhbmQgZHVyYXRpb24gaW4gbW9udGhzIGJldHdlZW4gIkRhdGUgb2YgTGF0ZXN0IERlbmd1ZSBEb3NlIiBhbmQgVG9kYXkgPj0gNgo="
  },
  {
    "contentType" : "application/elm+xml",
    "data" : ""
  }]
}